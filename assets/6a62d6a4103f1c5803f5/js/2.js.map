{"version":3,"file":"6a62d6a4103f1c5803f5/js/2.js","sources":["6a62d6a4103f1c5803f5/js/2.js","./app/test1/index.js","./web_modules/three/index.js","../exports-loader(query)THREE!./web_modules/three/Three.min.js","./app/test1/content.jade","../raw-loader!./app/test1/content.jade","../raw-loader!./app/test1/index.js"],"names":["webpackJsonp",25,"module","exports","require","render","start","init","camera","THREE","OrthographicCamera","position","x","y","z","scene","Scene","add","geometry","Geometry","vertices","push","Vertex","Vector3","i","line","Line","LineBasicMaterial","color","opacity","rotation","Math","PI","CubeGeometry","material","MeshLambertMaterial","shading","FlatShading","overdraw","cube","Mesh","scale","floor","random","ambientLight","AmbientLight","directionalLight","DirectionalLight","normalize","renderer","CanvasRenderer","setSize","$","append","domElement","animate","length","requestAnimationFrame","timer","Date","getTime","cos","sin","lookAt",26,27,"REVISION","self","Int32Array","Array","Float32Array","a","b","c","window","cancelAnimationFrame","g","max","e","setTimeout","clearTimeout","Clock","this","autoStart","elapsedTime","oldTime","startTime","running","prototype","now","stop","getElapsedTime","getDelta","Color","setHex","constructor","r","copy","copyGammaToLinear","copyLinearToGamma","sqrt","convertGammaToLinear","convertLinearToGamma","setRGB","setHSV","d","f","getHex","getContextStyle","clone","Vector2","set","addSelf","sub","subSelf","multiplyScalar","divideScalar","negate","dot","lengthSq","distanceTo","distanceToSquared","setLength","lerpSelf","equals","isZero","setX","setY","setZ","addScalar","multiply","multiplySelf","divideSelf","lengthManhattan","abs","cross","crossSelf","getPositionFromMatrix","n14","n24","n34","getRotationFromMatrix","n11","n12","n21","n22","h","n23","n33","asin","n13","atan2","getScaleFromMatrix","n31","n32","Vector4","w","Frustum","planes","setFromMatrix","n41","n42","n43","n44","contains","matrixWorld","__v1","getColumnX","getColumnY","getColumnZ","boundingSphere","radius","Ray","p","s","t","n","u","v","A","F","B","D","H","I","origin","direction","intersectObjects","apply","intersectObject","sort","distance","setPrecision","j","k","q","m","o","Particle","getPosition","point","face","object","l","E","matrixRotationWorld","extractRotation","faces","multiplyVector3","centroid","normal","doubleSided","flipSided","Face3","Face4","Rectangle","getX","getY","getWidth","getHeight","getLeft","getTop","getRight","getBottom","addPoint","add3Points","addRectangle","inflate","minSelf","intersects","empty","isEmpty","clamp","clampBottom","mapLinear","random16","randInt","randFloat","randFloatSpread","sign","Matrix3","transposeIntoArray","Matrix4","m33","identity","__v2","__v3","Q","P","L","K","O","multiplyToArray","multiplyVector4","rotateAxis","crossVector","determinant","transpose","flattenToArray","flattenToArrayOffset","setTranslation","setScale","setRotationX","setRotationY","setRotationZ","setRotationAxis","setPosition","getInverse","setRotationFromEuler","setRotationFromQuaternion","compose","__m1","__m2","decompose","Quaternion","setFromRotationMatrix","extractPosition","rotateByAxis","rotateX","rotateY","rotateZ","translate","makeInvert3x3","makeFrustum","makePerspective","tan","makeOrtho","Object3D","id","Object3DCount","name","parent","children","up","eulerOrder","renderDepth","rotationAutoUpdate","matrix","matrixWorldNeedsUpdate","matrixAutoUpdate","quaternion","useQuaternion","boundRadius","boundRadiusScale","visible","receiveShadow","castShadow","frustumCulled","_vector","applyMatrix","translateX","translateY","translateZ","console","warn","indexOf","remove","__addObject","splice","__removeObject","getChildByName","updateMatrix","updateMatrixWorld","Projector","RenderableObject","RenderableVertex","min","objects","sprites","lights","elements","projectVector","matrixWorldInverse","projectionMatrix","unprojectVector","projectionMatrixInverse","pickingRay","projectGraph","Sprite","Light","projectScene","C","S","R","ca","ka","ia","N","aa","U","ba","ea","Ta","Ja","near","far","materials","faceVertexUvs","positionWorld","positionScreen","RenderableFace3","v1","v2","v3","RenderableFace4","v4","normalWorld","centroidWorld","centroidScreen","vertexNormals","vertexNormalsWorld","uvs","faceMaterial","materialIndex","RenderableLine","RenderableParticle","setFromEuler","setFromAxisAngle","pow","calculateW","inverse","slerp","acos","vertexColors","vertexTangents","UV","GeometryCount","colors","faceUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","boundingBox","dynamic","hasTangents","computeCentroids","computeFaceNormals","computeVertexNormals","__tmpVertices","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","faceNormals","computeTangents","computeBoundingBox","computeBoundingSphere","mergeVertices","round","join","Spline","points","initFromArray","getPoint","getControlPointsArray","getLength","chunks","total","reparametrizeByArcLength","ceil","Camera","call","left","right","top","bottom","updateProjectionMatrix","PerspectiveCamera","fov","aspect","setLens","atan","setViewOffset","fullWidth","fullHeight","width","height","supr","target","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraTop","shadowCameraRight","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapHeight","shadowMapWidth","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMatrix","shadowCamera","shadowMapSize","shadowMap","PointLight","SpotLight","shadowCameraFov","Material","MaterialCount","transparent","blending","NormalBlending","depthTest","depthWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","NoShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","AdditiveAlphaBlending","linewidth","linecap","linejoin","fog","MeshBasicMaterial","map","lightMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","ambient","wrapAround","wrapRGB","MeshPhongMaterial","specular","shininess","metal","perPixel","MeshDepthMaterial","MeshNormalMaterial","MeshFaceMaterial","ParticleBasicMaterial","size","sizeAttenuation","ParticleCanvasMaterial","program","ParticleDOMMaterial","ShaderMaterial","fragmentShader","vertexShader","uniforms","attributes","Texture","TextureCount","image","mapping","UVMapping","wrapS","ClampToEdgeWrapping","wrapT","magFilter","LinearFilter","minFilter","LinearMipMapLinearFilter","format","RGBAFormat","type","UnsignedByteType","offset","repeat","generateMipmaps","needsUpdate","onUpdate","MixOperation","CubeReflectionMapping","CubeRefractionMapping","LatitudeReflectionMapping","LatitudeRefractionMapping","SphericalReflectionMapping","SphericalRefractionMapping","RepeatWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapNearestFilter","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","AlphaFormat","RGBFormat","LuminanceFormat","LuminanceAlphaFormat","DataTexture","data","ParticleSystem","sortParticles","LineStrip","LinePieces","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","getMorphTargetIndexByName","log","Bone","skin","skinMatrix","update","SkinnedMesh","identityMatrix","bones","boneMatrices","pos","rotq","scl","addBone","pose","skinVerticesA","skinVerticesB","MorphAnimMesh","duration","mirroredLoop","currentKeyframe","lastKeyframe","time","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","animations","match","Infinity","end","firstAnimation","setAnimationLabel","playAnimation","updateAnimation","Ribbon","LOD","LODs","addLevel","visibleAtDistance","object3D","useScreenCoordinates","mergeWith3D","affectedByDistance","scaleByViewport","alignment","SpriteAlignment","center","rotation3d","uvOffset","uvScale","topLeft","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight","overrideMaterial","__objects","__lights","__objectsAdded","__objectsRemoved","Fog","FogExp2","density","DOMRenderer","document","createElement","style","globalAlpha","globalCompositeOperation","strokeStyle","fillStyle","Ka","Ga","qa","ha","ib","db","lb","cb","Za","Sa","T","Fb","Uc","eb","pc","Cc","canvas","getContext","La","sa","za","Ea","Fa","Wa","mb","Z","fillRect","getImageData","sortElements","sortObjects","autoClear","info","setClearColor","setClearColorHex","clear","setTransform","clearRect","save","rotate","drawImage","restore","beginPath","moveTo","lineTo","closePath","lineWidth","lineCap","lineJoin","stroke","Vc","Mb","Gb","Dc","gc","ac","hc","fill","createPattern","transform","clip","putImageData","Nb","Ec","fd","Pa","jb","SVGRenderer","createElementNS","setAttribute","setQuality","childNodes","removeChild","appendChild","__2near","__farPlusNear","__farMinusNear","ShaderChunk","fog_pars_fragment","fog_fragment","envmap_pars_fragment","envmap_fragment","envmap_pars_vertex","envmap_vertex","map_particle_pars_fragment","map_particle_fragment","map_pars_vertex","map_pars_fragment","map_vertex","map_fragment","lightmap_pars_fragment","lightmap_pars_vertex","lightmap_fragment","lightmap_vertex","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_pars_vertex","lights_phong_vertex","lights_phong_pars_fragment","lights_phong_fragment","color_pars_fragment","color_fragment","color_pars_vertex","color_vertex","skinning_pars_vertex","skinning_vertex","morphtarget_pars_vertex","morphtarget_vertex","default_vertex","morphnormal_vertex","shadowmap_pars_fragment","shadowmap_fragment","shadowmap_pars_vertex","shadowmap_vertex","alphatest_fragment","linear_to_gamma_fragment","UniformsUtils","merge","slice","UniformsLib","common","diffuse","value","texture","offsetRepeat","flipEnvMap","useRefract","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","pointLightColor","pointLightPosition","pointLightDistance","particle","psColor","shadowmap","ShaderLib","depth","mNear","mFar","basic","lambert","phong","particle_basic","depthRGBA","WebGLRenderer","__webglCustomAttributesList","__webglInitialized","createUniqueBuffers","array","buffer","createBuffer","belongsToAttribute","__vertexArray","__colorArray","__sortArray","__dirtyVertices","__dirtyColors","boundTo","bindBuffer","ARRAY_BUFFER","__webglVertexBuffer","bufferData","__webglColorBuffer","setBlending","setDepthTest","setDepthWrite","setObjectFaces","BufferGeometry","renderBufferDirect","renderBuffer","renderImmediateObject","opaque","initMaterial","__webglMorphTargetInfluences","maxMorphTargets","useProgram","uniformMatrix4fv","_projectionMatrixArray","directional","positions","distances","gammaInput","WebGLRenderTargetCube","_shadowPass","uniformsList","uniform1i","uniform1f","uniform2f","uniform3f","uniform4f","uniform1fv","uniform3fv","_array","uniform2fv","uniform4fv","__webglTextureCube","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","autoScaleCubemaps","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","__webglTexture","setTexture","uniform1iv","cameraPosition","viewMatrix","_viewMatrixArray","boneGlobalMatrices","modelViewMatrix","_modelViewMatrixArray","normalMatrix","uniformMatrix3fv","_normalMatrixArray","objectMatrix","_objectMatrixArray","_modelViewMatrix","enable","POLYGON_OFFSET_FILL","disable","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","FRAMEBUFFER","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","precision","alpha","premultipliedAlpha","antialias","stencil","preserveDrawingBuffer","clearColor","clearAlpha","maxLights","context","autoUpdateScene","autoUpdateObjects","autoClearStencil","autoClearDepth","autoClearColor","shadowMapEnabled","physicallyBasedShading","gammaOutput","shadowMapCullFrontFaces","shadowMapSoft","shadowMapAutoUpdate","shadowMapCascade","shadowMapDebug","maxMorphNormals","renderPluginsPre","renderPluginsPost","memory","programs","geometries","textures","calls","navigator","userAgent","getParameter","VERSION","VENDOR","RENDERER","SHADING_LANGUAGE_VERSION","clearDepth","clearStencil","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","supportsVertexTextures","setViewport","viewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","getClearColor","getClearAlpha","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","addPostPlugin","addPrePlugin","deallocateObject","__webglInit","geometryGroups","deleteBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinVertexABuffer","__webglSkinVertexBBuffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","numMorphTargets","__webglMorphTargetsBuffers","numMorphNormals","__webglMorphNormalsBuffers","deallocateTexture","deleteTexture","updateShadowMap","shadowMapPlugin","renderBufferImmediate","hasPos","positionArray","DYNAMIC_DRAW","enableVertexAttribArray","vertexAttribPointer","hasNormal","count","normalArray","drawArrays","TRIANGLES","offsets","vertexPositionBuffer","itemSize","index","vertexNormalBuffer","uv","vertexUvBuffer","disableVertexAttribArray","vertexColorBuffer","ELEMENT_ARRAY_BUFFER","vertexIndexBuffer","drawElements","numSupportedMorphTargets","tangent","uv2","skinVertexA","skinVertexB","skinIndex","skinWeight","LINES","__webglLineCount","__webglFaceCount","LINE_STRIP","POINTS","__webglParticleCount","TRIANGLE_STRIP","__webglVertexCount","initWebGLObjects","__webglObjects","__webglObjectsImmediate","TEXTURE_2D","immediateRenderCallback","__webglSprites","__webglFlares","hash","counter","faces3","faces4","geometryGroupsList","__normalArray","__tangentArray","__uvArray","__uv2Array","__skinVertexAArray","__skinVertexBArray","__skinIndexArray","__skinWeightArray","__faceArray","Uint16Array","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__original","__inittedArrays","__dirtyMorphTargets","__dirtyElements","__dirtyUvs","__dirtyNormals","__dirtyTangents","__webglActive","MarchingCubes","LensFlare","fb","Fc","Wc","rd","nb","ja","qc","ic","Xa","Xc","sd","fa","td","$a","ud","bc","gd","Yc","hd","Gc","G","V","kb","M","jc","Ob","ob","Hc","Hb","kc","lc","W","X","Y","oa","pb","qb","rb","rc","sb","tb","ub","sc","vb","wb","xb","tc","yb","zb","Ab","uc","Bb","Cb","Db","vc","Pb","Qb","Rb","Ic","Sb","Tb","Ub","Jc","la","Vb","mc","nc","Ma","jd","Ha","Ia","Wb","Ib","Aa","Da","Jb","Kb","gb","Ra","pa","Ua","Ba","J","da","ab","Na","wc","xc","hb","ta","Oa","ua","va","wa","xa","Zc","$c","ad","Eb","bb","Va","vd","kd","wd","xd","yd","zd","cc","ma","na","Ca","bd","cd","dc","ec","fc","Xb","Yb","Kc","ga","Zb","ld","yc","zc","Lc","$b","Mc","md","nd","Ad","Bd","Nc","Oc","Cd","Lb","dd","Ac","Bc","Pc","ya","Qc","od","pd","Dd","Ed","Rc","Sc","Fd","ed","Tc","qd","Qa","oc","Ya","ra","useFog","maxDirLights","maxPointLights","maxBones","maxShadows","code","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","split","getUniformLocation","getAttribLocation","numSupportedMorphNormals","setFaceCulling","CW","FRONT","FRONT_AND_BACK","depthMask","ONE","ZERO","ONE_MINUS_SRC_COLOR","SRC_COLOR","blendEquationSeparate","blendFuncSeparate","__webglFramebuffer","__webglRenderbuffer","createFramebuffer","createRenderbuffer","bindFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","activeCubeFace","ShadowMapPlugin","SpritePlugin","LensFlarePlugin","WebGLRenderTarget","ColorUtils","adjustHSV","__hsv","rgbToHsv","GeometryUtils","randomPointInTriangle","randomPointInFace","_area1","_area2","triangleArea","randomPointsInGeometry","_area","normalizeUVs","triangulateQuads","explode","tessellate","ImageUtils","crossOrigin","loadTexture","Image","onload","src","loadTextureCube","loadCount","getNormalMap","createImageData","generateDataTexture","Uint8Array","SceneUtils","showHierarchy","traverseHierarchy","createMultiMaterialObject","cloneObject","resolution","field","isolation","detach","attach","ShaderUtils","lib","fresnel","mRefractionRatio","mFresnelBias","mFresnelPower","mFresnelScale","tCube","enableAO","enableDiffuse","enableSpecular","enableReflection","tDiffuse","tNormal","tSpecular","tAO","tDisplacement","uNormalScale","uDisplacementBias","uDisplacementScale","uDiffuseColor","uSpecularColor","uAmbientColor","uShininess","uOpacity","uReflectivity","uOffset","uRepeat","tFlip","vertexColorArray","vertexUvArray","vertexNormalArray","vertexPositionArray","vertexIndexArray","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLengths","cacheArcLengths","getNormalVector","getTangent","getTangentAt","LineCurve","oldConstructor","arguments","QuadraticBezierCurve","v0","Shape","Utils","b2","tangentQuadraticBezier","CubicBezierCurve","b3","tangentCubicBezier","SplineCurve","interpolate","ArcCurve","aX","aY","aRadius","aStartAngle","aEndAngle","aClockwise","tangentSpline","create","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CurvePath","curves","bends","autoClose","checkConnection","getCurveLengths","cacheLengths","getBoundingBox","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","minX","minY","maxX","maxY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","getTransformedPoints","getWrapPoints","getTransformedSpacedPoints","EventTarget","addEventListener","dispatchEvent","removeEventListener","Gyroscope","translationWorld","rotationWorld","scaleWorld","translationObject","rotationObject","scaleObject","Path","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","action","args","quadraticCurveTo","bezierCurveTo","splineThru","arc","concat","nltransform","debug","body","toShapes","isClockWise","holes","extrude","ExtrudeGeometry","getPointsHoles","getSpacedPointsHoles","extractAllPoints","shape","extractAllSpacedPoints","removeHoles","FontUtils","Triangulate","area","isolatedPts","allpoints","triangulateShape","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","TextPath","parameters","text","curveSegments","font","weight","divisions","drawText","paths","AnimationHandler","addToUpdate","removeFromUpdate","initialized","hierarchy","keys","rot","usedMorphTargets","morphTargetsInfluences","parseInt","fps","JIT","get","parse","CATMULLROM","CATMULLROM_FORWARD","Animation","root","currentTime","timeScale","isPlaying","loop","isPaused","interpolationType","JITCompile","play","animationCache","prevKey","nextKey","originalMatrix","getNextKeyWith","pause","getPrevKeyWith","interpolateCatmullRom","KeyFrameAnimation","sids","node","startTimeMs","endTime","hasTarget","CubeCamera","heightOffset","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","targetPX","targetNX","targetPY","targetNY","targetPZ","targetNZ","renderTarget","updatePosition","updateCubeMap","CombinedCamera","cameraO","cameraP","zoom","toPerspective","CoolCamera","inPersepectiveMode","inOrthographicMode","toOrthographic","setFov","setZoom","toFrontView","toBackView","toLeftView","toRightView","toTopView","toBottomView","FirstPersonControls","movementSpeed","lookSpeed","noFly","lookVertical","autoForward","activeLook","heightSpeed","heightCoef","heightMin","constrainVertical","verticalMin","verticalMax","theta","phi","lon","lat","mouseY","mouseX","autoSpeedFactor","mouseDragOn","freeze","moveRight","moveLeft","moveBackward","moveForward","viewHalfX","innerWidth","viewHalfY","innerHeight","offsetWidth","offsetHeight","onMouseDown","focus","preventDefault","stopPropagation","button","onMouseUp","onMouseMove","pageX","pageY","offsetLeft","offsetTop","onKeyDown","keyCode","moveUp","moveDown","onKeyUp","heightMax","PathControls","PathControlsIdCounter","waypoints","useConstantSpeed","resamplingCoef","debugPath","debugDummy","animationParent","lookHorizontal","verticalAngleMap","srcRange","dstRange","horizontalAngleMap","spline","createDebugDummy","animation","createDebugPath","SphereGeometry","FlyControls","rollSpeed","dragToLook","tmpQuaternion","mouseStatus","moveState","down","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","handleEvent","keydown","altKey","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","mousemove","getContainerDimensions","mouseup","RollControls","mouseLook","roll","rotateHorizontally","rotateVertically","clientX","clientY","TrackballControls","enabled","screen","rotateSpeed","zoomSpeed","panSpeed","staticMoving","noPan","noZoom","noRotate","dynamicDampingFactor","minDistance","maxDistance","getMouseOnScreen","getMouseProjectionOnBall","rotateCamera","zoomCamera","panCamera","checkDistances","sides","px","nx","py","ny","pz","nz","CylinderGeometry","shapebb","addShape","__v4","__v5","__v6","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","bendPath","extrudePath","useSpacedPoints","extrudeMaterial","reverse","LatheGeometry","angle","PlaneGeometry","TextGeometry","bend","getFace","loadFace","familyName","toLowerCase","cssFontWeight","cssFontStyle","extractGlyphPoints","path","glyphs","_cachedOutline","_typeface_js","TorusGeometry","tube","segmentsR","segmentsT","TorusKnotGeometry","heightScale","grid","PolyhedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","AxisHelper","CameraHelper","lineGeometry","pointMap","lineMaterial","lines","__v","__projector","__c","SubdivisionModifier","subdivisions","useOldVertexColors","supportUVs","modify","smooth","charAt","Loader","statusDomElement","showStatus","addStatusElement","onLoadStart","onLoadProgress","onLoadComplete","fontSize","textAlign","background","padding","zIndex","innerHTML","updateProgress","loaded","toFixed","extractUrlBase","pop","initMaterials","createMaterial","hasNormals","LN2","sourceFile","mirror","normalMap","colorDiffuse","DbgColor","colorSpecular","colorAmbient","transparency","specularCoef","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapNormalFactor","specularMap","DbgName","BinaryLoader","load","showProgress","loadAjaxJSON","XMLHttpRequest","onreadystatechange","readyState","status","JSON","responseText","loadAjaxBuffers","open","overrideMimeType","setRequestHeader","send","buffers","createBinModel","response","getResponseHeader","responseType","Uint32Array","String","fromCharCode","BYTES_PER_ELEMENT","Int8Array","ColladaLoader","evaluate","XPathResult","ORDERED_NODE_ITERATOR_TYPE","iterateNext","nodeName","getAttribute","parseFloat","textContent","convertUpAxis","upAxis","replace","nodes","morphs","skins","dae","images","cameras","effects","controllers","visualScenes","getChildById","world","channels","sampler","output","url","skeleton","input","getChildBySid","bindShapeMatrix","joints","sid","invBindMatrices","invBindMatrix","skinningMatrix","weights","joint","source","instance_material","morph","mesh","primitives","instance_effect","shader","symbol","geometry3js","daeMaterial","skinController","skinInstanceController","targets","aspect_ratio","znear","zfar","centerGeometry","init_from","method","transforms","obj","inputs","vcount","stride","params","semantic","texOpts","texcoord","effect","mipfilter","magfilter","minfilter","wrap_t","wrap_s","surface","channel","member","arrIndices","arrSyntax","dotSyntax","fullSid","interpolation","strideOut","hasAttribute","subdivideFaces","nodeType","parseInputs","read","parseJoints","parseWeights","getChannelForTransform","shift","getTransformBySid","getData","addTarget","getTarget","convert","POSITION","setVertices","handlePrimitive","calcNormals","accessor","NORMAL","isColor","isTexture","offsetU","offsetV","repeatU","repeatV","wrapU","wrapV","parseTexture","parseTechnique","parseProfileCOMMON","parseNewparam","parseOptics","implementation","createDocument","responseXML","alert","setPreferredShading","applySkin","options","JSONLoader","DONE","createModel","LOADING","HEADERS_RECEIVED","normals","SceneLoader","callbackSync","callbackProgress","createScene","castsShadow","ShadowVolume","trigger","triggers","empties","totalModels","totalTextures","loadedModels","loadedTextures","fogs","defaults","currentCamera","bgcolor","bgColor","bgColorAlpha","bgalpha","segmentsWidth","segmentsHeight","segmentsDepth","flipped","topRad","botRad","radSegs","heightSegs","urlBaseType","embeds","metadata","wrap","normalMapFactor","UTF8Loader","offsetX","offsetY","offsetZ","decompressMesh","charCodeAt","size2","size3","halfsize","delta","normal_cache","vlist","nlist","firstDraw","maxCount","lerp","VIntX","VIntY","VIntZ","compNorm","polygonize","edgeTable","triTable","posnormtriv","begin","addBall","addPlaneX","addPlaneY","addPlaneZ","reset","generateGeometry","lensFlares","customUpdateCallback","updateLensFlares","wantedRotation","STATIC_DRAW","ShaderFlares","lensFlare","lensFlareVertexTexture","vertex","renderType","occlusionMap","screenPosition","TEXTURE1","copyTexImage2D","isVirtual","pointsWorld","pointsFrustum","originalCamera","cameraHelper","customDepthMaterial","ShaderSprite","sprite","AnaglyphWebGLRenderer","mapLeft","mapRight","CrosseyedWebGLRenderer","separation",28,"jade","locals","attrs","escape","rethrow","buf","__val__",32,35],"mappings":"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,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA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","sourcesContent":["webpackJsonp([2],\n{\n\n/***/ 25:\n/***/ function(module, exports, require) {\n\n\texports.render = function() {\r\n\t\treturn require(28)();\r\n\t};\r\n\t\r\n\texports.start = function() {\r\n\t\tvar THREE = require(26);\r\n\t\trequire(7);\r\n\t\r\n\t\t// three.js canvas - camera - orthographic example\r\n\t\r\n\t\tvar container, stats;\r\n\t\tvar camera, scene, renderer;\r\n\t\r\n\t\tinit();\r\n\t\tanimate();\r\n\t\r\n\t\tfunction init() {\r\n\t\r\n\t\t\tcamera = new THREE.OrthographicCamera( -400, 400, 400, -400, - 2000, 1000 );\r\n\t\t\tcamera.position.x = 200;\r\n\t\t\tcamera.position.y = 100;\r\n\t\t\tcamera.position.z = 200;\r\n\t\r\n\t\t\tscene = new THREE.Scene();\r\n\t\r\n\t\t\tscene.add( camera );\r\n\t\r\n\t\t\t// Grid\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry();\r\n\t\t\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( - 500, 0, 0 ) ) );\r\n\t\t\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 500, 0, 0 ) ) );\r\n\t\r\n\t\t\tfor ( var i = 0; i <= 20; i ++ ) {\r\n\t\r\n\t\t\t\tvar line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\r\n\t\t\t\tline.position.z = ( i * 50 ) - 500;\r\n\t\t\t\tscene.add( line );\r\n\t\r\n\t\t\t\tline = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\r\n\t\t\t\tline.position.x = ( i * 50 ) - 500;\r\n\t\t\t\tline.rotation.y = 90 * Math.PI / 180;\r\n\t\t\t\tscene.add( line );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Cubes\r\n\t\r\n\t\t\tgeometry = new THREE.CubeGeometry( 50, 50, 50 );\r\n\t\t\tvar material = new THREE.MeshLambertMaterial( { color: 0xffffff, shading: THREE.FlatShading, overdraw: true } );\r\n\t\r\n\t\t\tfor ( i = 0; i < 100; i ++ ) {\r\n\t\r\n\t\t\t\tvar cube = new THREE.Mesh( geometry, material );\r\n\t\r\n\t\t\t\tcube.scale.y = Math.floor( Math.random() * 2 + 1 );\r\n\t\r\n\t\t\t\tcube.position.x = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\r\n\t\t\t\tcube.position.y = ( cube.scale.y * 50 ) / 2;\r\n\t\t\t\tcube.position.z = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\r\n\t\r\n\t\t\t\tscene.add(cube);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Lights\r\n\t\r\n\t\t\tvar ambientLight = new THREE.AmbientLight( Math.random() * 0x10 );\r\n\t\t\tscene.add( ambientLight );\r\n\t\r\n\t\t\tvar directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\r\n\t\t\tdirectionalLight.position.x = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.y = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.z = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.normalize();\r\n\t\t\tscene.add( directionalLight );\r\n\t\r\n\t\t\tdirectionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\r\n\t\t\tdirectionalLight.position.x = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.y = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.z = Math.random() - 0.5;\r\n\t\t\tdirectionalLight.position.normalize();\r\n\t\t\tscene.add( directionalLight );\r\n\t\r\n\t\t\trenderer = new THREE.CanvasRenderer();\r\n\t\t\trenderer.setSize( 400, 400 );\r\n\t\r\n\t\t\t$(\".three-container\").append(renderer.domElement);\r\n\t\t}\r\n\t\r\n\t\tfunction animate() {\r\n\t\t\tif($(\".three-container\").length > 0) {\r\n\t\t\t\trequestAnimationFrame( animate );\r\n\t\t\t\trender();\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction render() {\r\n\t\t\tvar timer = new Date().getTime() * 0.0001;\r\n\t\r\n\t\t\tcamera.position.x = Math.cos( timer ) * 200;\r\n\t\t\tcamera.position.z = Math.sin( timer ) * 200;\r\n\t\t\tcamera.lookAt( scene.position );\r\n\t\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t}\r\n\t};\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, require) {\n\n\tmodule.exports = require(27);\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, require) {\n\n\t// Three.js - http://github.com/mrdoob/three.js\r\n\t'use strict';var THREE=THREE||{REVISION:\"48\"};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;\r\n\t(function(){for(var a=0,b=[\"ms\",\"moz\",\"webkit\",\"o\"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[b[c]+\"CancelAnimationFrame\"]||window[b[c]+\"CancelRequestAnimationFrame\"];if(!window.requestAnimationFrame)window.requestAnimationFrame=function(b){var c=(new Date).getTime(),g=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+g)},g);a=c+g;return e};if(!window.cancelAnimationFrame)window.cancelAnimationFrame=\r\n\tfunction(a){clearTimeout(a)}})();THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};\r\n\tTHREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};\r\n\tTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);\r\n\tthis.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,g;if(0===c)this.r=this.g=this.b=0;else switch(d=Math.floor(6*a),f=6*a-d,a=c*(1-b),g=c*(1-b*f),b=c*(1-b*(1-f)),d){case 1:this.r=g;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=g;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=g;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=\r\n\tMath.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return\"rgb(\"+Math.floor(255*this.r)+\",\"+Math.floor(255*this.g)+\",\"+Math.floor(255*this.b)+\")\"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\r\n\tTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},\r\n\tdivideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},\r\n\tlerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1.0E-4>this.lengthSq()}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\r\n\tTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},\r\n\taddScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},\r\n\tdivideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},\r\n\tlerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=\r\n\ta.n14;this.y=a.n24;this.z=a.n34;return this},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1,f=b?b.z:1,g=a.n11/c,e=a.n12/d,c=a.n21/c,d=a.n22/d,h=a.n23/f,i=a.n33/f;this.y=Math.asin(a.n13/f);f=Math.cos(this.y);1.0E-5<Math.abs(f)?(this.x=Math.atan2(-h/f,i/f),this.z=Math.atan2(-e/f,g/f)):(this.x=0,this.z=Math.atan2(c,d));return this},getScaleFromMatrix:function(a){var b=this.set(a.n11,a.n21,a.n31).length(),c=this.set(a.n12,a.n22,a.n32).length(),a=this.set(a.n13,a.n23,a.n33).length();this.x=\r\n\tb;this.y=c;this.z=a},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1.0E-4>this.lengthSq()}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\n\tTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;\r\n\tthis.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},\r\n\tnormalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};\r\n\tTHREE.Frustum.prototype.setFromMatrix=function(a){var b,c=this.planes;c[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);c[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);c[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);c[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);c[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);c[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;6>a;a++)b=c[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))};\r\n\tTHREE.Frustum.prototype.contains=function(a){for(var b=this.planes,c=a.matrixWorld,d=THREE.Frustum.__v1.set(c.getColumnX().length(),c.getColumnY().length(),c.getColumnZ().length()),d=-a.geometry.boundingSphere.radius*Math.max(d.x,Math.max(d.y,d.z)),f=0;6>f;f++)if(a=b[f].x*c.n14+b[f].y*c.n24+b[f].z*c.n34+b[f].w,a<=d)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;\r\n\tTHREE.Ray=function(a,b){function c(a,b,c){p.sub(c,a);s=p.dot(b);t=n.add(a,r.copy(b).multiplyScalar(s));return w=c.distanceTo(t)}function d(a,b,c,d){p.sub(d,b);n.sub(c,b);r.sub(a,b);u=p.dot(p);v=p.dot(n);A=p.dot(r);F=n.dot(n);B=n.dot(r);D=1/(u*F-v*v);H=(F*A-v*B)*D;I=(u*B-v*A)*D;return 0<=H&&0<=I&&1>H+I}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;this.intersectObjects=function(a){var b,c,d=[];for(b=0,c=a.length;b<c;b++)Array.prototype.push.apply(d,this.intersectObject(a[b]));\r\n\td.sort(function(a,b){return a.distance-b.distance});return d};var f=1.0E-4;this.setPrecision=function(a){f=a};var g=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,q=new THREE.Vector3,m=new THREE.Vector3,o=new THREE.Vector3;this.intersectObject=function(a){var b,n=[];if(a instanceof THREE.Particle){var p=c(this.origin,this.direction,a.matrixWorld.getPosition());if(p>a.scale.x)return[];b={distance:p,point:a.position,face:null,object:a};\r\n\tn.push(b)}else if(a instanceof THREE.Mesh){var p=c(this.origin,this.direction,a.matrixWorld.getPosition()),r=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),a.matrixWorld.getColumnZ().length());if(p>a.geometry.boundingSphere.radius*Math.max(r.x,Math.max(r.y,r.z)))return n;var s,l,t=a.geometry,u=t.vertices,E;a.matrixRotationWorld.extractRotation(a.matrixWorld);for(p=0,r=t.faces.length;p<r;p++)if(b=t.faces[p],j.copy(this.origin),k.copy(this.direction),\r\n\tE=a.matrixWorld,q=E.multiplyVector3(q.copy(b.centroid)).subSelf(j),m=a.matrixRotationWorld.multiplyVector3(m.copy(b.normal)),s=k.dot(m),!(Math.abs(s)<f)&&(l=m.dot(q)/s,!(0>l)&&(a.doubleSided||(a.flipSided?0<s:0>s))))if(o.add(j,k.multiplyScalar(l)),b instanceof THREE.Face3)g=E.multiplyVector3(g.copy(u[b.a].position)),e=E.multiplyVector3(e.copy(u[b.b].position)),h=E.multiplyVector3(h.copy(u[b.c].position)),d(o,g,e,h)&&(b={distance:j.distanceTo(o),point:o.clone(),face:b,object:a},n.push(b));else if(b instanceof\r\n\tTHREE.Face4&&(g=E.multiplyVector3(g.copy(u[b.a].position)),e=E.multiplyVector3(e.copy(u[b.b].position)),h=E.multiplyVector3(h.copy(u[b.c].position)),i=E.multiplyVector3(i.copy(u[b.d].position)),d(o,g,e,i)||d(o,e,h,i)))b={distance:j.distanceTo(o),point:o.clone(),face:b,object:a},n.push(b)}return n};var p=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3,s,t,w,u,v,A,F,B,D,H,I};\r\n\tTHREE.Rectangle=function(){function a(){g=d-b;e=f-c}var b,c,d,f,g,e,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return e};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(g,e,k,q){h=!1;b=g;c=e;d=k;f=q;a()};this.addPoint=function(g,e){h?(h=!1,b=g,c=e,d=g,f=e):(b=b<g?b:g,c=c<e?c:e,d=d>g?d:g,f=f>e?f:e);a()};this.add3Points=\r\n\tfunction(g,e,k,q,m,o){h?(h=!1,b=g<k?g<m?g:m:k<m?k:m,c=e<q?e<o?e:o:q<o?q:o,d=g>k?g>m?g:m:k>m?k:m,f=e>q?e>o?e:o:q>o?q:o):(b=g<k?g<m?g<b?g:b:m<b?m:b:k<m?k<b?k:b:m<b?m:b,c=e<q?e<o?e<c?e:c:o<c?o:c:q<o?q<c?q:c:o<c?o:c,d=g>k?g>m?g>d?g:d:m>d?m:d:k>m?k>d?k:d:m>d?m:d,f=e>q?e>o?e>f?e:f:o>f?o:f:q>o?q>f?q:f:o>f?o:f);a()};this.addRectangle=function(g){h?(h=!1,b=g.getLeft(),c=g.getTop(),d=g.getRight(),f=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),c=c<g.getTop()?c:g.getTop(),d=d>g.getRight()?d:g.getRight(),f=f>\r\n\tg.getBottom()?f:g.getBottom());a()};this.inflate=function(g){b-=g;c-=g;d+=g;f+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();c=c>g.getTop()?c:g.getTop();d=d<g.getRight()?d:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;f=d=c=b=0;a()};this.isEmpty=function(){return h}};\r\n\tTHREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};THREE.Matrix3=function(){this.m=[]};\r\n\tTHREE.Matrix3.prototype={constructor:THREE.Matrix3,transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,g,e,h,i,j,k,q,m,o,p,n){this.set(void 0!==a?a:1,b||0,c||0,d||0,f||0,void 0!==g?g:1,e||0,h||0,i||0,j||0,void 0!==k?k:1,q||0,m||0,o||0,p||0,void 0!==n?n:1);this.m33=new THREE.Matrix3};\r\n\tTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,g,e,h,i,j,k,q,m,o,p,n){this.n11=a;this.n12=b;this.n13=c;this.n14=d;this.n21=f;this.n22=g;this.n23=e;this.n24=h;this.n31=i;this.n32=j;this.n33=k;this.n34=q;this.n41=m;this.n42=o;this.n43=p;this.n44=n;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,\r\n\tb,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(0===g.length())g.z=1;d.cross(c,g).normalize();0===d.length()&&(g.x+=1.0E-4,d.cross(c,g).normalize());f.cross(g,d);this.n11=d.x;this.n12=f.x;this.n13=g.x;this.n21=d.y;this.n22=f.y;this.n23=g.y;this.n31=d.z;this.n32=f.z;this.n33=g.z;return this},multiply:function(a,b){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,e=a.n21,h=a.n22,i=a.n23,j=a.n24,k=a.n31,q=a.n32,m=a.n33,o=a.n34,p=a.n41,n=a.n42,r=a.n43,s=a.n44,t=b.n11,\r\n\tw=b.n12,u=b.n13,v=b.n14,A=b.n21,F=b.n22,B=b.n23,D=b.n24,H=b.n31,I=b.n32,Q=b.n33,P=b.n34,L=b.n41,K=b.n42,O=b.n43,y=b.n44;this.n11=c*t+d*A+f*H+g*L;this.n12=c*w+d*F+f*I+g*K;this.n13=c*u+d*B+f*Q+g*O;this.n14=c*v+d*D+f*P+g*y;this.n21=e*t+h*A+i*H+j*L;this.n22=e*w+h*F+i*I+j*K;this.n23=e*u+h*B+i*Q+j*O;this.n24=e*v+h*D+i*P+j*y;this.n31=k*t+q*A+m*H+o*L;this.n32=k*w+q*F+m*I+o*K;this.n33=k*u+q*B+m*Q+o*O;this.n34=k*v+q*D+m*P+o*y;this.n41=p*t+n*A+r*H+s*L;this.n42=p*w+n*F+r*I+s*K;this.n43=p*u+n*B+r*Q+s*O;this.n44=\r\n\tp*v+n*D+r*P+s*y;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;\r\n\tthis.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,d=a.z,f=1/(this.n41*b+this.n42*c+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*d+this.n14)*f;a.y=(this.n21*b+this.n22*c+this.n23*d+this.n24)*f;a.z=(this.n31*b+this.n32*c+this.n33*d+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,c=a.y,d=a.z,f=a.w;a.x=this.n11*b+this.n12*c+this.n13*d+this.n14*f;a.y=this.n21*b+this.n22*c+this.n23*\r\n\td+this.n24*f;a.z=this.n31*b+this.n32*c+this.n33*d+this.n34*f;a.w=this.n41*b+this.n42*c+this.n43*d+this.n44*f;return a},rotateAxis:function(a){var b=a.x,c=a.y,d=a.z;a.x=b*this.n11+c*this.n12+d*this.n13;a.y=b*this.n21+c*this.n22+d*this.n23;a.z=b*this.n31+c*this.n32+d*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+\r\n\tthis.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,d=this.n14,f=this.n21,g=this.n22,e=this.n23,h=this.n24,i=this.n31,j=this.n32,k=this.n33,q=this.n34,m=this.n41,o=this.n42,p=this.n43,n=this.n44;return d*e*j*m-c*h*j*m-d*g*k*m+b*h*k*m+c*g*q*m-b*e*q*m-d*e*i*o+c*h*i*o+d*f*k*o-a*h*k*o-c*f*q*o+a*e*q*o+d*g*i*p-b*h*i*p-d*f*j*p+a*h*j*p+b*f*q*p-a*g*q*p-c*g*i*n+b*e*i*n+c*f*j*n-a*e*j*n-b*f*k*n+a*g*k*n},transpose:function(){var a;\r\n\ta=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n34=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;\r\n\ta.n43=this.n43;a.n44=this.n44;return a},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+\r\n\t10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=\r\n\tMath.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,g=a.x,e=a.y,h=a.z,i=f*g,j=f*e;this.set(i*g+c,i*e-d*h,i*h+d*e,0,i*e+d*h,j*e+c,j*h-d*g,0,i*h-d*e,j*h+d*g,f*h*h+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,\r\n\tthis.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,d=a.n13,f=a.n14,g=a.n21,e=a.n22,h=a.n23,i=a.n24,j=a.n31,k=a.n32,q=a.n33,m=a.n34,o=a.n41,p=a.n42,n=a.n43,r=a.n44;this.n11=h*m*p-i*q*p+i*k*n-e*m*n-h*k*r+e*q*r;this.n12=f*q*p-d*m*p-f*k*n+c*m*n+d*k*r-c*q*r;this.n13=d*i*p-f*h*p+f*e*n-c*i*n-d*e*r+c*h*r;this.n14=f*h*k-d*i*k-f*e*q+c*\r\n\ti*q+d*e*m-c*h*m;this.n21=i*q*o-h*m*o-i*j*n+g*m*n+h*j*r-g*q*r;this.n22=d*m*o-f*q*o+f*j*n-b*m*n-d*j*r+b*q*r;this.n23=f*h*o-d*i*o-f*g*n+b*i*n+d*g*r-b*h*r;this.n24=d*i*j-f*h*j+f*g*q-b*i*q-d*g*m+b*h*m;this.n31=e*m*o-i*k*o+i*j*p-g*m*p-e*j*r+g*k*r;this.n32=f*k*o-c*m*o-f*j*p+b*m*p+c*j*r-b*k*r;this.n33=c*i*o-f*e*o+f*g*p-b*i*p-c*g*r+b*e*r;this.n34=f*e*j-c*i*j-f*g*k+b*i*k+c*g*m-b*e*m;this.n41=h*k*o-e*q*o-h*j*p+g*q*p+e*j*n-g*k*n;this.n42=c*q*o-d*k*o+d*j*p-b*q*p-c*j*n+b*k*n;this.n43=d*e*o-c*h*o-d*g*p+b*h*p+c*\r\n\tg*n-b*e*n;this.n44=c*h*j-d*e*j+d*g*k-b*h*k-c*g*q+b*e*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=a.x,d=a.y,f=a.z,g=Math.cos(c),c=Math.sin(c),e=Math.cos(d),d=Math.sin(d),h=Math.cos(f),f=Math.sin(f);switch(b){case \"YXZ\":var i=e*h,j=e*f,k=d*h,q=d*f;this.n11=i+q*c;this.n12=k*c-j;this.n13=g*d;this.n21=g*f;this.n22=g*h;this.n23=-c;this.n31=j*c-k;this.n32=q+i*c;this.n33=g*e;break;case \"ZXY\":i=e*h;j=e*f;k=d*h;q=d*f;this.n11=i-q*c;this.n12=-g*f;this.n13=k+\r\n\tj*c;this.n21=j+k*c;this.n22=g*h;this.n23=q-i*c;this.n31=-g*d;this.n32=c;this.n33=g*e;break;case \"ZYX\":i=g*h;j=g*f;k=c*h;q=c*f;this.n11=e*h;this.n12=k*d-j;this.n13=i*d+q;this.n21=e*f;this.n22=q*d+i;this.n23=j*d-k;this.n31=-d;this.n32=c*e;this.n33=g*e;break;case \"YZX\":i=g*e;j=g*d;k=c*e;q=c*d;this.n11=e*h;this.n12=q-i*f;this.n13=k*f+j;this.n21=f;this.n22=g*h;this.n23=-c*h;this.n31=-d*h;this.n32=j*f+k;this.n33=i-q*f;break;case \"XZY\":i=g*e;j=g*d;k=c*e;q=c*d;this.n11=e*h;this.n12=-f;this.n13=d*h;this.n21=\r\n\ti*f+q;this.n22=g*h;this.n23=j*f-k;this.n31=k*f-j;this.n32=c*h;this.n33=q*f+i;break;default:i=g*h,j=g*f,k=c*h,q=c*f,this.n11=e*h,this.n12=-e*f,this.n13=d,this.n21=j+k*d,this.n22=i-q*d,this.n23=-c*e,this.n31=q-i*d,this.n32=k+j*d,this.n33=g*e}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,d=a.z,f=a.w,g=b+b,e=c+c,h=d+d,a=b*g,i=b*e,b=b*h,j=c*e,c=c*h,d=d*h,g=f*g,e=f*e,f=f*h;this.n11=1-(j+d);this.n12=i-f;this.n13=b+e;this.n21=i+f;this.n22=1-(a+d);this.n23=c-g;this.n31=b-e;this.n32=c+\r\n\tg;this.n33=1-(a+j);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var d=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;d.identity();d.setRotationFromQuaternion(b);f.setScale(c.x,c.y,c.z);this.multiply(d,f);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,\r\n\tg=THREE.Matrix4.__v3;d.set(this.n11,this.n21,this.n31);f.set(this.n12,this.n22,this.n32);g.set(this.n13,this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=d.length();c.y=f.length();c.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;d=THREE.Matrix4.__m1;d.copy(this);d.n11/=c.x;d.n21/=c.x;d.n31/=c.x;d.n12/=c.y;d.n22/=c.y;d.n32/=c.y;d.n13/=c.z;d.n23/=c.z;d.n33/=c.z;b.setFromRotationMatrix(d);\r\n\treturn[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),d=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*d;this.n22=a.n22*d;this.n32=a.n32*d;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this},rotateByAxis:function(a,b){if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);\r\n\tif(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var c=a.x,d=a.y,f=a.z,g=Math.sqrt(c*c+d*d+f*f),c=c/g,d=d/g,f=f/g,g=c*c,e=d*d,h=f*f,i=Math.cos(b),j=Math.sin(b),k=1-i,q=c*d*k,m=c*f*k,k=d*f*k,c=c*j,o=d*j,j=f*j,f=g+(1-g)*i,g=q+j,d=m-o,q=q-j,e=e+(1-e)*i,j=k+c,m=m+o,k=k-c,h=h+(1-h)*i,i=this.n11,c=this.n21,o=this.n31,p=this.n41,n=this.n12,r=this.n22,s=this.n32,t=this.n42,w=this.n13,u=this.n23,v=this.n33,A=this.n43;this.n11=f*i+g*n+d*w;this.n21=f*c+\r\n\tg*r+d*u;this.n31=f*o+g*s+d*v;this.n41=f*p+g*t+d*A;this.n12=q*i+e*n+j*w;this.n22=q*c+e*r+j*u;this.n32=q*o+e*s+j*v;this.n42=q*p+e*t+j*A;this.n13=m*i+k*n+h*w;this.n23=m*c+k*r+h*u;this.n33=m*o+k*s+h*v;this.n43=m*p+k*t+h*A;return this},rotateX:function(a){var b=this.n12,c=this.n22,d=this.n32,f=this.n42,g=this.n13,e=this.n23,h=this.n33,i=this.n43,j=Math.cos(a),a=Math.sin(a);this.n12=j*b+a*g;this.n22=j*c+a*e;this.n32=j*d+a*h;this.n42=j*f+a*i;this.n13=j*g-a*b;this.n23=j*e-a*c;this.n33=j*h-a*d;this.n43=j*\r\n\ti-a*f;return this},rotateY:function(a){var b=this.n11,c=this.n21,d=this.n31,f=this.n41,g=this.n13,e=this.n23,h=this.n33,i=this.n43,j=Math.cos(a),a=Math.sin(a);this.n11=j*b-a*g;this.n21=j*c-a*e;this.n31=j*d-a*h;this.n41=j*f-a*i;this.n13=j*g+a*b;this.n23=j*e+a*c;this.n33=j*h+a*d;this.n43=j*i+a*f;return this},rotateZ:function(a){var b=this.n11,c=this.n21,d=this.n31,f=this.n41,g=this.n12,e=this.n22,h=this.n32,i=this.n42,j=Math.cos(a),a=Math.sin(a);this.n11=j*b+a*g;this.n21=j*c+a*e;this.n31=j*d+a*h;this.n41=\r\n\tj*f+a*i;this.n12=j*g-a*b;this.n22=j*e-a*c;this.n32=j*h-a*d;this.n42=j*i-a*f;return this},translate:function(a){var b=a.x,c=a.y,a=a.z;this.n14=this.n11*b+this.n12*c+this.n13*a+this.n14;this.n24=this.n21*b+this.n22*c+this.n23*a+this.n24;this.n34=this.n31*b+this.n32*c+this.n33*a+this.n34;this.n44=this.n41*b+this.n42*c+this.n43*a+this.n44;return this}};\r\n\tTHREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,d=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,e=-a.n33*a.n12+a.n32*a.n13,h=a.n33*a.n11-a.n31*a.n13,i=-a.n32*a.n11+a.n31*a.n12,j=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,q=a.n22*a.n11-a.n21*a.n12,a=a.n11*d+a.n21*e+a.n31*j;if(0===a)return null;a=1/a;c[0]=a*d;c[1]=a*f;c[2]=a*g;c[3]=a*e;c[4]=a*h;c[5]=a*i;c[6]=a*j;c[7]=a*k;c[8]=a*q;return b};\r\n\tTHREE.Matrix4.makeFrustum=function(a,b,c,d,f,g){var e;e=new THREE.Matrix4;e.n11=2*f/(b-a);e.n12=0;e.n13=(b+a)/(b-a);e.n14=0;e.n21=0;e.n22=2*f/(d-c);e.n23=(d+c)/(d-c);e.n24=0;e.n31=0;e.n32=0;e.n33=-(g+f)/(g-f);e.n34=-2*g*f/(g-f);e.n41=0;e.n42=0;e.n43=-1;e.n44=0;return e};THREE.Matrix4.makePerspective=function(a,b,c,d){var f,a=c*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,c,d)};\r\n\tTHREE.Matrix4.makeOrtho=function(a,b,c,d,f,g){var e,h,i,j;e=new THREE.Matrix4;h=b-a;i=c-d;j=g-f;e.n11=2/h;e.n12=0;e.n13=0;e.n14=-((b+a)/h);e.n21=0;e.n22=2/i;e.n23=0;e.n24=-((c+d)/i);e.n31=0;e.n32=0;e.n33=-2/j;e.n34=-((g+f)/j);e.n41=0;e.n42=0;e.n43=0;e.n44=1;return e};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;\r\n\tTHREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name=\"\";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=\"XYZ\";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=\r\n\t!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};\r\n\tTHREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);this.rotation.getRotationFromMatrix(this.matrix,this.scale);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,\r\n\tthis._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn(\"THREE.Object3D.add: An object can't be added as a child of itself.\");else if(-1===this.children.indexOf(a)){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=\r\n\tthis.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,f;for(c=0,d=this.children.length;c<d;c++){f=this.children[c];if(f.name===a||b&&(f=f.getChildByName(a,b),void 0!==f))return f}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,\r\n\tthis.eulerOrder);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<\r\n\tc;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;\r\n\tTHREE.Projector=function(){function a(){var a=e[g]=e[g]||new THREE.RenderableObject;g++;return a}function b(){var a=j[i]=j[i]||new THREE.RenderableVertex;i++;return a}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,g=b.z+b.w,e=-a.z+a.w,h=-b.z+b.w;if(0<=f&&0<=g&&0<=e&&0<=h)return!0;if(0>f&&0>g||0>e&&0>h)return!1;0>f?c=Math.max(c,f/(f-g)):0>g&&(d=Math.min(d,f/(f-g)));0>e?c=Math.max(c,e/(e-h)):0>h&&(d=Math.min(d,e/(e-h)));if(d<c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}\r\n\tvar f,g,e=[],h,i,j=[],k,q,m=[],o,p=[],n,r,s=[],t,w,u=[],v={objects:[],sprites:[],lights:[],elements:[]},A=new THREE.Vector3,F=new THREE.Vector4,B=new THREE.Matrix4,D=new THREE.Matrix4,H=new THREE.Frustum,I=new THREE.Vector4,Q=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);B.multiply(b.projectionMatrix,b.matrixWorldInverse);B.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);B.multiply(b.matrixWorld,\r\n\tb.projectionMatrixInverse);B.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,d){g=0;v.objects.length=0;v.sprites.length=0;v.lights.length=0;var e=function(b){if(!1!==b.visible){(b instanceof THREE.Mesh||b instanceof THREE.Line)&&(!1===b.frustumCulled||H.contains(b))?(B.multiplyVector3(A.copy(b.position)),f=a(),f.object=\r\n\tb,f.z=A.z,v.objects.push(f)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(B.multiplyVector3(A.copy(b.position)),f=a(),f.object=b,f.z=A.z,v.sprites.push(f)):b instanceof THREE.Light&&v.lights.push(b);for(var c=0,d=b.children.length;c<d;c++)e(b.children[c])}};e(b);d&&v.objects.sort(c);return v};this.projectScene=function(a,f,g){var e=f.near,y=f.far,l=!1,A,C,E,S,R,ca,ka,ia,N,aa,U,ba,ea,Ta,Ja;w=r=o=q=0;v.elements.length=0;void 0===f.parent&&(console.warn(\"DEPRECATED: Camera hasn't been added to a Scene. Adding it...\"),\r\n\ta.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);B.multiply(f.projectionMatrix,f.matrixWorldInverse);H.setFromMatrix(B);v=this.projectGraph(a,!1);for(a=0,A=v.objects.length;a<A;a++)if(N=v.objects[a].object,aa=N.matrixWorld,i=0,N instanceof THREE.Mesh){U=N.geometry;ba=N.geometry.materials;S=U.vertices;ea=U.faces;Ta=U.faceVertexUvs;U=N.matrixRotationWorld.extractRotation(aa);for(C=0,E=S.length;C<E;C++)h=b(),h.positionWorld.copy(S[C].position),aa.multiplyVector3(h.positionWorld),\r\n\th.positionScreen.copy(h.positionWorld),B.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>e&&h.positionScreen.z<y;for(S=0,C=ea.length;S<C;S++){E=ea[S];if(E instanceof THREE.Face3)if(R=j[E.a],ca=j[E.b],ka=j[E.c],R.visible&&ca.visible&&ka.visible)if(l=0>(ka.positionScreen.x-R.positionScreen.x)*(ca.positionScreen.y-R.positionScreen.y)-(ka.positionScreen.y-R.positionScreen.y)*(ca.positionScreen.x-R.positionScreen.x),\r\n\tN.doubleSided||l!=N.flipSided)ia=m[q]=m[q]||new THREE.RenderableFace3,q++,k=ia,k.v1.copy(R),k.v2.copy(ca),k.v3.copy(ka);else continue;else continue;else if(E instanceof THREE.Face4)if(R=j[E.a],ca=j[E.b],ka=j[E.c],ia=j[E.d],R.visible&&ca.visible&&ka.visible&&ia.visible)if(l=0>(ia.positionScreen.x-R.positionScreen.x)*(ca.positionScreen.y-R.positionScreen.y)-(ia.positionScreen.y-R.positionScreen.y)*(ca.positionScreen.x-R.positionScreen.x)||0>(ca.positionScreen.x-ka.positionScreen.x)*(ia.positionScreen.y-\r\n\tka.positionScreen.y)-(ca.positionScreen.y-ka.positionScreen.y)*(ia.positionScreen.x-ka.positionScreen.x),N.doubleSided||l!=N.flipSided)Ja=p[o]=p[o]||new THREE.RenderableFace4,o++,k=Ja,k.v1.copy(R),k.v2.copy(ca),k.v3.copy(ka),k.v4.copy(ia);else continue;else continue;k.normalWorld.copy(E.normal);!l&&(N.flipSided||N.doubleSided)&&k.normalWorld.negate();U.multiplyVector3(k.normalWorld);k.centroidWorld.copy(E.centroid);aa.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);B.multiplyVector3(k.centroidScreen);\r\n\tka=E.vertexNormals;for(R=0,ca=ka.length;R<ca;R++)ia=k.vertexNormalsWorld[R],ia.copy(ka[R]),!l&&(N.flipSided||N.doubleSided)&&ia.negate(),U.multiplyVector3(ia);for(R=0,ca=Ta.length;R<ca;R++)if(Ja=Ta[R][S])for(ka=0,ia=Ja.length;ka<ia;ka++)k.uvs[R][ka]=Ja[ka];k.material=N.material;k.faceMaterial=null!==E.materialIndex?ba[E.materialIndex]:null;k.z=k.centroidScreen.z;v.elements.push(k)}}else if(N instanceof THREE.Line){D.multiply(B,aa);S=N.geometry.vertices;R=b();R.positionScreen.copy(S[0].position);D.multiplyVector4(R.positionScreen);\r\n\tfor(C=1,E=S.length;C<E;C++)if(R=b(),R.positionScreen.copy(S[C].position),D.multiplyVector4(R.positionScreen),ca=j[i-2],I.copy(R.positionScreen),Q.copy(ca.positionScreen),d(I,Q))I.multiplyScalar(1/I.w),Q.multiplyScalar(1/Q.w),aa=s[r]=s[r]||new THREE.RenderableLine,r++,n=aa,n.v1.positionScreen.copy(I),n.v2.positionScreen.copy(Q),n.z=Math.max(I.z,Q.z),n.material=N.material,v.elements.push(n)}for(a=0,A=v.sprites.length;a<A;a++)if(N=v.sprites[a].object,aa=N.matrixWorld,N instanceof THREE.Particle&&(F.set(aa.n14,\r\n\taa.n24,aa.n34,1),B.multiplyVector4(F),F.z/=F.w,0<F.z&&1>F.z))e=u[w]=u[w]||new THREE.RenderableParticle,w++,t=e,t.x=F.x/F.w,t.y=F.y/F.w,t.z=F.z,t.rotation=N.rotation.z,t.scale.x=N.scale.x*Math.abs(t.x-(F.x+f.projectionMatrix.n11)/(F.w+f.projectionMatrix.n14)),t.scale.y=N.scale.y*Math.abs(t.y-(F.y+f.projectionMatrix.n22)/(F.w+f.projectionMatrix.n24)),t.material=N.material,v.elements.push(t);g&&v.elements.sort(c);return v}};\r\n\tTHREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\n\tTHREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,f=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-f),f=Math.sin(-f),g=Math.cos(c),c=Math.sin(c),e=a*b,h=d*f;this.w=e*g-h*c;this.x=e*c+h*g;this.y=d*b*g+a*f*c;this.z=a*f*\r\n\tg-d*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=0>a.n32-a.n23?-Math.abs(this.x):Math.abs(this.x);this.y=0>a.n13-a.n31?\r\n\t-Math.abs(this.y):Math.abs(this.y);this.z=0>a.n21-a.n12?-Math.abs(this.z):Math.abs(this.z);this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=\r\n\tthis.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,g=a.x,e=a.y,h=a.z,a=a.w;this.x=b*a+f*g+c*h-d*e;this.y=c*a+f*e+d*g-b*h;this.z=d*a+f*h+b*e-c*g;this.w=f*a-b*g-c*e-d*h;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=\r\n\ta);var c=a.x,d=a.y,f=a.z,g=this.x,e=this.y,h=this.z,i=this.w,j=i*c+e*f-h*d,k=i*d+h*c-g*f,q=i*f+g*d-e*c,c=-g*c-e*d-h*f;b.x=j*i+c*-g+k*-h-q*-e;b.y=k*i+c*-e+q*-g-j*-h;b.z=q*i+c*-h+j*-e-k*-g;return b}};\r\n\tTHREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>f?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(1<=Math.abs(f))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var g=Math.acos(f),f=Math.sqrt(1-f*f);if(0.001>Math.abs(f))return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-d)*g)/f;d=Math.sin(d*g)/f;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};\r\n\tTHREE.Vertex.prototype={constructor:THREE.Vertex,clone:function(){return new THREE.Vertex(this.position.clone())}};THREE.Face3=function(a,b,c,d,f,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};\r\n\tTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\n\treturn a}};THREE.Face4=function(a,b,c,d,f,g,e){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};\r\n\tTHREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\n\treturn a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};\r\n\tTHREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};\r\n\tTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var g=0,e=f.vertexNormals.length;g<e;g++)b.multiplyVector3(f.vertexNormals[g]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,\r\n\t0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,f,g,e=new THREE.Vector3,\r\n\th=new THREE.Vector3;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],e.sub(g.position,f.position),h.sub(d.position,f.position),e.crossSelf(h),e.isZero()||e.normalize(),c.normal.copy(e)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);for(a=0,b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;for(a=0,b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof\r\n\tTHREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{d=this.__tmpVertices;for(a=0,b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),\r\n\td[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));for(a=0,b=this.vertices.length;a<b;a++)d[a].normalize();for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,f;for(c=0,d=this.faces.length;c<\r\n\td;c++){f=this.faces[c];f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone();if(!f.__originalVertexNormals)f.__originalVertexNormals=[];for(a=0,b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var g=new THREE.Geometry;g.faces=this.faces;for(a=0,b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};\r\n\tthis.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var e=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,j;for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],i=new THREE.Vector3,j=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},e.push(i),h.push(j)}e=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;g.computeFaceNormals();\r\n\tg.computeVertexNormals();for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],i=e.faceNormals[c],j=e.vertexNormals[c],i.copy(f.normal),f instanceof THREE.Face3?(j.a.copy(f.vertexNormals[0]),j.b.copy(f.vertexNormals[1]),j.c.copy(f.vertexNormals[2])):(j.a.copy(f.vertexNormals[0]),j.b.copy(f.vertexNormals[1]),j.c.copy(f.vertexNormals[2]),j.d.copy(f.vertexNormals[3]))}for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function a(a,\r\n\tb,c,d,f,g,R){h=a.vertices[b].position;i=a.vertices[c].position;j=a.vertices[d].position;k=e[f];q=e[g];m=e[R];o=i.x-h.x;p=j.x-h.x;n=i.y-h.y;r=j.y-h.y;s=i.z-h.z;t=j.z-h.z;w=q.u-k.u;u=m.u-k.u;v=q.v-k.v;A=m.v-k.v;F=1/(w*A-u*v);I.set((A*o-v*p)*F,(A*n-v*r)*F,(A*s-v*t)*F);Q.set((w*p-u*o)*F,(w*r-u*n)*F,(w*t-u*s)*F);D[b].addSelf(I);D[c].addSelf(I);D[d].addSelf(I);H[b].addSelf(Q);H[c].addSelf(Q);H[d].addSelf(Q)}var b,c,d,f,g,e,h,i,j,k,q,m,o,p,n,r,s,t,w,u,v,A,F,B,D=[],H=[],I=new THREE.Vector3,Q=new THREE.Vector3,\r\n\tP=new THREE.Vector3,L=new THREE.Vector3,K=new THREE.Vector3;for(b=0,c=this.vertices.length;b<c;b++)D[b]=new THREE.Vector3,H[b]=new THREE.Vector3;for(b=0,c=this.faces.length;b<c;b++)g=this.faces[b],e=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,g.b,g.d,0,1,3));var O=[\"a\",\"b\",\"c\",\"d\"];for(b=0,c=this.faces.length;b<c;b++){g=this.faces[b];for(d=0;d<g.vertexNormals.length;d++)K.copy(g.vertexNormals[d]),f=g[O[d]],\r\n\tB=D[f],P.copy(B),P.subSelf(K.multiplyScalar(K.dot(B))).normalize(),L.cross(g.vertexNormals[d],B),f=L.dot(H[f]),f=0>f?-1:1,g.vertexTangents[d]=new THREE.Vector4(P.x,P.y,P.z,f)}this.hasTangents=!0},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3};if(0<this.vertices.length){var a;a=this.vertices[0].position;this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<\r\n\tf;d++){a=this.vertices[d].position;if(a.x<b.x)b.x=a.x;else if(a.x>c.x)c.x=a.x;if(a.y<b.y)b.y=a.y;else if(a.y>c.y)c.y=a.y;if(a.z<b.z)b.z=a.z;else if(a.z>c.z)c.z=a.z}}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){if(!this.boundingSphere)this.boundingSphere={radius:0};for(var a,b=0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c].position.length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,\r\n\t4),g,e;for(g=0,e=this.vertices.length;g<e;g++)d=this.vertices[g].position,d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join(\"_\"),void 0===a[d]?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];for(g=0,e=this.faces.length;g<e;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;\r\n\tTHREE.Spline=function(a){function b(a,b,c,d,f,g,e){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*e+(-3*(b-c)-2*a-d)*g+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,g,e,h,i,j,k,q,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);e=f-g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>this.points.length-2?g:g+1;c[3]=g>this.points.length-3?g:g+2;j=this.points[c[0]];k=this.points[c[1]];\r\n\tq=this.points[c[2]];m=this.points[c[3]];h=e*e;i=e*h;d.x=b(j.x,k.x,q.x,m.x,e,h,i);d.y=b(j.y,k.y,q.y,m.y,e,h,i);d.z=b(j.z,k.z,q.z,m.z,e,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=b=b=0,g=new THREE.Vector3,e=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,d=this.getPoint(b),e.copy(d),i+=e.distanceTo(g),\r\n\tg.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(h[b]=i,f=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,f,g,e,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];e=Math.ceil(a*c/j.total);f=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<e-1;c++)d=f+c*(1/e)*(g-f),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=\r\n\th}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)};\r\n\tTHREE.OrthographicCamera=function(a,b,c,d,f,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==g?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};\r\n\tTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=g;this.updateProjectionMatrix()};\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,\r\n\tthis.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;\r\n\tTHREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=\r\n\t!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\r\n\tTHREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;\r\n\tTHREE.SpotLight=function(a,b,c,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.castShadow=void 0!==d?d:!1;this.onlyShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};\r\n\tTHREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;\r\n\tTHREE.Material=function(a){a=a||{};this.id=THREE.MaterialCount++;this.name=\"\";this.opacity=void 0!==a.opacity?a.opacity:1;this.transparent=void 0!==a.transparent?a.transparent:!1;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.depthTest=void 0!==a.depthTest?a.depthTest:!0;this.depthWrite=void 0!==a.depthWrite?a.depthWrite:!0;this.polygonOffset=void 0!==a.polygonOffset?a.polygonOffset:!1;this.polygonOffsetFactor=void 0!==a.polygonOffsetFactor?a.polygonOffsetFactor:0;this.polygonOffsetUnits=\r\n\tvoid 0!==a.polygonOffsetUnits?a.polygonOffsetUnits:0;this.alphaTest=void 0!==a.alphaTest?a.alphaTest:0;this.overdraw=void 0!==a.overdraw?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.AdditiveAlphaBlending=5;\r\n\tTHREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=void 0!==a.linewidth?a.linewidth:1;this.linecap=void 0!==a.linecap?a.linecap:\"round\";this.linejoin=void 0!==a.linejoin?a.linejoin:\"round\";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\r\n\tTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:\r\n\t!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:\r\n\t!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\r\n\tTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:\r\n\tTHREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?\r\n\ta.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\r\n\tTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.specular=void 0!==a.specular?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=void 0!==a.shininess?a.shininess:30;this.metal=void 0!==a.metal?a.metal:!1;this.perPixel=void 0!==a.perPixel?a.perPixel:!1;this.wrapAround=void 0!==a.wrapAround?a.wrapAround:\r\n\t!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:\r\n\t!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;\r\n\tTHREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\r\n\tTHREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};\r\n\tTHREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.size=void 0!==a.size?a.size:1;this.sizeAttenuation=void 0!==a.sizeAttenuation?a.sizeAttenuation:!0;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;\r\n\tTHREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.program=void 0!==a.program?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};\r\n\tTHREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=void 0!==a.fragmentShader?a.fragmentShader:\"void main() {}\";this.vertexShader=void 0!==a.vertexShader?a.vertexShader:\"void main() {}\";this.uniforms=void 0!==a.uniforms?a.uniforms:{};this.attributes=a.attributes;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.fog=void 0!==\r\n\ta.fog?a.fog:!1;this.lights=void 0!==a.lights?a.lights:!1;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\r\n\tTHREE.Texture=function(a,b,c,d,f,g,e,h){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==g?g:THREE.LinearMipMapLinearFilter;this.format=void 0!==e?e:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=\r\n\t!0;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};\r\n\tTHREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;\r\n\tTHREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,f,g,e,h,i,j){THREE.Texture.call(this,null,g,e,h,i,j,d,f);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;\r\n\tTHREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;\r\n\tTHREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;if(this.geometry)this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius;this.frustumCulled=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;\r\n\tTHREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;\r\n\tTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),\r\n\tthis.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\r\n\tTHREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;\r\n\tTHREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};\r\n\tTHREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,d,f,g,e,h;if(void 0!==this.geometry.bones){for(c=0;c<this.geometry.bones.length;c++)f=this.geometry.bones[c],g=f.pos,e=f.rotq,h=f.scl,d=this.addBone(),d.name=f.name,d.position.set(g[0],g[1],g[2]),d.quaternion.set(e[0],e[1],e[2],e[3]),d.useQuaternion=!0,void 0!==h?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)f=this.geometry.bones[c],\r\n\td=this.bones[c],-1===f.parent?this.add(d):this.bones[f.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,d=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,\r\n\t16*a)};\r\n\tTHREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*c)}if(void 0===this.geometry.skinVerticesA){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,d=\r\n\tnew THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(d));1!==this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y&&(c=0.5*(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y)),this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};\r\n\tTHREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;if(!a.animations)a.animations={};for(var b,c=a.animations,d=/([a-z]+)(\\d+)/,f=0,g=a.morphTargets.length;f<g;f++){var e=a.morphTargets[f].name.match(d);if(e&&1<e.length){e=e[1];c[e]||(c[e]={start:Infinity,end:-Infinity});var h=c[e];if(f<h.start)h.start=f;if(f>h.end)h.end=f;b||(b=e)}}a.firstAnimation=b};\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn(\"animation[\"+a+\"] undefined\")};\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1;if(this.time>this.duration)this.time=this.duration,this.directionBackwards=!0;if(0>this.time)this.time=0,this.directionBackwards=!1}}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);if(a!==this.currentKeyframe)this.morphTargetInfluences[this.lastKeyframe]=\r\n\t0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a;b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;\r\n\tTHREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};\r\n\tTHREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.matrixWorld.n14+a.n32*this.matrixWorld.n24+a.n33*this.matrixWorld.n34+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};\r\n\tTHREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;\r\n\tthis.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;\r\n\tTHREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);\r\n\tTHREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);\r\n\tTHREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;\r\n\tTHREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};\r\n\tTHREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};\r\n\tTHREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};\r\n\tTHREE.DOMRenderer=function(){var a,b,c=new THREE.Projector,d,f,g,e;this.domElement=document.createElement(\"div\");this.setSize=function(a,b){d=a;f=b;g=d/2;e=f/2};this.render=function(d,f){var j,k,q,m,o;a=c.projectScene(d,f);b=a.elements;for(j=0,k=b.length;j<k;j++)if(q=b[j],q instanceof THREE.RenderableParticle&&(m=q.x*g+g,o=q.y*e+e,q=q.material,q instanceof THREE.ParticleDOMMaterial))q=q.domElement,q.style.left=m+\"px\",q.style.top=o+\"px\"}};\r\n\tTHREE.CanvasRenderer=function(a){function b(a){if(t!=a)n.globalAlpha=t=a}function c(a){if(w!=a){switch(a){case THREE.NormalBlending:n.globalCompositeOperation=\"source-over\";break;case THREE.AdditiveBlending:n.globalCompositeOperation=\"lighter\";break;case THREE.SubtractiveBlending:n.globalCompositeOperation=\"darker\"}w=a}}function d(a){if(u!=a)n.strokeStyle=u=a}function f(a){if(v!=a)n.fillStyle=v=a}var a=a||{},g=this,e,h,i,j=new THREE.Projector,k=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),\r\n\tq,m,o,p,n=k.getContext(\"2d\"),r=new THREE.Color(0),s=0,t=1,w=0,u=null,v=null,A=null,F=null,B=null,D,H,I,Q,P=new THREE.RenderableVertex,L=new THREE.RenderableVertex,K,O,y,l,$,C,E,S,R,ca,ka,ia,N=new THREE.Color,aa=new THREE.Color,U=new THREE.Color,ba=new THREE.Color,ea=new THREE.Color,Ta=[],Ja=[],Ka,Ga,qa,ha,ib,db,lb,cb,Za,Sa,La=new THREE.Rectangle,sa=new THREE.Rectangle,za=new THREE.Rectangle,Ea=!1,Fa=new THREE.Color,Wa=new THREE.Color,mb=new THREE.Color,Z=new THREE.Vector3,T,Fb,Uc,eb,pc,Cc,a=16;T=\r\n\tdocument.createElement(\"canvas\");T.width=T.height=2;Fb=T.getContext(\"2d\");Fb.fillStyle=\"rgba(0,0,0,1)\";Fb.fillRect(0,0,2,2);Uc=Fb.getImageData(0,0,2,2);eb=Uc.data;pc=document.createElement(\"canvas\");pc.width=pc.height=a;Cc=pc.getContext(\"2d\");Cc.translate(-a/2,-a/2);Cc.scale(a,a);a--;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){q=a;m=b;o=Math.floor(q/2);p=Math.floor(m/2);k.width=q;k.height=m;La.set(-o,-p,\r\n\to,p);sa.set(-o,-p,o,p);t=1;w=0;B=F=A=v=u=null};this.setClearColor=function(a,b){r.copy(a);s=b;sa.set(-o,-p,o,p)};this.setClearColorHex=function(a,b){r.setHex(a);s=b;sa.set(-o,-p,o,p)};this.clear=function(){n.setTransform(1,0,0,-1,o,p);sa.isEmpty()||(sa.minSelf(La),sa.inflate(2),1>s&&n.clearRect(Math.floor(sa.getX()),Math.floor(sa.getY()),Math.floor(sa.getWidth()),Math.floor(sa.getHeight())),0<s&&(c(THREE.NormalBlending),b(1),f(\"rgba(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*\r\n\tr.b)+\",\"+s+\")\"),n.fillRect(Math.floor(sa.getX()),Math.floor(sa.getY()),Math.floor(sa.getWidth()),Math.floor(sa.getHeight()))),sa.empty())};this.render=function(a,k){function m(a){var b,c,d,f;Fa.setRGB(0,0,0);Wa.setRGB(0,0,0);mb.setRGB(0,0,0);for(b=0,c=a.length;b<c;b++)d=a[b],f=d.color,d instanceof THREE.AmbientLight?(Fa.r+=f.r,Fa.g+=f.g,Fa.b+=f.b):d instanceof THREE.DirectionalLight?(Wa.r+=f.r,Wa.g+=f.g,Wa.b+=f.b):d instanceof THREE.PointLight&&(mb.r+=f.r,mb.g+=f.g,mb.b+=f.b)}function q(a,b,c,d){var f,\r\n\tg,e,h,l,i;for(f=0,g=a.length;f<g;f++)e=a[f],h=e.color,e instanceof THREE.DirectionalLight?(l=e.matrixWorld.getPosition(),i=c.dot(l),0>=i||(i*=e.intensity,d.r+=h.r*i,d.g+=h.g*i,d.b+=h.b*i)):e instanceof THREE.PointLight&&(l=e.matrixWorld.getPosition(),i=c.dot(Z.sub(l,b).normalize()),0>=i||(i*=0==e.distance?1:1-Math.min(b.distanceTo(l)/e.distance,1),0!=i&&(i*=e.intensity,d.r+=h.r*i,d.g+=h.g*i,d.b+=h.b*i)))}function r(a,g,e){b(e.opacity);c(e.blending);var Z,h,l,i,k,j;if(e instanceof THREE.ParticleBasicMaterial){if(e.map)i=\r\n\te.map.image,k=i.width>>1,j=i.height>>1,e=g.scale.x*o,l=g.scale.y*p,Z=e*k,h=l*j,za.set(a.x-Z,a.y-h,a.x+Z,a.y+h),La.intersects(za)&&(n.save(),n.translate(a.x,a.y),n.rotate(-g.rotation),n.scale(e,-l),n.translate(-k,-j),n.drawImage(i,0,0),n.restore())}else e instanceof THREE.ParticleCanvasMaterial&&(Z=g.scale.x*o,h=g.scale.y*p,za.set(a.x-Z,a.y-h,a.x+Z,a.y+h),La.intersects(za)&&(d(e.color.getContextStyle()),f(e.color.getContextStyle()),n.save(),n.translate(a.x,a.y),n.rotate(-g.rotation),n.scale(Z,h),e.program(n),\r\n\tn.restore()))}function s(a,f,g,e){b(e.opacity);c(e.blending);n.beginPath();n.moveTo(a.positionScreen.x,a.positionScreen.y);n.lineTo(f.positionScreen.x,f.positionScreen.y);n.closePath();if(e instanceof THREE.LineBasicMaterial){a=e.linewidth;if(A!=a)n.lineWidth=A=a;a=e.linecap;if(F!=a)n.lineCap=F=a;a=e.linejoin;if(B!=a)n.lineJoin=B=a;d(e.color.getContextStyle());n.stroke();za.inflate(2*e.linewidth)}}function t(a,d,f,e,h,j,n,T){g.info.render.vertices+=3;g.info.render.faces++;b(T.opacity);c(T.blending);\r\n\tK=a.positionScreen.x;O=a.positionScreen.y;y=d.positionScreen.x;l=d.positionScreen.y;$=f.positionScreen.x;C=f.positionScreen.y;v(K,O,y,l,$,C);if(T instanceof THREE.MeshBasicMaterial)if(T.map)T.map.mapping instanceof THREE.UVMapping&&(ha=n.uvs[0],Vc(K,O,y,l,$,C,ha[e].u,ha[e].v,ha[h].u,ha[h].v,ha[j].u,ha[j].v,T.map));else if(T.envMap){if(T.envMap.mapping instanceof THREE.SphericalReflectionMapping)a=k.matrixWorldInverse,Z.copy(n.vertexNormalsWorld[e]),ib=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,db=0.5*\r\n\t-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Z.copy(n.vertexNormalsWorld[h]),lb=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,cb=0.5*-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Z.copy(n.vertexNormalsWorld[j]),Za=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,Sa=0.5*-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Vc(K,O,y,l,$,C,ib,db,lb,cb,Za,Sa,T.envMap)}else T.wireframe?Mb(T.color,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(T.color);else if(T instanceof THREE.MeshLambertMaterial)T.map&&!T.wireframe&&(T.map.mapping instanceof\r\n\tTHREE.UVMapping&&(ha=n.uvs[0],Vc(K,O,y,l,$,C,ha[e].u,ha[e].v,ha[h].u,ha[h].v,ha[j].u,ha[j].v,T.map)),c(THREE.SubtractiveBlending)),Ea?!T.wireframe&&T.shading==THREE.SmoothShading&&3==n.vertexNormalsWorld.length?(aa.r=U.r=ba.r=Fa.r,aa.g=U.g=ba.g=Fa.g,aa.b=U.b=ba.b=Fa.b,q(i,n.v1.positionWorld,n.vertexNormalsWorld[0],aa),q(i,n.v2.positionWorld,n.vertexNormalsWorld[1],U),q(i,n.v3.positionWorld,n.vertexNormalsWorld[2],ba),aa.r=Math.max(0,Math.min(T.color.r*aa.r,1)),aa.g=Math.max(0,Math.min(T.color.g*aa.g,\r\n\t1)),aa.b=Math.max(0,Math.min(T.color.b*aa.b,1)),U.r=Math.max(0,Math.min(T.color.r*U.r,1)),U.g=Math.max(0,Math.min(T.color.g*U.g,1)),U.b=Math.max(0,Math.min(T.color.b*U.b,1)),ba.r=Math.max(0,Math.min(T.color.r*ba.r,1)),ba.g=Math.max(0,Math.min(T.color.g*ba.g,1)),ba.b=Math.max(0,Math.min(T.color.b*ba.b,1)),ea.r=0.5*(U.r+ba.r),ea.g=0.5*(U.g+ba.g),ea.b=0.5*(U.b+ba.b),qa=Dc(aa,U,ba,ea),gc(K,O,y,l,$,C,0,0,1,0,0,1,qa)):(N.r=Fa.r,N.g=Fa.g,N.b=Fa.b,q(i,n.centroidWorld,n.normalWorld,N),N.r=Math.max(0,Math.min(T.color.r*\r\n\tN.r,1)),N.g=Math.max(0,Math.min(T.color.g*N.g,1)),N.b=Math.max(0,Math.min(T.color.b*N.b,1)),T.wireframe?Mb(N,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(N)):T.wireframe?Mb(T.color,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(T.color);else if(T instanceof THREE.MeshDepthMaterial)Ka=k.near,Ga=k.far,aa.r=aa.g=aa.b=1-ac(a.positionScreen.z,Ka,Ga),U.r=U.g=U.b=1-ac(d.positionScreen.z,Ka,Ga),ba.r=ba.g=ba.b=1-ac(f.positionScreen.z,Ka,Ga),ea.r=0.5*(U.r+ba.r),ea.g=0.5*\r\n\t(U.g+ba.g),ea.b=0.5*(U.b+ba.b),qa=Dc(aa,U,ba,ea),gc(K,O,y,l,$,C,0,0,1,0,0,1,qa);else if(T instanceof THREE.MeshNormalMaterial)N.r=hc(n.normalWorld.x),N.g=hc(n.normalWorld.y),N.b=hc(n.normalWorld.z),T.wireframe?Mb(N,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(N)}function u(a,d,f,e,Z,h,T,j,n){g.info.render.vertices+=4;g.info.render.faces++;b(j.opacity);c(j.blending);if(j.map||j.envMap)t(a,d,e,0,1,3,T,j,n),t(Z,f,h,1,2,3,T,j,n);else if(K=a.positionScreen.x,O=a.positionScreen.y,y=d.positionScreen.x,\r\n\tl=d.positionScreen.y,$=f.positionScreen.x,C=f.positionScreen.y,E=e.positionScreen.x,S=e.positionScreen.y,R=Z.positionScreen.x,ca=Z.positionScreen.y,ka=h.positionScreen.x,ia=h.positionScreen.y,j instanceof THREE.MeshBasicMaterial)w(K,O,y,l,$,C,E,S),j.wireframe?Mb(j.color,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(j.color);else if(j instanceof THREE.MeshLambertMaterial)Ea?!j.wireframe&&j.shading==THREE.SmoothShading&&4==T.vertexNormalsWorld.length?(aa.r=U.r=ba.r=ea.r=Fa.r,aa.g=\r\n\tU.g=ba.g=ea.g=Fa.g,aa.b=U.b=ba.b=ea.b=Fa.b,q(i,T.v1.positionWorld,T.vertexNormalsWorld[0],aa),q(i,T.v2.positionWorld,T.vertexNormalsWorld[1],U),q(i,T.v4.positionWorld,T.vertexNormalsWorld[3],ba),q(i,T.v3.positionWorld,T.vertexNormalsWorld[2],ea),aa.r=Math.max(0,Math.min(j.color.r*aa.r,1)),aa.g=Math.max(0,Math.min(j.color.g*aa.g,1)),aa.b=Math.max(0,Math.min(j.color.b*aa.b,1)),U.r=Math.max(0,Math.min(j.color.r*U.r,1)),U.g=Math.max(0,Math.min(j.color.g*U.g,1)),U.b=Math.max(0,Math.min(j.color.b*U.b,1)),\r\n\tba.r=Math.max(0,Math.min(j.color.r*ba.r,1)),ba.g=Math.max(0,Math.min(j.color.g*ba.g,1)),ba.b=Math.max(0,Math.min(j.color.b*ba.b,1)),ea.r=Math.max(0,Math.min(j.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(j.color.g*ea.g,1)),ea.b=Math.max(0,Math.min(j.color.b*ea.b,1)),qa=Dc(aa,U,ba,ea),v(K,O,y,l,E,S),gc(K,O,y,l,E,S,0,0,1,0,0,1,qa),v(R,ca,$,C,ka,ia),gc(R,ca,$,C,ka,ia,1,0,1,1,0,1,qa)):(N.r=Fa.r,N.g=Fa.g,N.b=Fa.b,q(i,T.centroidWorld,T.normalWorld,N),N.r=Math.max(0,Math.min(j.color.r*N.r,1)),N.g=Math.max(0,\r\n\tMath.min(j.color.g*N.g,1)),N.b=Math.max(0,Math.min(j.color.b*N.b,1)),w(K,O,y,l,$,C,E,S),j.wireframe?Mb(N,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(N)):(w(K,O,y,l,$,C,E,S),j.wireframe?Mb(j.color,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(j.color));else if(j instanceof THREE.MeshNormalMaterial)N.r=hc(T.normalWorld.x),N.g=hc(T.normalWorld.y),N.b=hc(T.normalWorld.z),w(K,O,y,l,$,C,E,S),j.wireframe?Mb(N,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):\r\n\tGb(N);else if(j instanceof THREE.MeshDepthMaterial)Ka=k.near,Ga=k.far,aa.r=aa.g=aa.b=1-ac(a.positionScreen.z,Ka,Ga),U.r=U.g=U.b=1-ac(d.positionScreen.z,Ka,Ga),ba.r=ba.g=ba.b=1-ac(e.positionScreen.z,Ka,Ga),ea.r=ea.g=ea.b=1-ac(f.positionScreen.z,Ka,Ga),qa=Dc(aa,U,ba,ea),v(K,O,y,l,E,S),gc(K,O,y,l,E,S,0,0,1,0,0,1,qa),v(R,ca,$,C,ka,ia),gc(R,ca,$,C,ka,ia,1,0,1,1,0,1,qa)}function v(a,b,c,d,f,e){n.beginPath();n.moveTo(a,b);n.lineTo(c,d);n.lineTo(f,e);n.lineTo(a,b);n.closePath()}function w(a,b,c,d,f,e,g,Z){n.beginPath();\r\n\tn.moveTo(a,b);n.lineTo(c,d);n.lineTo(f,e);n.lineTo(g,Z);n.lineTo(a,b);n.closePath()}function Mb(a,b,c,f){if(A!=b)n.lineWidth=A=b;if(F!=c)n.lineCap=F=c;if(B!=f)n.lineJoin=B=f;d(a.getContextStyle());n.stroke();za.inflate(2*b)}function Gb(a){f(a.getContextStyle());n.fill()}function Vc(a,b,c,d,e,g,Z,h,l,i,j,T,k){if(0!=k.image.width){if(!0==k.needsUpdate||void 0==Ta[k.id]){var m=k.wrapS==THREE.RepeatWrapping,o=k.wrapT==THREE.RepeatWrapping;Ta[k.id]=n.createPattern(k.image,m&&o?\"repeat\":m&&!o?\"repeat-x\":\r\n\t!m&&o?\"repeat-y\":\"no-repeat\");k.needsUpdate=!1}f(Ta[k.id]);var m=k.offset.x/k.repeat.x,o=k.offset.y/k.repeat.y,p=k.image.width*k.repeat.x,Fb=k.image.height*k.repeat.y,Z=(Z+m)*p,h=(h+o)*Fb,c=c-a,d=d-b,e=e-a,g=g-b,l=(l+m)*p-Z,i=(i+o)*Fb-h,j=(j+m)*p-Z,T=(T+o)*Fb-h,m=l*T-j*i;if(0==m){if(void 0===Ja[k.id])b=document.createElement(\"canvas\"),b.width=k.image.width,b.height=k.image.height,b=b.getContext(\"2d\"),b.drawImage(k.image,0,0),Ja[k.id]=b.getImageData(0,0,k.image.width,k.image.height).data;b=Ja[k.id];\r\n\tZ=4*(Math.floor(Z)+Math.floor(h)*k.image.width);N.setRGB(b[Z]/255,b[Z+1]/255,b[Z+2]/255);Gb(N)}else m=1/m,k=(T*c-i*e)*m,i=(T*d-i*g)*m,c=(l*e-j*c)*m,d=(l*g-j*d)*m,a=a-k*Z-c*h,Z=b-i*Z-d*h,n.save(),n.transform(k,i,c,d,a,Z),n.fill(),n.restore()}}function gc(a,b,c,d,f,e,g,Z,h,l,i,j,T){var k,m;k=T.width-1;m=T.height-1;g*=k;Z*=m;c-=a;d-=b;f-=a;e-=b;h=h*k-g;l=l*m-Z;i=i*k-g;j=j*m-Z;m=1/(h*j-i*l);k=(j*c-l*f)*m;l=(j*d-l*e)*m;c=(h*f-i*c)*m;d=(h*e-i*d)*m;a=a-k*g-c*Z;b=b-l*g-d*Z;n.save();n.transform(k,l,c,d,a,\r\n\tb);n.clip();n.drawImage(T,0,0);n.restore()}function Dc(a,b,c,d){var f=~~(255*a.r),e=~~(255*a.g),a=~~(255*a.b),g=~~(255*b.r),Z=~~(255*b.g),b=~~(255*b.b),h=~~(255*c.r),l=~~(255*c.g),c=~~(255*c.b),i=~~(255*d.r),j=~~(255*d.g),d=~~(255*d.b);eb[0]=0>f?0:255<f?255:f;eb[1]=0>e?0:255<e?255:e;eb[2]=0>a?0:255<a?255:a;eb[4]=0>g?0:255<g?255:g;eb[5]=0>Z?0:255<Z?255:Z;eb[6]=0>b?0:255<b?255:b;eb[8]=0>h?0:255<h?255:h;eb[9]=0>l?0:255<l?255:l;eb[10]=0>c?0:255<c?255:c;eb[12]=0>i?0:255<i?255:i;eb[13]=0>j?0:255<j?255:\r\n\tj;eb[14]=0>d?0:255<d?255:d;Fb.putImageData(Uc,0,0);Cc.drawImage(T,0,0);return pc}function ac(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function hc(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Nb(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;0!=f&&(f=1/Math.sqrt(f),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}var Ec,fd,Pa,jb;this.autoClear?this.clear():n.setTransform(1,0,0,-1,o,p);g.info.render.vertices=0;g.info.render.faces=0;e=j.projectScene(a,k,this.sortElements);h=e.elements;i=e.lights;(Ea=0<i.length)&&m(i);\r\n\tfor(Ec=0,fd=h.length;Ec<fd;Ec++)if(Pa=h[Ec],jb=Pa.material,jb=jb instanceof THREE.MeshFaceMaterial?Pa.faceMaterial:jb,!(null==jb||0==jb.opacity)){za.empty();if(Pa instanceof THREE.RenderableParticle)D=Pa,D.x*=o,D.y*=p,r(D,Pa,jb,a);else if(Pa instanceof THREE.RenderableLine)D=Pa.v1,H=Pa.v2,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,za.addPoint(D.positionScreen.x,D.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),La.intersects(za)&&s(D,\r\n\tH,Pa,jb,a);else if(Pa instanceof THREE.RenderableFace3)D=Pa.v1,H=Pa.v2,I=Pa.v3,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,I.positionScreen.x*=o,I.positionScreen.y*=p,jb.overdraw&&(Nb(D.positionScreen,H.positionScreen),Nb(H.positionScreen,I.positionScreen),Nb(I.positionScreen,D.positionScreen)),za.add3Points(D.positionScreen.x,D.positionScreen.y,H.positionScreen.x,H.positionScreen.y,I.positionScreen.x,I.positionScreen.y),La.intersects(za)&&t(D,H,I,0,1,2,\r\n\tPa,jb,a);else if(Pa instanceof THREE.RenderableFace4)D=Pa.v1,H=Pa.v2,I=Pa.v3,Q=Pa.v4,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,I.positionScreen.x*=o,I.positionScreen.y*=p,Q.positionScreen.x*=o,Q.positionScreen.y*=p,P.positionScreen.copy(H.positionScreen),L.positionScreen.copy(Q.positionScreen),jb.overdraw&&(Nb(D.positionScreen,H.positionScreen),Nb(H.positionScreen,Q.positionScreen),Nb(Q.positionScreen,D.positionScreen),Nb(I.positionScreen,P.positionScreen),\r\n\tNb(I.positionScreen,L.positionScreen)),za.addPoint(D.positionScreen.x,D.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),za.addPoint(I.positionScreen.x,I.positionScreen.y),za.addPoint(Q.positionScreen.x,Q.positionScreen.y),La.intersects(za)&&u(D,H,I,Q,P,L,Pa,jb,a);sa.addRectangle(za)}n.setTransform(1,0,0,1,0,0)}};\r\n\tTHREE.SVGRenderer=function(){function a(a,b,c,d){var f,e,g,h,i,j;for(f=0,e=a.length;f<e;f++)g=a[f],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition(),j=c.dot(i),0>=j||(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(D.sub(i,b).normalize()),0>=j||(j*=0==g.distance?1:1-Math.min(b.distanceTo(i)/g.distance,1),0!=j&&(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)))}function b(a){null==H[a]&&(H[a]=document.createElementNS(\"http://www.w3.org/2000/svg\",\r\n\t\"path\"),0==K&&H[a].setAttribute(\"shape-rendering\",\"crispEdges\"));return H[a]}function c(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}var d=this,f,g,e,h=new THREE.Projector,i=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),j,k,q,m,o,p,n,r,s=new THREE.Rectangle,t=new THREE.Rectangle,w=!1,u=new THREE.Color,v=new THREE.Color,A=new THREE.Color,F=new THREE.Color,B,D=new THREE.Vector3,H=[],I=[],Q,P,L,K=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,\r\n\tfaces:0}};this.setQuality=function(a){switch(a){case \"high\":K=1;break;case \"low\":K=0}};this.setSize=function(a,b){j=a;k=b;q=j/2;m=k/2;i.setAttribute(\"viewBox\",-q+\" \"+-m+\" \"+j+\" \"+k);i.setAttribute(\"width\",j);i.setAttribute(\"height\",k);s.set(-q,-m,q,m)};this.clear=function(){for(;0<i.childNodes.length;)i.removeChild(i.childNodes[0])};this.render=function(j,k){var l,D,C,E;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;f=h.projectScene(j,k,this.sortElements);g=f.elements;\r\n\te=f.lights;L=P=0;if(w=0<e.length){v.setRGB(0,0,0);A.setRGB(0,0,0);F.setRGB(0,0,0);for(l=0,D=e.length;l<D;l++)E=e[l],C=E.color,E instanceof THREE.AmbientLight?(v.r+=C.r,v.g+=C.g,v.b+=C.b):E instanceof THREE.DirectionalLight?(A.r+=C.r,A.g+=C.g,A.b+=C.b):E instanceof THREE.PointLight&&(F.r+=C.r,F.g+=C.g,F.b+=C.b)}for(l=0,D=g.length;l<D;l++)if(C=g[l],E=C.material,E=E instanceof THREE.MeshFaceMaterial?C.faceMaterial:E,!(null==E||0==E.opacity))if(t.empty(),C instanceof THREE.RenderableParticle)o=C,o.x*=\r\n\tq,o.y*=-m;else if(C instanceof THREE.RenderableLine){if(o=C.v1,p=C.v2,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,o.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),s.intersects(t)){C=o;var S=p,R=L++;null==I[R]&&(I[R]=document.createElementNS(\"http://www.w3.org/2000/svg\",\"line\"),0==K&&I[R].setAttribute(\"shape-rendering\",\"crispEdges\"));Q=I[R];Q.setAttribute(\"x1\",C.positionScreen.x);Q.setAttribute(\"y1\",C.positionScreen.y);\r\n\tQ.setAttribute(\"x2\",S.positionScreen.x);Q.setAttribute(\"y2\",S.positionScreen.y);E instanceof THREE.LineBasicMaterial&&(Q.setAttribute(\"style\",\"fill: none; stroke: \"+E.color.getContextStyle()+\"; stroke-width: \"+E.linewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.linecap+\"; stroke-linejoin: \"+E.linejoin),i.appendChild(Q))}}else if(C instanceof THREE.RenderableFace3){if(o=C.v1,p=C.v2,n=C.v3,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,n.positionScreen.x*=\r\n\tq,n.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,o.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),t.addPoint(n.positionScreen.x,n.positionScreen.y),s.intersects(t)){var S=o,R=p,H=n;d.info.render.vertices+=3;d.info.render.faces++;Q=b(P++);Q.setAttribute(\"d\",\"M \"+S.positionScreen.x+\" \"+S.positionScreen.y+\" L \"+R.positionScreen.x+\" \"+R.positionScreen.y+\" L \"+H.positionScreen.x+\",\"+H.positionScreen.y+\"z\");E instanceof THREE.MeshBasicMaterial?u.copy(E.color):E instanceof THREE.MeshLambertMaterial?\r\n\tw?(u.r=v.r,u.g=v.g,u.b=v.b,a(e,C.centroidWorld,C.normalWorld,u),u.r=Math.max(0,Math.min(E.color.r*u.r,1)),u.g=Math.max(0,Math.min(E.color.g*u.g,1)),u.b=Math.max(0,Math.min(E.color.b*u.b,1))):u.copy(E.color):E instanceof THREE.MeshDepthMaterial?(B=1-E.__2near/(E.__farPlusNear-C.z*E.__farMinusNear),u.setRGB(B,B,B)):E instanceof THREE.MeshNormalMaterial&&u.setRGB(c(C.normalWorld.x),c(C.normalWorld.y),c(C.normalWorld.z));E.wireframe?Q.setAttribute(\"style\",\"fill: none; stroke: \"+u.getContextStyle()+\"; stroke-width: \"+\r\n\tE.wireframeLinewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.wireframeLinecap+\"; stroke-linejoin: \"+E.wireframeLinejoin):Q.setAttribute(\"style\",\"fill: \"+u.getContextStyle()+\"; fill-opacity: \"+E.opacity);i.appendChild(Q)}}else if(C instanceof THREE.RenderableFace4&&(o=C.v1,p=C.v2,n=C.v3,r=C.v4,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,n.positionScreen.x*=q,n.positionScreen.y*=-m,r.positionScreen.x*=q,r.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,\r\n\to.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),t.addPoint(n.positionScreen.x,n.positionScreen.y),t.addPoint(r.positionScreen.x,r.positionScreen.y),s.intersects(t))){var S=o,R=p,H=n,ka=r;d.info.render.vertices+=4;d.info.render.faces++;Q=b(P++);Q.setAttribute(\"d\",\"M \"+S.positionScreen.x+\" \"+S.positionScreen.y+\" L \"+R.positionScreen.x+\" \"+R.positionScreen.y+\" L \"+H.positionScreen.x+\",\"+H.positionScreen.y+\" L \"+ka.positionScreen.x+\",\"+ka.positionScreen.y+\"z\");E instanceof THREE.MeshBasicMaterial?\r\n\tu.copy(E.color):E instanceof THREE.MeshLambertMaterial?w?(u.r=v.r,u.g=v.g,u.b=v.b,a(e,C.centroidWorld,C.normalWorld,u),u.r=Math.max(0,Math.min(E.color.r*u.r,1)),u.g=Math.max(0,Math.min(E.color.g*u.g,1)),u.b=Math.max(0,Math.min(E.color.b*u.b,1))):u.copy(E.color):E instanceof THREE.MeshDepthMaterial?(B=1-E.__2near/(E.__farPlusNear-C.z*E.__farMinusNear),u.setRGB(B,B,B)):E instanceof THREE.MeshNormalMaterial&&u.setRGB(c(C.normalWorld.x),c(C.normalWorld.y),c(C.normalWorld.z));E.wireframe?Q.setAttribute(\"style\",\r\n\t\"fill: none; stroke: \"+u.getContextStyle()+\"; stroke-width: \"+E.wireframeLinewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.wireframeLinecap+\"; stroke-linejoin: \"+E.wireframeLinejoin):Q.setAttribute(\"style\",\"fill: \"+u.getContextStyle()+\"; fill-opacity: \"+E.opacity);i.appendChild(Q)}}};\r\n\tTHREE.ShaderChunk={fog_pars_fragment:\"#ifdef USE_FOG\\nuniform vec3 fogColor;\\n#ifdef FOG_EXP2\\nuniform float fogDensity;\\n#else\\nuniform float fogNear;\\nuniform float fogFar;\\n#endif\\n#endif\",fog_fragment:\"#ifdef USE_FOG\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n#ifdef FOG_EXP2\\nconst float LOG2 = 1.442695;\\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n#else\\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n#endif\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n#endif\",envmap_pars_fragment:\"#ifdef USE_ENVMAP\\nvarying vec3 vReflect;\\nuniform float reflectivity;\\nuniform samplerCube envMap;\\nuniform float flipEnvMap;\\nuniform int combine;\\n#endif\",\r\n\tenvmap_fragment:\"#ifdef USE_ENVMAP\\n#ifdef DOUBLE_SIDED\\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\\n#else\\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\\n#endif\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\nif ( combine == 1 ) {\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\\n} else {\\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\\n}\\n#endif\",\r\n\tenvmap_pars_vertex:\"#ifdef USE_ENVMAP\\nvarying vec3 vReflect;\\nuniform float refractionRatio;\\nuniform bool useRefract;\\n#endif\",envmap_vertex:\"#ifdef USE_ENVMAP\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\\nif ( useRefract ) {\\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\\n} else {\\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\\n}\\n#endif\",\r\n\tmap_particle_pars_fragment:\"#ifdef USE_MAP\\nuniform sampler2D map;\\n#endif\",map_particle_fragment:\"#ifdef USE_MAP\\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\\n#endif\",map_pars_vertex:\"#ifdef USE_MAP\\nvarying vec2 vUv;\\nuniform vec4 offsetRepeat;\\n#endif\",map_pars_fragment:\"#ifdef USE_MAP\\nvarying vec2 vUv;\\nuniform sampler2D map;\\n#endif\",map_vertex:\"#ifdef USE_MAP\\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\",map_fragment:\"#ifdef USE_MAP\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( map, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\\n#endif\\n#endif\",\r\n\tlightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\nuniform sampler2D lightMap;\\n#endif\",lightmap_pars_vertex:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\n#endif\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n#endif\",lightmap_vertex:\"#ifdef USE_LIGHTMAP\\nvUv2 = uv2;\\n#endif\",lights_lambert_pars_vertex:\"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\",\r\n\tlights_lambert_vertex:\"vLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\nvLightBack = vec3( 0.0 );\\n#endif\\ntransformedNormal = normalize( transformedNormal );\\n#if MAX_DIR_LIGHTS > 0\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( transformedNormal, dirVector );\\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n#ifdef DOUBLE_SIDED\\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n#endif\\n}\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\nfloat dotProduct = dot( transformedNormal, lVector );\\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n#ifdef DOUBLE_SIDED\\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n#endif\\n}\\n#endif\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor;\\n#ifdef DOUBLE_SIDED\\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor;\\n#endif\",\r\n\tlights_phong_pars_vertex:\"#if MAX_POINT_LIGHTS > 0\\n#ifndef PHONG_PER_PIXEL\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#endif\",lights_phong_vertex:\"#if MAX_POINT_LIGHTS > 0\\n#ifndef PHONG_PER_PIXEL\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nvPointLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#endif\",\r\n\tlights_phong_pars_fragment:\"uniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n#ifdef PHONG_PER_PIXEL\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#else\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\",\r\n\tlights_phong_fragment:\"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#ifdef DOUBLE_SIDED\\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse  = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n#ifdef PHONG_PER_PIXEL\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\n#else\\nvec3 lVector = normalize( vPointLight[ i ].xyz );\\nfloat lDistance = vPointLight[ i ].w;\\n#endif\\nfloat dotProduct = dot( normal, lVector );\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\nvec3 pointHalfVector = normalize( lVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\\n#else\\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\\n#endif\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse  = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( normal, dirVector );\\n#ifdef WRAP_AROUND\\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\\n#else\\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\\n#endif\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\n#ifdef METAL\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n#endif\",\r\n\tcolor_pars_fragment:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_fragment:\"#ifdef USE_COLOR\\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\\n#endif\",color_pars_vertex:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n#ifdef GAMMA_INPUT\\nvColor = color * color;\\n#else\\nvColor = color;\\n#endif\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n#endif\",skinning_vertex:\"#ifdef USE_SKINNING\\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\\n#endif\",\r\n\tmorphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n#ifndef USE_MORPHNORMALS\\nuniform float morphTargetInfluences[ 8 ];\\n#else\\nuniform float morphTargetInfluences[ 4 ];\\n#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\nvec3 morphed = vec3( 0.0 );\\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n#ifndef USE_MORPHNORMALS\\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n#endif\\nmorphed += position;\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\\n#endif\",\r\n\tdefault_vertex:\"#ifndef USE_MORPHTARGETS\\n#ifndef USE_SKINNING\\ngl_Position = projectionMatrix * mvPosition;\\n#endif\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\nvec3 morphedNormal = vec3( 0.0 );\\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\nmorphedNormal += normal;\\nvec3 transformedNormal = normalMatrix * morphedNormal;\\n#else\\nvec3 transformedNormal = normalMatrix * normal;\\n#endif\",\r\n\tshadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\nuniform float shadowDarkness[ MAX_SHADOWS ];\\nuniform float shadowBias[ MAX_SHADOWS ];\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nfloat unpackDepth( const in vec4 rgba_depth ) {\\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\nfloat depth = dot( rgba_depth, bit_shift );\\nreturn depth;\\n}\\n#endif\",shadowmap_fragment:\"#ifdef USE_SHADOWMAP\\n#ifdef SHADOWMAP_DEBUG\\nvec3 frustumColors[3];\\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n#endif\\n#ifdef SHADOWMAP_CASCADE\\nint inFrustumCount = 0;\\n#endif\\nfloat fDepth;\\nvec3 shadowColor = vec3( 1.0 );\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\nbool inFrustum = all( inFrustumVec );\\n#ifdef SHADOWMAP_CASCADE\\ninFrustumCount += int( inFrustum );\\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n#else\\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n#endif\\nbool frustumTest = all( frustumTestVec );\\nif ( frustumTest ) {\\nshadowCoord.z += shadowBias[ i ];\\n#ifdef SHADOWMAP_SOFT\\nfloat shadow = 0.0;\\nconst float shadowDelta = 1.0 / 9.0;\\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\nfloat dx0 = -1.25 * xPixelOffset;\\nfloat dy0 = -1.25 * yPixelOffset;\\nfloat dx1 = 1.25 * xPixelOffset;\\nfloat dy1 = 1.25 * yPixelOffset;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n#else\\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\nfloat fDepth = unpackDepth( rgbaDepth );\\nif ( fDepth < shadowCoord.z )\\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n#endif\\n}\\n#ifdef SHADOWMAP_DEBUG\\n#ifdef SHADOWMAP_CASCADE\\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n#else\\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n#endif\\n#endif\\n}\\n#ifdef GAMMA_OUTPUT\\nshadowColor *= shadowColor;\\n#endif\\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n#endif\",\r\n\tshadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n#endif\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n#ifdef USE_MORPHTARGETS\\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\\n#else\\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\\n#endif\\n}\\n#endif\",alphatest_fragment:\"#ifdef ALPHATEST\\nif ( gl_FragColor.a < ALPHATEST ) discard;\\n#endif\",\r\n\tlinear_to_gamma_fragment:\"#ifdef GAMMA_OUTPUT\\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n#endif\"};\r\n\tTHREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};\r\n\tTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:0,texture:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:\"t\",value:2,texture:null},envMap:{type:\"t\",value:1,texture:null},flipEnvMap:{type:\"f\",value:-1},useRefract:{type:\"i\",value:0},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:0.98},combine:{type:\"i\",value:0},morphTargetInfluences:{type:\"f\",value:0}},fog:{fogDensity:{type:\"f\",\r\n\tvalue:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]}},particle:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},size:{type:\"f\",value:1},scale:{type:\"f\",\r\n\tvalue:1},map:{type:\"t\",value:0,texture:null},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:6,texture:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\r\n\tTHREE.ShaderLib={depth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:\"void main() {\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\\nvoid main() {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\ngl_FragColor = vec4( vec3( color ), opacity );\\n}\"},normal:{uniforms:{opacity:{type:\"f\",\r\n\tvalue:1}},vertexShader:\"varying vec3 vNormal;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvNormal = normalize( normalMatrix * normal );\\ngl_Position = projectionMatrix * mvPosition;\\n}\",fragmentShader:\"uniform float opacity;\\nvarying vec3 vNormal;\\nvoid main() {\\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\\n}\"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,\r\n\tTHREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,\r\n\tTHREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,\r\n\tTHREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(328965)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"varying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",\r\n\tTHREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,\r\n\tTHREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,\r\n\tTHREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,\"#ifdef DOUBLE_SIDED\\nif ( gl_FrontFacing )\\ngl_FragColor.xyz *= vLightFront;\\nelse\\ngl_FragColor.xyz *= vLightBack;\\n#else\\ngl_FragColor.xyz *= vLightFront;\\n#endif\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,\r\n\tTHREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(328965)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"varying vec3 vViewPosition;\\nvarying vec3 vNormal;\",THREE.ShaderChunk.map_pars_vertex,\r\n\tTHREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,\"#ifndef USE_ENVMAP\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\n#endif\\nvViewPosition = -mvPosition.xyz;\",\r\n\tTHREE.ShaderChunk.morphnormal_vertex,\"vNormal = transformedNormal;\",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform vec3 ambient;\\nuniform vec3 specular;\\nuniform float shininess;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,\r\n\tTHREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,\r\n\tTHREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n#ifdef USE_SIZEATTENUATION\\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n#else\\ngl_PointSize = size;\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\",\r\n\tTHREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( psColor, opacity );\",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\r\n\t\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,\"}\"].join(\"\\n\"),fragmentShader:\"vec4 pack_depth( const in float depth ) {\\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\nvec4 res = fract( depth * bit_shift );\\nres -= res.xxyz * bit_mask;\\nreturn res;\\n}\\nvoid main() {\\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n}\"}};\r\n\tTHREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(void 0===a.__webglCustomAttributesList)a.__webglCustomAttributesList=[];for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;\"v2\"===e.type?g=2:\"v3\"===e.type?g=3:\"v4\"===e.type?g=4:\"c\"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}\r\n\tfunction c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a,b,c){var d,f,e,g,h=a.vertices;g=h.length;\r\n\tvar i=a.colors,j=i.length,k=a.__vertexArray,n=a.__colorArray,m=a.__sortArray,o=a.__dirtyVertices,p=a.__dirtyColors,q=a.__webglCustomAttributesList;if(c.sortParticles){Za.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)f=h[d].position,Sa.copy(f),Za.multiplyVector3(Sa),m[d]=[Sa.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)f=h[m[d][1]].position,e=3*d,k[e]=f.x,k[e+1]=f.y,k[e+2]=f.z;for(d=0;d<j;d++)e=3*d,f=i[m[d][1]],n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],\r\n\tvoid 0===h.boundTo||\"vertices\"===h.boundTo)if(e=0,f=h.value.length,1===h.size)for(d=0;d<f;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if(\"c\"===h.type)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],\r\n\th.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}else{if(o)for(d=0;d<g;d++)f=h[d].position,e=3*d,k[e]=f.x,k[e+1]=f.y,k[e+2]=f.z;if(p)for(d=0;d<j;d++)f=i[d],e=3*d,n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],h.needsUpdate&&(void 0===h.boundTo||\"vertices\"===h.boundTo))if(f=h.value.length,e=0,1===h.size)for(d=0;d<f;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if(\"c\"===\r\n\th.type)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}if(o||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,k,b);if(p||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,\r\n\tn,b);if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}function e(a,b){return b.z-a.z}function h(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ca=C=null,S=R=ba=U=aa=-1,a[d].render(b,c,db,lb),ca=C=null,S=R=ba=U=aa=-1}function i(a,b,c,d,f,e,g,h){var i,l,j,k;b?(l=a.length-1,k=b=-1):(l=0,b=a.length,k=1);for(var n=l;n!==b;n+=k)if(i=a[n],i.render){l=i.object;j=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;\r\n\tg&&y.setBlending(i.blending);y.setDepthTest(i.depthTest);y.setDepthWrite(i.depthWrite);s(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}y.setObjectFaces(l);j instanceof THREE.BufferGeometry?y.renderBufferDirect(d,f,e,i,j,l):y.renderBuffer(d,f,e,i,j,l)}}function j(a,b,c,d,f,e,g){for(var h,i,l=0,j=a.length;l<j;l++)if(h=a[l],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&y.setBlending(h.blending);y.setDepthTest(h.depthTest);y.setDepthWrite(h.depthWrite);s(h.polygonOffset,h.polygonOffsetFactor,\r\n\th.polygonOffsetUnits)}y.renderImmediateObject(c,d,f,h,i)}}function k(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function q(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function m(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function o(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function p(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function n(a,b,c,d,f){d.program||y.initMaterial(d,b,c,f);if(d.morphTargets&&\r\n\t!f.__webglMorphTargetInfluences){f.__webglMorphTargetInfluences=new Float32Array(y.maxMorphTargets);for(var e=0,g=y.maxMorphTargets;e<g;e++)f.__webglMorphTargetInfluences[e]=0}var h=!1,e=d.program,g=e.uniforms,i=d.uniforms;e!==C&&(l.useProgram(e),C=e,h=!0);if(d.id!==S)S=d.id,h=!0;if(h||a!==ca)l.uniformMatrix4fv(g.projectionMatrix,!1,a._projectionMatrixArray),a!==ca&&(ca=a);if(h){if(c&&d.fog)if(i.fogColor.value=c.color,c instanceof THREE.Fog)i.fogNear.value=c.near,i.fogFar.value=c.far;else if(c instanceof\r\n\tTHREE.FogExp2)i.fogDensity.value=c.density;if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){var j,k=0,n=0,m=0,o,p,q,r=sa,s=r.directional.colors,t=r.directional.positions,E=r.point.colors,u=r.point.positions,v=r.point.distances,B=0,R=0,D=q=0;for(c=0,h=b.length;c<h;c++)if(j=b[c],!j.onlyShadow)if(o=j.color,p=j.intensity,q=j.distance,j instanceof THREE.AmbientLight)y.gammaInput?(k+=o.r*o.r,n+=o.g*o.g,m+=o.b*o.b):(k+=o.r,n+=o.g,m+=o.b);else if(j instanceof THREE.DirectionalLight)q=\r\n\t3*B,y.gammaInput?(s[q]=o.r*o.r*p*p,s[q+1]=o.g*o.g*p*p,s[q+2]=o.b*o.b*p*p):(s[q]=o.r*p,s[q+1]=o.g*p,s[q+2]=o.b*p),La.copy(j.matrixWorld.getPosition()),La.subSelf(j.target.matrixWorld.getPosition()),La.normalize(),t[q]=La.x,t[q+1]=La.y,t[q+2]=La.z,B+=1;else if(j instanceof THREE.PointLight||j instanceof THREE.SpotLight)D=3*R,y.gammaInput?(E[D]=o.r*o.r*p*p,E[D+1]=o.g*o.g*p*p,E[D+2]=o.b*o.b*p*p):(E[D]=o.r*p,E[D+1]=o.g*p,E[D+2]=o.b*p),j=j.matrixWorld.getPosition(),u[D]=j.x,u[D+1]=j.y,u[D+2]=j.z,v[R]=q,\r\n\tR+=1;for(c=3*B,h=s.length;c<h;c++)s[c]=0;for(c=3*R,h=E.length;c<h;c++)E[c]=0;r.point.length=R;r.directional.length=B;r.ambient[0]=k;r.ambient[1]=n;r.ambient[2]=m;c=sa;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||\r\n\td instanceof THREE.MeshPhongMaterial)i.opacity.value=d.opacity,y.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,(i.map.texture=d.map)&&i.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),i.lightMap.texture=d.lightMap,i.envMap.texture=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=\r\n\td.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;if(d instanceof THREE.LineBasicMaterial)i.diffuse.value=d.color,i.opacity.value=d.opacity;else if(d instanceof THREE.ParticleBasicMaterial)i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=F.height/2,i.map.texture=d.map;else if(d instanceof THREE.MeshPhongMaterial)i.shininess.value=d.shininess,y.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.specular.value.copyGammaToLinear(d.specular)):\r\n\t(i.ambient.value=d.ambient,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB);else if(d instanceof THREE.MeshLambertMaterial)y.gammaInput?i.ambient.value.copyGammaToLinear(d.ambient):i.ambient.value=d.ambient,d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB);else if(d instanceof THREE.MeshDepthMaterial)i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity;else if(d instanceof THREE.MeshNormalMaterial)i.opacity.value=d.opacity;if(f.receiveShadow&&!d._shadowPass&&i.shadowMatrix){h=\r\n\tc=0;for(k=b.length;h<k;h++)if(n=b[h],n.castShadow&&(n instanceof THREE.SpotLight||n instanceof THREE.DirectionalLight&&!n.shadowCascade))i.shadowMap.texture[c]=n.shadowMap,i.shadowMapSize.value[c]=n.shadowMapSize,i.shadowMatrix.value[c]=n.shadowMatrix,i.shadowDarkness.value[c]=n.shadowDarkness,i.shadowBias.value[c]=n.shadowBias,c++}b=d.uniformsList;for(i=0,c=b.length;i<c;i++)if(n=e.uniforms[b[i][1]])if(h=b[i][0],m=h.type,k=h.value,\"i\"===m)l.uniform1i(n,k);else if(\"f\"===m)l.uniform1f(n,k);else if(\"v2\"===\r\n\tm)l.uniform2f(n,k.x,k.y);else if(\"v3\"===m)l.uniform3f(n,k.x,k.y,k.z);else if(\"v4\"===m)l.uniform4f(n,k.x,k.y,k.z,k.w);else if(\"c\"===m)l.uniform3f(n,k.r,k.g,k.b);else if(\"fv1\"===m)l.uniform1fv(n,k);else if(\"fv\"===m)l.uniform3fv(n,k);else if(\"v2v\"===m){if(!h._array)h._array=new Float32Array(2*k.length);for(m=0,r=k.length;m<r;m++)s=2*m,h._array[s]=k[m].x,h._array[s+1]=k[m].y;l.uniform2fv(n,h._array)}else if(\"v3v\"===m){if(!h._array)h._array=new Float32Array(3*k.length);for(m=0,r=k.length;m<r;m++)s=3*m,\r\n\th._array[s]=k[m].x,h._array[s+1]=k[m].y,h._array[s+2]=k[m].z;l.uniform3fv(n,h._array)}else if(\"v4v\"==m){if(!h._array)h._array=new Float32Array(4*k.length);for(m=0,r=k.length;m<r;m++)s=4*m,h._array[s]=k[m].x,h._array[s+1]=k[m].y,h._array[s+2]=k[m].z,h._array[s+3]=k[m].w;l.uniform4fv(n,h._array)}else if(\"m4\"===m){if(!h._array)h._array=new Float32Array(16);k.flattenToArray(h._array);l.uniformMatrix4fv(n,!1,h._array)}else if(\"m4v\"===m){if(!h._array)h._array=new Float32Array(16*k.length);for(m=0,r=k.length;m<\r\n\tr;m++)k[m].flattenToArrayOffset(h._array,16*m);l.uniformMatrix4fv(n,!1,h._array)}else if(\"t\"===m){if(l.uniform1i(n,k),n=h.texture)if(n.image instanceof Array&&6===n.image.length){if(h=n,6===h.image.length)if(h.needsUpdate){if(!h.image.__webglTextureCube)h.image.__webglTextureCube=l.createTexture();l.activeTexture(l.TEXTURE0+k);l.bindTexture(l.TEXTURE_CUBE_MAP,h.image.__webglTextureCube);k=[];for(n=0;6>n;n++){m=k;r=n;if(y.autoScaleCubemaps){if(s=h.image[n],E=Ea,!(s.width<=E&&s.height<=E))u=Math.max(s.width,\r\n\ts.height),t=Math.floor(s.width*E/u),E=Math.floor(s.height*E/u),u=document.createElement(\"canvas\"),u.width=t,u.height=E,u.getContext(\"2d\").drawImage(s,0,0,s.width,s.height,0,0,t,E),s=u}else s=h.image[n];m[r]=s}n=k[0];m=0===(n.width&n.width-1)&&0===(n.height&n.height-1);r=A(h.format);s=A(h.type);w(l.TEXTURE_CUBE_MAP,h,m);for(n=0;6>n;n++)l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,r,s,k[n]);h.generateMipmaps&&m&&l.generateMipmap(l.TEXTURE_CUBE_MAP);h.needsUpdate=!1;if(h.onUpdate)h.onUpdate()}else l.activeTexture(l.TEXTURE0+\r\n\tk),l.bindTexture(l.TEXTURE_CUBE_MAP,h.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(h=n,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,h.__webglTexture)):y.setTexture(n,k)}else if(\"tv\"===m){if(!h._array){h._array=[];for(m=0,r=h.texture.length;m<r;m++)h._array[m]=k+m}l.uniform1iv(n,h._array);for(m=0,r=h.texture.length;m<r;m++)(n=h.texture[m])&&y.setTexture(n,h._array[m])}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&\r\n\tnull!==g.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(g.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==g.viewMatrix&&l.uniformMatrix4fv(g.viewMatrix,!1,a._viewMatrixArray);d.skinning&&l.uniformMatrix4fv(g.boneGlobalMatrices,!1,f.boneMatrices)}l.uniformMatrix4fv(g.modelViewMatrix,!1,f._modelViewMatrixArray);g.normalMatrix&&l.uniformMatrix3fv(g.normalMatrix,!1,f._normalMatrixArray);\r\n\t(d instanceof THREE.ShaderMaterial||d.envMap||d.skinning||f.receiveShadow)&&null!==g.objectMatrix&&l.uniformMatrix4fv(g.objectMatrix,!1,f._objectMatrixArray);return e}function r(a,b){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);var c=THREE.Matrix4.makeInvert3x3(a._modelViewMatrix);c&&c.transposeIntoArray(a._normalMatrixArray)}function s(a,b,c){ea!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),ea=a);if(a&&(Ta!==b||Ja!==c))l.polygonOffset(b,\r\n\tc),Ta=b,Ja=c}function t(a,b){var c;\"fragment\"===a?c=l.createShader(l.FRAGMENT_SHADER):\"vertex\"===a&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(b),null):c}function w(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,A(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,A(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,A(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,A(b.minFilter))):\r\n\t(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,v(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,v(b.minFilter)))}function u(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,\r\n\tl.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function v(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return l.NEAREST;default:return l.LINEAR}}function A(a){switch(a){case THREE.RepeatWrapping:return l.REPEAT;case THREE.ClampToEdgeWrapping:return l.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return l.MIRRORED_REPEAT;\r\n\tcase THREE.NearestFilter:return l.NEAREST;case THREE.NearestMipMapNearestFilter:return l.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return l.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return l.LINEAR;case THREE.LinearMipMapNearestFilter:return l.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return l.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return l.BYTE;case THREE.UnsignedByteType:return l.UNSIGNED_BYTE;case THREE.ShortType:return l.SHORT;case THREE.UnsignedShortType:return l.UNSIGNED_SHORT;\r\n\tcase THREE.IntType:return l.INT;case THREE.UnsignedIntType:return l.UNSIGNED_INT;case THREE.FloatType:return l.FLOAT;case THREE.AlphaFormat:return l.ALPHA;case THREE.RGBFormat:return l.RGB;case THREE.RGBAFormat:return l.RGBA;case THREE.LuminanceFormat:return l.LUMINANCE;case THREE.LuminanceAlphaFormat:return l.LUMINANCE_ALPHA}return 0}var a=a||{},F=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),B=void 0!==a.precision?a.precision:\"mediump\",D=void 0!==a.alpha?a.alpha:!0,H=void 0!==a.premultipliedAlpha?\r\n\ta.premultipliedAlpha:!0,I=void 0!==a.antialias?a.antialias:!1,Q=void 0!==a.stencil?a.stencil:!0,P=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,L=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),K=void 0!==a.clearAlpha?a.clearAlpha:0,O=void 0!==a.maxLights?a.maxLights:4;this.domElement=F;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=\r\n\tthis.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var y=this,l,$=[],C=null,E=null,S=-1,R=null,ca=null,ka=0,ia=null,N=null,aa=null,U=null,ba=null,\r\n\tea=null,Ta=null,Ja=null,Ka=null,Ga=0,qa=0,ha=0,ib=0,db=0,lb=0,cb=new THREE.Frustum,Za=new THREE.Matrix4,Sa=new THREE.Vector4,La=new THREE.Vector3,sa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}};l=function(){var a;try{if(!(a=F.getContext(\"experimental-webgl\",{alpha:D,premultipliedAlpha:H,antialias:I,stencil:Q,preserveDrawingBuffer:P})))throw\"Error creating WebGL context.\";console.log(navigator.userAgent+\" | \"+a.getParameter(a.VERSION)+\r\n\t\" | \"+a.getParameter(a.VENDOR)+\" | \"+a.getParameter(a.RENDERER)+\" | \"+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(L.r,L.g,L.b,K);this.context=l;var za=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n\tl.getParameter(l.MAX_TEXTURE_SIZE);var Ea=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return l};this.supportsVertexTextures=function(){return 0<za};this.setSize=function(a,b){F.width=a;F.height=b;this.setViewport(0,0,F.width,F.height)};this.setViewport=function(a,b,c,d){Ga=a;qa=b;ha=c;ib=d;l.viewport(Ga,qa,ha,ib)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=\r\n\tfunction(a,b){L.setHex(a);K=b;l.clearColor(L.r,L.g,L.b,K)};this.setClearColor=function(a,b){L.copy(a);K=b;l.clearColor(L.r,L.g,L.b,K)};this.getClearColor=function(){return L};this.getClearAlpha=function(){return K};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);\r\n\tthis.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);\r\n\tl.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinVertexABuffer);l.deleteBuffer(c.__webglSkinVertexBBuffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);l.deleteBuffer(c.__webglLineBuffer);var d=void 0,f=void 0;if(c.numMorphTargets)for(d=0,f=c.numMorphTargets;d<f;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.numMorphNormals)for(d=\r\n\t0,f=c.numMorphNormals;d<f;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer);y.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),y.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),\r\n\ty.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),y.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,l.deleteTexture(a.__webglTexture),y.info.memory.textures--};this.updateShadowMap=function(a,b){C=null;S=R=ba=U=aa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=l.createBuffer();\r\n\tif(!a.__webglNormalBuffer)a.__webglNormalBuffer=l.createBuffer();a.hasPos&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormal){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,f,e,g,h,i,j,k,n,m,o=3*a.count;for(m=0;m<o;m+=9)c=a.normalArray,d=c[m],f=c[m+1],e=c[m+2],g=c[m+3],i=c[m+\r\n\t4],k=c[m+5],h=c[m+6],j=c[m+7],n=c[m+8],d=(d+g+h)/3,f=(f+i+j)/3,e=(e+k+n)/3,c[m]=d,c[m+1]=f,c[m+2]=e,c[m+3]=d,c[m+4]=f,c[m+5]=e,c[m+6]=d,c[m+7]=f,c[m+8]=e}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,f,e){if(0!==d.opacity&&(c=n(a,b,c,d,e),a=c.attributes,b=!1,d=16777215*f.id+2*c.id+(d.wireframe?\r\n\t1:0),d!==R&&(R=d,b=!0),e instanceof THREE.Mesh)){e=f.offsets;d=0;for(c=e.length;d<c;++d)b&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexPositionBuffer),l.vertexAttribPointer(a.position,f.vertexPositionBuffer.itemSize,l.FLOAT,!1,0,12*e[d].index),0<=a.normal&&f.vertexNormalBuffer&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexNormalBuffer),l.vertexAttribPointer(a.normal,f.vertexNormalBuffer.itemSize,l.FLOAT,!1,0,12*e[d].index)),0<=a.uv&&f.vertexUvBuffer&&(f.vertexUvBuffer?(l.bindBuffer(l.ARRAY_BUFFER,f.vertexUvBuffer),\r\n\tl.vertexAttribPointer(a.uv,f.vertexUvBuffer.itemSize,l.FLOAT,!1,0,8*e[d].index),l.enableVertexAttribArray(a.uv)):l.disableVertexAttribArray(a.uv)),0<=a.color&&f.vertexColorBuffer&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexColorBuffer),l.vertexAttribPointer(a.color,f.vertexColorBuffer.itemSize,l.FLOAT,!1,0,16*e[d].index)),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.vertexIndexBuffer)),l.drawElements(l.TRIANGLES,e[d].count,l.UNSIGNED_SHORT,2*e[d].start),y.info.render.calls++,y.info.render.vertices+=e[d].count,\r\n\ty.info.render.faces+=e[d].count/3}};this.renderBuffer=function(a,b,c,d,f,e){if(0!==d.opacity){var g,h,c=n(a,b,c,d,e),b=c.attributes,a=!1,c=16777215*f.id+2*c.id+(d.wireframe?1:0);c!==R&&(R=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(e.morphTargetBase){c=d.program.attributes;-1!==e.morphTargetBase?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[e.morphTargetBase]),l.vertexAttribPointer(c.position,\r\n\t3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglVertexBuffer),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(e.morphTargetForcedOrder.length){g=0;var i=e.morphTargetForcedOrder;for(h=e.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<i.length;)l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[i[g]]),l.vertexAttribPointer(c[\"morphTarget\"+g],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[i[g]]),l.vertexAttribPointer(c[\"morphNormal\"+\r\n\tg],3,l.FLOAT,!1,0,0)),e.__webglMorphTargetInfluences[g]=h[i[g]],g++}else{var i=[],j=-1,k=0;h=e.morphTargetInfluences;var m,o=h.length;g=0;for(-1!==e.morphTargetBase&&(i[e.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(m=0;m<o;m++)!i[m]&&h[m]>j&&(k=m,j=h[k]);l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[k]);l.vertexAttribPointer(c[\"morphTarget\"+g],3,l.FLOAT,!1,0,0);d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[k]),l.vertexAttribPointer(c[\"morphNormal\"+\r\n\tg],3,l.FLOAT,!1,0,0));e.__webglMorphTargetInfluences[g]=j;i[k]=1;j=-1;g++}}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,e.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList)for(g=0,h=f.__webglCustomAttributesList.length;g<h;g++)c=f.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0));0<=b.color&&\r\n\t(l.bindBuffer(l.ARRAY_BUFFER,f.__webglColorBuffer),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglNormalBuffer),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglTangentBuffer),l.vertexAttribPointer(b.tangent,4,l.FLOAT,!1,0,0));0<=b.uv&&(f.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglUVBuffer),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv)):l.disableVertexAttribArray(b.uv));\r\n\t0<=b.uv2&&(f.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglUV2Buffer),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv2)):l.disableVertexAttribArray(b.uv2));d.skinning&&0<=b.skinVertexA&&0<=b.skinVertexB&&0<=b.skinIndex&&0<=b.skinWeight&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinVertexABuffer),l.vertexAttribPointer(b.skinVertexA,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),l.vertexAttribPointer(b.skinVertexB,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,\r\n\tf.__webglSkinIndicesBuffer),l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0))}e instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Ka&&(l.lineWidth(d),Ka=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),l.drawElements(l.LINES,f.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),l.drawElements(l.TRIANGLES,f.__webglFaceCount,\r\n\tl.UNSIGNED_SHORT,0)),y.info.render.calls++,y.info.render.vertices+=f.__webglFaceCount,y.info.render.faces+=f.__webglFaceCount/3):e instanceof THREE.Line?(e=e.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==Ka&&(l.lineWidth(d),Ka=d),l.drawArrays(e,0,f.__webglLineCount),y.info.render.calls++):e instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,f.__webglParticleCount),y.info.render.calls++,y.info.render.points+=f.__webglParticleCount):e instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,\r\n\t0,f.__webglVertexCount),y.info.render.calls++)}};this.render=function(a,b,c,d){var f,g,k,m,n=a.__lights,o=a.fog;S=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);void 0===b.parent&&(console.warn(\"DEPRECATED: Camera hasn't been added to a Scene. Adding it...\"),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();h(this.renderPluginsPre,a,b);y.info.render.calls=0;y.info.render.vertices=0;y.info.render.faces=0;y.info.render.points=0;b.matrixWorldInverse.getInverse(b.matrixWorld);if(!b._viewMatrixArray)b._viewMatrixArray=\r\n\tnew Float32Array(16);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);if(!b._projectionMatrixArray)b._projectionMatrixArray=new Float32Array(16);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Za.multiply(b.projectionMatrix,b.matrixWorldInverse);cb.setFromMatrix(Za);this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);m=a.__webglObjects;for(d=0,f=m.length;d<f;d++)if(g=m[d],k=g.object,g.render=!1,k.visible&&(!(k instanceof\r\n\tTHREE.Mesh||k instanceof THREE.ParticleSystem)||!k.frustumCulled||cb.contains(k))){k.matrixWorld.flattenToArray(k._objectMatrixArray);r(k,b);var p=g,q=p.object,t=p.buffer,E=void 0,E=E=void 0,E=q.material;if(E instanceof THREE.MeshFaceMaterial){if(E=t.materialIndex,0<=E)E=q.geometry.materials[E],E.transparent?(p.transparent=E,p.opaque=null):(p.opaque=E,p.transparent=null)}else if(E)E.transparent?(p.transparent=E,p.opaque=null):(p.opaque=E,p.transparent=null);g.render=!0;if(this.sortObjects)k.renderDepth?\r\n\tg.z=k.renderDepth:(Sa.copy(k.position),Za.multiplyVector3(Sa),g.z=Sa.z)}this.sortObjects&&m.sort(e);m=a.__webglObjectsImmediate;for(d=0,f=m.length;d<f;d++)if(g=m[d],k=g.object,k.visible)k.matrixAutoUpdate&&k.matrixWorld.flattenToArray(k._objectMatrixArray),r(k,b),k=g.object.material,k.transparent?(g.transparent=k,g.opaque=null):(g.opaque=k,g.transparent=null);a.overrideMaterial?(this.setBlending(a.overrideMaterial.blending),this.setDepthTest(a.overrideMaterial.depthTest),this.setDepthWrite(a.overrideMaterial.depthWrite),\r\n\ts(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),i(a.__webglObjects,!1,\"\",b,n,o,!0,a.overrideMaterial),j(a.__webglObjectsImmediate,\"\",b,n,o,!1,a.overrideMaterial)):(this.setBlending(THREE.NormalBlending),i(a.__webglObjects,!0,\"opaque\",b,n,o,!1),j(a.__webglObjectsImmediate,\"opaque\",b,n,o,!1),i(a.__webglObjects,!1,\"transparent\",b,n,o,!0),j(a.__webglObjectsImmediate,\"transparent\",b,n,o,!0));h(this.renderPluginsPost,a,b);c&&c.generateMipmaps&&\r\n\tc.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)};this.renderImmediateObject=function(a,b,c,d,f){var e=n(a,b,c,d,f);R=-1;y.setObjectFaces(f);f.immediateRenderCallback?\r\n\tf.immediateRenderCallback(e,l,cb):f.render(function(a){y.renderBufferImmediate(a,e,d.shading)})};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[];for(;a.__objectsAdded.length;){var e=a.__objectsAdded[0],h=a,i=void 0,j=void 0,n=void 0;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrixArray=new Float32Array(9),e._modelViewMatrixArray=new Float32Array(16),e._objectMatrixArray=\r\n\tnew Float32Array(16),e.matrixWorld.flattenToArray(e._objectMatrixArray),e instanceof THREE.Mesh){if(j=e.geometry,j instanceof THREE.Geometry){if(void 0===j.geometryGroups){var r=j,s=void 0,t=void 0,E=void 0,u=void 0,v=void 0,w=void 0,C=void 0,B={},D=r.morphTargets.length,R=r.morphNormals.length;r.geometryGroups={};for(s=0,t=r.faces.length;s<t;s++)E=r.faces[s],u=E.materialIndex,w=void 0!==u?u:-1,void 0===B[w]&&(B[w]={hash:w,counter:0}),C=B[w].hash+\"_\"+B[w].counter,void 0===r.geometryGroups[C]&&(r.geometryGroups[C]=\r\n\t{faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:D,numMorphNormals:R}),v=E instanceof THREE.Face3?3:4,65535<r.geometryGroups[C].vertices+v&&(B[w].counter+=1,C=B[w].hash+\"_\"+B[w].counter,void 0===r.geometryGroups[C]&&(r.geometryGroups[C]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:D,numMorphNormals:R})),E instanceof THREE.Face3?r.geometryGroups[C].faces3.push(s):r.geometryGroups[C].faces4.push(s),r.geometryGroups[C].vertices+=v;r.geometryGroupsList=[];var A=void 0;\r\n\tfor(A in r.geometryGroups)r.geometryGroups[A].id=ka++,r.geometryGroupsList.push(r.geometryGroups[A])}for(i in j.geometryGroups)if(n=j.geometryGroups[i],!n.__webglVertexBuffer){var S=n;S.__webglVertexBuffer=l.createBuffer();S.__webglNormalBuffer=l.createBuffer();S.__webglTangentBuffer=l.createBuffer();S.__webglColorBuffer=l.createBuffer();S.__webglUVBuffer=l.createBuffer();S.__webglUV2Buffer=l.createBuffer();S.__webglSkinVertexABuffer=l.createBuffer();S.__webglSkinVertexBBuffer=l.createBuffer();S.__webglSkinIndicesBuffer=\r\n\tl.createBuffer();S.__webglSkinWeightsBuffer=l.createBuffer();S.__webglFaceBuffer=l.createBuffer();S.__webglLineBuffer=l.createBuffer();var F=void 0,H=void 0;if(S.numMorphTargets){S.__webglMorphTargetsBuffers=[];for(F=0,H=S.numMorphTargets;F<H;F++)S.__webglMorphTargetsBuffers.push(l.createBuffer())}if(S.numMorphNormals){S.__webglMorphNormalsBuffers=[];for(F=0,H=S.numMorphNormals;F<H;F++)S.__webglMorphNormalsBuffers.push(l.createBuffer())}y.info.memory.geometries++;var N=n,I=e,K=I.geometry,ca=N.faces3,\r\n\tO=N.faces4,L=3*ca.length+4*O.length,P=1*ca.length+2*O.length,ia=3*ca.length+4*O.length,U=c(I,N),Q=f(U),aa=d(U),ba=U.vertexColors?U.vertexColors:!1;N.__vertexArray=new Float32Array(3*L);if(aa)N.__normalArray=new Float32Array(3*L);if(K.hasTangents)N.__tangentArray=new Float32Array(4*L);if(ba)N.__colorArray=new Float32Array(3*L);if(Q){if(0<K.faceUvs.length||0<K.faceVertexUvs.length)N.__uvArray=new Float32Array(2*L);if(1<K.faceUvs.length||1<K.faceVertexUvs.length)N.__uv2Array=new Float32Array(2*L)}if(I.geometry.skinWeights.length&&\r\n\tI.geometry.skinIndices.length)N.__skinVertexAArray=new Float32Array(4*L),N.__skinVertexBArray=new Float32Array(4*L),N.__skinIndexArray=new Float32Array(4*L),N.__skinWeightArray=new Float32Array(4*L);N.__faceArray=new Uint16Array(3*P);N.__lineArray=new Uint16Array(2*ia);var ea=void 0,$=void 0;if(N.numMorphTargets){N.__morphTargetsArrays=[];for(ea=0,$=N.numMorphTargets;ea<$;ea++)N.__morphTargetsArrays.push(new Float32Array(3*L))}if(N.numMorphNormals){N.__morphNormalsArrays=[];for(ea=0,$=N.numMorphNormals;ea<\r\n\t$;ea++)N.__morphNormalsArrays.push(new Float32Array(3*L))}N.__webglFaceCount=3*P;N.__webglLineCount=2*ia;if(U.attributes){if(void 0===N.__webglCustomAttributesList)N.__webglCustomAttributesList=[];var Ja=void 0;for(Ja in U.attributes){var Ta=U.attributes[Ja],ha={},Ka;for(Ka in Ta)ha[Ka]=Ta[Ka];if(!ha.__webglInitialized||ha.createUniqueBuffers){ha.__webglInitialized=!0;var qa=1;\"v2\"===ha.type?qa=2:\"v3\"===ha.type?qa=3:\"v4\"===ha.type?qa=4:\"c\"===ha.type&&(qa=3);ha.size=qa;ha.array=new Float32Array(L*\r\n\tqa);ha.buffer=l.createBuffer();ha.buffer.belongsToAttribute=Ja;Ta.needsUpdate=!0;ha.__original=Ta}N.__webglCustomAttributesList.push(ha)}}N.__inittedArrays=!0;j.__dirtyVertices=!0;j.__dirtyMorphTargets=!0;j.__dirtyElements=!0;j.__dirtyUvs=!0;j.__dirtyNormals=!0;j.__dirtyTangents=!0;j.__dirtyColors=!0}}}else if(e instanceof THREE.Ribbon){if(j=e.geometry,!j.__webglVertexBuffer){var Ga=j;Ga.__webglVertexBuffer=l.createBuffer();Ga.__webglColorBuffer=l.createBuffer();y.info.memory.geometries++;var sa=\r\n\tj,za=sa.vertices.length;sa.__vertexArray=new Float32Array(3*za);sa.__colorArray=new Float32Array(3*za);sa.__webglVertexCount=za;j.__dirtyVertices=!0;j.__dirtyColors=!0}}else if(e instanceof THREE.Line){if(j=e.geometry,!j.__webglVertexBuffer){var La=j;La.__webglVertexBuffer=l.createBuffer();La.__webglColorBuffer=l.createBuffer();y.info.memory.geometries++;var Ea=j,ib=e,db=Ea.vertices.length;Ea.__vertexArray=new Float32Array(3*db);Ea.__colorArray=new Float32Array(3*db);Ea.__webglLineCount=db;b(Ea,ib);\r\n\tj.__dirtyVertices=!0;j.__dirtyColors=!0}}else if(e instanceof THREE.ParticleSystem&&(j=e.geometry,!j.__webglVertexBuffer)){var Za=j;Za.__webglVertexBuffer=l.createBuffer();Za.__webglColorBuffer=l.createBuffer();y.info.geometries++;var Sa=j,lb=e,cb=Sa.vertices.length;Sa.__vertexArray=new Float32Array(3*cb);Sa.__colorArray=new Float32Array(3*cb);Sa.__sortArray=[];Sa.__webglParticleCount=cb;b(Sa,lb);j.__dirtyVertices=!0;j.__dirtyColors=!0}if(!e.__webglActive){if(e instanceof THREE.Mesh)if(j=e.geometry,\r\n\tj instanceof THREE.BufferGeometry)k(h.__webglObjects,j,e);else for(i in j.geometryGroups)n=j.geometryGroups[i],k(h.__webglObjects,n,e);else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(j=e.geometry,k(h.__webglObjects,j,e)):void 0!==THREE.MarchingCubes&&e instanceof THREE.MarchingCubes||e.immediateRenderCallback?h.__webglObjectsImmediate.push({object:e,opaque:null,transparent:null}):e instanceof THREE.Sprite?h.__webglSprites.push(e):e instanceof THREE.LensFlare&&\r\n\th.__webglFlares.push(e);e.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var fb=a.__objectsRemoved[0],Fc=a;fb instanceof THREE.Mesh||fb instanceof THREE.ParticleSystem||fb instanceof THREE.Ribbon||fb instanceof THREE.Line?o(Fc.__webglObjects,fb):fb instanceof THREE.Sprite?p(Fc.__webglSprites,fb):fb instanceof THREE.LensFlare?p(Fc.__webglFlares,fb):(fb instanceof THREE.MarchingCubes||fb.immediateRenderCallback)&&o(Fc.__webglObjectsImmediate,fb);fb.__webglActive=!1;a.__objectsRemoved.splice(0,\r\n\t1)}for(var Wc=0,rd=a.__webglObjects.length;Wc<rd;Wc++){var nb=a.__webglObjects[Wc].object,ja=nb.geometry,qc=void 0,ic=void 0,Xa=void 0;if(nb instanceof THREE.Mesh)if(ja instanceof THREE.BufferGeometry)ja.__dirtyVertices=!1,ja.__dirtyElements=!1,ja.__dirtyUvs=!1,ja.__dirtyNormals=!1,ja.__dirtyColors=!1;else{for(var Xc=0,sd=ja.geometryGroupsList.length;Xc<sd;Xc++)if(qc=ja.geometryGroupsList[Xc],Xa=c(nb,qc),ic=Xa.attributes&&q(Xa),ja.__dirtyVertices||ja.__dirtyMorphTargets||ja.__dirtyElements||ja.__dirtyUvs||\r\n\tja.__dirtyNormals||ja.__dirtyColors||ja.__dirtyTangents||ic){var fa=qc,td=nb,$a=l.DYNAMIC_DRAW,ud=!ja.dynamic,bc=Xa;if(fa.__inittedArrays){var gd=d(bc),Yc=bc.vertexColors?bc.vertexColors:!1,hd=f(bc),Gc=gd===THREE.SmoothShading,G=void 0,V=void 0,kb=void 0,M=void 0,jc=void 0,Ob=void 0,ob=void 0,Hc=void 0,Hb=void 0,kc=void 0,lc=void 0,W=void 0,X=void 0,Y=void 0,oa=void 0,pb=void 0,qb=void 0,rb=void 0,rc=void 0,sb=void 0,tb=void 0,ub=void 0,sc=void 0,vb=void 0,wb=void 0,xb=void 0,tc=void 0,yb=void 0,\r\n\tzb=void 0,Ab=void 0,uc=void 0,Bb=void 0,Cb=void 0,Db=void 0,vc=void 0,Pb=void 0,Qb=void 0,Rb=void 0,Ic=void 0,Sb=void 0,Tb=void 0,Ub=void 0,Jc=void 0,la=void 0,id=void 0,Vb=void 0,mc=void 0,nc=void 0,Ma=void 0,jd=void 0,Ha=void 0,Ia=void 0,Wb=void 0,Ib=void 0,Aa=0,Da=0,Jb=0,Kb=0,gb=0,Ra=0,pa=0,Ua=0,Ba=0,J=0,da=0,z=0,ab=void 0,Na=fa.__vertexArray,wc=fa.__uvArray,xc=fa.__uv2Array,hb=fa.__normalArray,ta=fa.__tangentArray,Oa=fa.__colorArray,ua=fa.__skinVertexAArray,va=fa.__skinVertexBArray,wa=fa.__skinIndexArray,\r\n\txa=fa.__skinWeightArray,Zc=fa.__morphTargetsArrays,$c=fa.__morphNormalsArrays,ad=fa.__webglCustomAttributesList,x=void 0,Eb=fa.__faceArray,bb=fa.__lineArray,Va=td.geometry,vd=Va.__dirtyElements,kd=Va.__dirtyUvs,wd=Va.__dirtyNormals,xd=Va.__dirtyTangents,yd=Va.__dirtyColors,zd=Va.__dirtyMorphTargets,cc=Va.vertices,ma=fa.faces3,na=fa.faces4,Ca=Va.faces,bd=Va.faceVertexUvs[0],cd=Va.faceVertexUvs[1],dc=Va.skinVerticesA,ec=Va.skinVerticesB,fc=Va.skinIndices,Xb=Va.skinWeights,Yb=Va.morphTargets,Kc=Va.morphNormals;\r\n\tif(Va.__dirtyVertices){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=cc[M.a].position,X=cc[M.b].position,Y=cc[M.c].position,Na[Da]=W.x,Na[Da+1]=W.y,Na[Da+2]=W.z,Na[Da+3]=X.x,Na[Da+4]=X.y,Na[Da+5]=X.z,Na[Da+6]=Y.x,Na[Da+7]=Y.y,Na[Da+8]=Y.z,Da+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=cc[M.a].position,X=cc[M.b].position,Y=cc[M.c].position,oa=cc[M.d].position,Na[Da]=W.x,Na[Da+1]=W.y,Na[Da+2]=W.z,Na[Da+3]=X.x,Na[Da+4]=X.y,Na[Da+5]=X.z,Na[Da+6]=Y.x,Na[Da+7]=Y.y,Na[Da+8]=Y.z,Na[Da+9]=oa.x,Na[Da+10]=oa.y,\r\n\tNa[Da+11]=oa.z,Da+=12;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Na,$a)}if(zd)for(Ma=0,jd=Yb.length;Ma<jd;Ma++){da=0;for(G=0,V=ma.length;G<V;G++){Wb=ma[G];M=Ca[Wb];W=Yb[Ma].vertices[M.a].position;X=Yb[Ma].vertices[M.b].position;Y=Yb[Ma].vertices[M.c].position;Ha=Zc[Ma];Ha[da]=W.x;Ha[da+1]=W.y;Ha[da+2]=W.z;Ha[da+3]=X.x;Ha[da+4]=X.y;Ha[da+5]=X.z;Ha[da+6]=Y.x;Ha[da+7]=Y.y;Ha[da+8]=Y.z;if(bc.morphNormals)Gc?(Ib=Kc[Ma].vertexNormals[Wb],sb=Ib.a,tb=Ib.b,ub=Ib.c):ub=\r\n\ttb=sb=Kc[Ma].faceNormals[Wb],Ia=$c[Ma],Ia[da]=sb.x,Ia[da+1]=sb.y,Ia[da+2]=sb.z,Ia[da+3]=tb.x,Ia[da+4]=tb.y,Ia[da+5]=tb.z,Ia[da+6]=ub.x,Ia[da+7]=ub.y,Ia[da+8]=ub.z;da+=9}for(G=0,V=na.length;G<V;G++){Wb=na[G];M=Ca[Wb];W=Yb[Ma].vertices[M.a].position;X=Yb[Ma].vertices[M.b].position;Y=Yb[Ma].vertices[M.c].position;oa=Yb[Ma].vertices[M.d].position;Ha=Zc[Ma];Ha[da]=W.x;Ha[da+1]=W.y;Ha[da+2]=W.z;Ha[da+3]=X.x;Ha[da+4]=X.y;Ha[da+5]=X.z;Ha[da+6]=Y.x;Ha[da+7]=Y.y;Ha[da+8]=Y.z;Ha[da+9]=oa.x;Ha[da+10]=oa.y;Ha[da+\r\n\t11]=oa.z;if(bc.morphNormals)Gc?(Ib=Kc[Ma].vertexNormals[Wb],sb=Ib.a,tb=Ib.b,ub=Ib.c,sc=Ib.d):sc=ub=tb=sb=Kc[Ma].faceNormals[Wb],Ia=$c[Ma],Ia[da]=sb.x,Ia[da+1]=sb.y,Ia[da+2]=sb.z,Ia[da+3]=tb.x,Ia[da+4]=tb.y,Ia[da+5]=tb.z,Ia[da+6]=ub.x,Ia[da+7]=ub.y,Ia[da+8]=ub.z,Ia[da+9]=sc.x,Ia[da+10]=sc.y,Ia[da+11]=sc.z;da+=12}l.bindBuffer(l.ARRAY_BUFFER,fa.__webglMorphTargetsBuffers[Ma]);l.bufferData(l.ARRAY_BUFFER,Zc[Ma],$a);bc.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglMorphNormalsBuffers[Ma]),l.bufferData(l.ARRAY_BUFFER,\r\n\t$c[Ma],$a))}if(Xb.length){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],yb=Xb[M.a],zb=Xb[M.b],Ab=Xb[M.c],xa[J]=yb.x,xa[J+1]=yb.y,xa[J+2]=yb.z,xa[J+3]=yb.w,xa[J+4]=zb.x,xa[J+5]=zb.y,xa[J+6]=zb.z,xa[J+7]=zb.w,xa[J+8]=Ab.x,xa[J+9]=Ab.y,xa[J+10]=Ab.z,xa[J+11]=Ab.w,Bb=fc[M.a],Cb=fc[M.b],Db=fc[M.c],wa[J]=Bb.x,wa[J+1]=Bb.y,wa[J+2]=Bb.z,wa[J+3]=Bb.w,wa[J+4]=Cb.x,wa[J+5]=Cb.y,wa[J+6]=Cb.z,wa[J+7]=Cb.w,wa[J+8]=Db.x,wa[J+9]=Db.y,wa[J+10]=Db.z,wa[J+11]=Db.w,Pb=dc[M.a],Qb=dc[M.b],Rb=dc[M.c],ua[J]=Pb.x,ua[J+1]=Pb.y,\r\n\tua[J+2]=Pb.z,ua[J+3]=1,ua[J+4]=Qb.x,ua[J+5]=Qb.y,ua[J+6]=Qb.z,ua[J+7]=1,ua[J+8]=Rb.x,ua[J+9]=Rb.y,ua[J+10]=Rb.z,ua[J+11]=1,Sb=ec[M.a],Tb=ec[M.b],Ub=ec[M.c],va[J]=Sb.x,va[J+1]=Sb.y,va[J+2]=Sb.z,va[J+3]=1,va[J+4]=Tb.x,va[J+5]=Tb.y,va[J+6]=Tb.z,va[J+7]=1,va[J+8]=Ub.x,va[J+9]=Ub.y,va[J+10]=Ub.z,va[J+11]=1,J+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],yb=Xb[M.a],zb=Xb[M.b],Ab=Xb[M.c],uc=Xb[M.d],xa[J]=yb.x,xa[J+1]=yb.y,xa[J+2]=yb.z,xa[J+3]=yb.w,xa[J+4]=zb.x,xa[J+5]=zb.y,xa[J+6]=zb.z,xa[J+7]=zb.w,xa[J+8]=\r\n\tAb.x,xa[J+9]=Ab.y,xa[J+10]=Ab.z,xa[J+11]=Ab.w,xa[J+12]=uc.x,xa[J+13]=uc.y,xa[J+14]=uc.z,xa[J+15]=uc.w,Bb=fc[M.a],Cb=fc[M.b],Db=fc[M.c],vc=fc[M.d],wa[J]=Bb.x,wa[J+1]=Bb.y,wa[J+2]=Bb.z,wa[J+3]=Bb.w,wa[J+4]=Cb.x,wa[J+5]=Cb.y,wa[J+6]=Cb.z,wa[J+7]=Cb.w,wa[J+8]=Db.x,wa[J+9]=Db.y,wa[J+10]=Db.z,wa[J+11]=Db.w,wa[J+12]=vc.x,wa[J+13]=vc.y,wa[J+14]=vc.z,wa[J+15]=vc.w,Pb=dc[M.a],Qb=dc[M.b],Rb=dc[M.c],Ic=dc[M.d],ua[J]=Pb.x,ua[J+1]=Pb.y,ua[J+2]=Pb.z,ua[J+3]=1,ua[J+4]=Qb.x,ua[J+5]=Qb.y,ua[J+6]=Qb.z,ua[J+7]=1,ua[J+\r\n\t8]=Rb.x,ua[J+9]=Rb.y,ua[J+10]=Rb.z,ua[J+11]=1,ua[J+12]=Ic.x,ua[J+13]=Ic.y,ua[J+14]=Ic.z,ua[J+15]=1,Sb=ec[M.a],Tb=ec[M.b],Ub=ec[M.c],Jc=ec[M.d],va[J]=Sb.x,va[J+1]=Sb.y,va[J+2]=Sb.z,va[J+3]=1,va[J+4]=Tb.x,va[J+5]=Tb.y,va[J+6]=Tb.z,va[J+7]=1,va[J+8]=Ub.x,va[J+9]=Ub.y,va[J+10]=Ub.z,va[J+11]=1,va[J+12]=Jc.x,va[J+13]=Jc.y,va[J+14]=Jc.z,va[J+15]=1,J+=16;0<J&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinVertexABuffer),l.bufferData(l.ARRAY_BUFFER,ua,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinVertexBBuffer),\r\n\tl.bufferData(l.ARRAY_BUFFER,va,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,wa,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,xa,$a))}if(yd&&Yc){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],ob=M.vertexColors,Hc=M.color,3===ob.length&&Yc===THREE.VertexColors?(vb=ob[0],wb=ob[1],xb=ob[2]):xb=wb=vb=Hc,Oa[Ba]=vb.r,Oa[Ba+1]=vb.g,Oa[Ba+2]=vb.b,Oa[Ba+3]=wb.r,Oa[Ba+4]=wb.g,Oa[Ba+5]=wb.b,Oa[Ba+6]=xb.r,Oa[Ba+7]=xb.g,Oa[Ba+8]=xb.b,\r\n\tBa+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],ob=M.vertexColors,Hc=M.color,4===ob.length&&Yc===THREE.VertexColors?(vb=ob[0],wb=ob[1],xb=ob[2],tc=ob[3]):tc=xb=wb=vb=Hc,Oa[Ba]=vb.r,Oa[Ba+1]=vb.g,Oa[Ba+2]=vb.b,Oa[Ba+3]=wb.r,Oa[Ba+4]=wb.g,Oa[Ba+5]=wb.b,Oa[Ba+6]=xb.r,Oa[Ba+7]=xb.g,Oa[Ba+8]=xb.b,Oa[Ba+9]=tc.r,Oa[Ba+10]=tc.g,Oa[Ba+11]=tc.b,Ba+=12;0<Ba&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,Oa,$a))}if(xd&&Va.hasTangents){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],Hb=\r\n\tM.vertexTangents,pb=Hb[0],qb=Hb[1],rb=Hb[2],ta[pa]=pb.x,ta[pa+1]=pb.y,ta[pa+2]=pb.z,ta[pa+3]=pb.w,ta[pa+4]=qb.x,ta[pa+5]=qb.y,ta[pa+6]=qb.z,ta[pa+7]=qb.w,ta[pa+8]=rb.x,ta[pa+9]=rb.y,ta[pa+10]=rb.z,ta[pa+11]=rb.w,pa+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],Hb=M.vertexTangents,pb=Hb[0],qb=Hb[1],rb=Hb[2],rc=Hb[3],ta[pa]=pb.x,ta[pa+1]=pb.y,ta[pa+2]=pb.z,ta[pa+3]=pb.w,ta[pa+4]=qb.x,ta[pa+5]=qb.y,ta[pa+6]=qb.z,ta[pa+7]=qb.w,ta[pa+8]=rb.x,ta[pa+9]=rb.y,ta[pa+10]=rb.z,ta[pa+11]=rb.w,ta[pa+12]=rc.x,ta[pa+\r\n\t13]=rc.y,ta[pa+14]=rc.z,ta[pa+15]=rc.w,pa+=16;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,ta,$a)}if(wd&&gd){for(G=0,V=ma.length;G<V;G++)if(M=Ca[ma[G]],jc=M.vertexNormals,Ob=M.normal,3===jc.length&&Gc)for(la=0;3>la;la++)Vb=jc[la],hb[Ra]=Vb.x,hb[Ra+1]=Vb.y,hb[Ra+2]=Vb.z,Ra+=3;else for(la=0;3>la;la++)hb[Ra]=Ob.x,hb[Ra+1]=Ob.y,hb[Ra+2]=Ob.z,Ra+=3;for(G=0,V=na.length;G<V;G++)if(M=Ca[na[G]],jc=M.vertexNormals,Ob=M.normal,4===jc.length&&Gc)for(la=0;4>la;la++)Vb=jc[la],\r\n\thb[Ra]=Vb.x,hb[Ra+1]=Vb.y,hb[Ra+2]=Vb.z,Ra+=3;else for(la=0;4>la;la++)hb[Ra]=Ob.x,hb[Ra+1]=Ob.y,hb[Ra+2]=Ob.z,Ra+=3;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,hb,$a)}if(kd&&bd&&hd){for(G=0,V=ma.length;G<V;G++)if(kb=ma[G],M=Ca[kb],kc=bd[kb],void 0!==kc)for(la=0;3>la;la++)mc=kc[la],wc[Jb]=mc.u,wc[Jb+1]=mc.v,Jb+=2;for(G=0,V=na.length;G<V;G++)if(kb=na[G],M=Ca[kb],kc=bd[kb],void 0!==kc)for(la=0;4>la;la++)mc=kc[la],wc[Jb]=mc.u,wc[Jb+1]=mc.v,Jb+=2;0<Jb&&(l.bindBuffer(l.ARRAY_BUFFER,\r\n\tfa.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,wc,$a))}if(kd&&cd&&hd){for(G=0,V=ma.length;G<V;G++)if(kb=ma[G],M=Ca[kb],lc=cd[kb],void 0!==lc)for(la=0;3>la;la++)nc=lc[la],xc[Kb]=nc.u,xc[Kb+1]=nc.v,Kb+=2;for(G=0,V=na.length;G<V;G++)if(kb=na[G],M=Ca[kb],lc=cd[kb],void 0!==lc)for(la=0;4>la;la++)nc=lc[la],xc[Kb]=nc.u,xc[Kb+1]=nc.v,Kb+=2;0<Kb&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,xc,$a))}if(vd){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],Eb[gb]=Aa,Eb[gb+1]=Aa+1,Eb[gb+\r\n\t2]=Aa+2,gb+=3,bb[Ua]=Aa,bb[Ua+1]=Aa+1,bb[Ua+2]=Aa,bb[Ua+3]=Aa+2,bb[Ua+4]=Aa+1,bb[Ua+5]=Aa+2,Ua+=6,Aa+=3;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],Eb[gb]=Aa,Eb[gb+1]=Aa+1,Eb[gb+2]=Aa+3,Eb[gb+3]=Aa+1,Eb[gb+4]=Aa+2,Eb[gb+5]=Aa+3,gb+=6,bb[Ua]=Aa,bb[Ua+1]=Aa+1,bb[Ua+2]=Aa,bb[Ua+3]=Aa+3,bb[Ua+4]=Aa+1,bb[Ua+5]=Aa+2,bb[Ua+6]=Aa+2,bb[Ua+7]=Aa+3,Ua+=8,Aa+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,fa.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,Eb,$a);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,fa.__webglLineBuffer);\r\n\tl.bufferData(l.ELEMENT_ARRAY_BUFFER,bb,$a)}if(ad)for(la=0,id=ad.length;la<id;la++)if(x=ad[la],x.__original.needsUpdate){z=0;if(1===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],x.array[z]=x.value[M.a],x.array[z+1]=x.value[M.b],x.array[z+2]=x.value[M.c],z+=3;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],x.array[z]=x.value[M.a],x.array[z+1]=x.value[M.b],x.array[z+2]=x.value[M.c],x.array[z+3]=x.value[M.d],z+=4}else{if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<\r\n\tV;G++)ab=x.value[ma[G]],x.array[z]=ab,x.array[z+1]=ab,x.array[z+2]=ab,z+=3;for(G=0,V=na.length;G<V;G++)ab=x.value[na[G]],x.array[z]=ab,x.array[z+1]=ab,x.array[z+2]=ab,x.array[z+3]=ab,z+=4}}else if(2===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,z+=6;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=x.value[M.a],X=\r\n\tx.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,x.array[z+6]=oa.x,x.array[z+7]=oa.y,z+=8}else{if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,z+=6;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=ab=x.value[na[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+\r\n\t4]=Y.x,x.array[z+5]=Y.y,x.array[z+6]=oa.x,x.array[z+7]=oa.y,z+=8}}else if(3===x.size){var ga;ga=\"c\"===x.type?[\"r\",\"g\",\"b\"]:[\"x\",\"y\",\"z\"];if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],z+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],\r\n\tW=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],x.array[z+9]=oa[ga[0]],x.array[z+10]=oa[ga[1]],x.array[z+11]=oa[ga[2]],z+=12}else if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],\r\n\tx.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],z+=9;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=ab=x.value[na[G]],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],x.array[z+9]=oa[ga[0]],x.array[z+10]=oa[ga[1]],x.array[z+11]=oa[ga[2]],z+=12}}else if(4===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=\r\n\t0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,z+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=\r\n\tX.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,x.array[z+12]=oa.x,x.array[z+13]=oa.y,x.array[z+14]=oa.z,x.array[z+15]=oa.w,z+=16}else if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,z+=12;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=\r\n\tab=x.value[na[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,x.array[z+12]=oa.x,x.array[z+13]=oa.y,x.array[z+14]=oa.z,x.array[z+15]=oa.w,z+=16}l.bindBuffer(l.ARRAY_BUFFER,x.buffer);l.bufferData(l.ARRAY_BUFFER,x.array,$a)}ud&&(delete fa.__inittedArrays,delete fa.__colorArray,delete fa.__normalArray,delete fa.__tangentArray,delete fa.__uvArray,\r\n\tdelete fa.__uv2Array,delete fa.__faceArray,delete fa.__vertexArray,delete fa.__lineArray,delete fa.__skinVertexAArray,delete fa.__skinVertexBArray,delete fa.__skinIndexArray,delete fa.__skinWeightArray)}}ja.__dirtyVertices=!1;ja.__dirtyMorphTargets=!1;ja.__dirtyElements=!1;ja.__dirtyUvs=!1;ja.__dirtyNormals=!1;ja.__dirtyColors=!1;ja.__dirtyTangents=!1;Xa.attributes&&m(Xa)}else if(nb instanceof THREE.Ribbon){if(ja.__dirtyVertices||ja.__dirtyColors){var Zb=ja,ld=l.DYNAMIC_DRAW,yc=void 0,zc=void 0,Lc=\r\n\tvoid 0,$b=void 0,Mc=void 0,md=Zb.vertices,nd=Zb.colors,Ad=md.length,Bd=nd.length,Nc=Zb.__vertexArray,Oc=Zb.__colorArray,Cd=Zb.__dirtyColors;if(Zb.__dirtyVertices){for(yc=0;yc<Ad;yc++)Lc=md[yc].position,$b=3*yc,Nc[$b]=Lc.x,Nc[$b+1]=Lc.y,Nc[$b+2]=Lc.z;l.bindBuffer(l.ARRAY_BUFFER,Zb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Nc,ld)}if(Cd){for(zc=0;zc<Bd;zc++)Mc=nd[zc],$b=3*zc,Oc[$b]=Mc.r,Oc[$b+1]=Mc.g,Oc[$b+2]=Mc.b;l.bindBuffer(l.ARRAY_BUFFER,Zb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,\r\n\tOc,ld)}}ja.__dirtyVertices=!1;ja.__dirtyColors=!1}else if(nb instanceof THREE.Line){Xa=c(nb,qc);ic=Xa.attributes&&q(Xa);if(ja.__dirtyVertices||ja.__dirtyColors||ic){var Lb=ja,dd=l.DYNAMIC_DRAW,Ac=void 0,Bc=void 0,Pc=void 0,ya=void 0,Qc=void 0,od=Lb.vertices,pd=Lb.colors,Dd=od.length,Ed=pd.length,Rc=Lb.__vertexArray,Sc=Lb.__colorArray,Fd=Lb.__dirtyColors,ed=Lb.__webglCustomAttributesList,Tc=void 0,qd=void 0,Qa=void 0,oc=void 0,Ya=void 0,ra=void 0;if(Lb.__dirtyVertices){for(Ac=0;Ac<Dd;Ac++)Pc=od[Ac].position,\r\n\tya=3*Ac,Rc[ya]=Pc.x,Rc[ya+1]=Pc.y,Rc[ya+2]=Pc.z;l.bindBuffer(l.ARRAY_BUFFER,Lb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Rc,dd)}if(Fd){for(Bc=0;Bc<Ed;Bc++)Qc=pd[Bc],ya=3*Bc,Sc[ya]=Qc.r,Sc[ya+1]=Qc.g,Sc[ya+2]=Qc.b;l.bindBuffer(l.ARRAY_BUFFER,Lb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Sc,dd)}if(ed)for(Tc=0,qd=ed.length;Tc<qd;Tc++)if(ra=ed[Tc],ra.needsUpdate&&(void 0===ra.boundTo||\"vertices\"===ra.boundTo)){ya=0;oc=ra.value.length;if(1===ra.size)for(Qa=0;Qa<oc;Qa++)ra.array[Qa]=ra.value[Qa];\r\n\telse if(2===ra.size)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ya+=2;else if(3===ra.size)if(\"c\"===ra.type)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.r,ra.array[ya+1]=Ya.g,ra.array[ya+2]=Ya.b,ya+=3;else for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ra.array[ya+2]=Ya.z,ya+=3;else if(4===ra.size)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ra.array[ya+2]=Ya.z,ra.array[ya+3]=Ya.w,ya+=4;l.bindBuffer(l.ARRAY_BUFFER,\r\n\tra.buffer);l.bufferData(l.ARRAY_BUFFER,ra.array,dd)}}ja.__dirtyVertices=!1;ja.__dirtyColors=!1;Xa.attributes&&m(Xa)}else if(nb instanceof THREE.ParticleSystem)Xa=c(nb,qc),ic=Xa.attributes&&q(Xa),(ja.__dirtyVertices||ja.__dirtyColors||nb.sortParticles||ic)&&g(ja,l.DYNAMIC_DRAW,nb),ja.__dirtyVertices=!1,ja.__dirtyColors=!1,Xa.attributes&&m(Xa)}};this.initMaterial=function(a,b,c,d){var f,e,g,h,i;a instanceof THREE.MeshDepthMaterial?i=\"depth\":a instanceof THREE.MeshNormalMaterial?i=\"normal\":a instanceof\r\n\tTHREE.MeshBasicMaterial?i=\"basic\":a instanceof THREE.MeshLambertMaterial?i=\"lambert\":a instanceof THREE.MeshPhongMaterial?i=\"phong\":a instanceof THREE.LineBasicMaterial?i=\"basic\":a instanceof THREE.ParticleBasicMaterial&&(i=\"particle_basic\");if(i){var j=THREE.ShaderLib[i];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var k,m;e=j=0;for(k=0,m=b.length;k<m;k++)f=b[k],f.onlyShadow||(f instanceof THREE.DirectionalLight&&e++,f instanceof\r\n\tTHREE.PointLight&&j++,f instanceof THREE.SpotLight&&j++);j+e<=O?k=e:(k=Math.ceil(O*e/(j+e)),j=O-k);f=k;e=j;var n=0;for(j=0,k=b.length;j<k;j++)m=b[j],m.castShadow&&(m instanceof THREE.SpotLight&&n++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&n++);var o=50;if(void 0!==d&&d instanceof THREE.SkinnedMesh)o=d.bones.length;var p;a:{k=a.fragmentShader;m=a.vertexShader;var j=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,\r\n\tsizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:f,maxPointLights:e,maxBones:o,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,maxShadows:n,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided},\r\n\tq,d=[];i?d.push(i):(d.push(k),d.push(m));for(q in c)d.push(q),d.push(c[q]);i=d.join();for(q=0,d=$.length;q<d;q++)if($[q].code===i){p=$[q].program;break a}q=l.createProgram();d=[0<za?\"#define VERTEX_TEXTURES\":\"\",y.gammaInput?\"#define GAMMA_INPUT\":\"\",y.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",y.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SHADOWS \"+c.maxShadows,\"#define MAX_BONES \"+c.maxBones,\r\n\tc.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\"#define USE_LIGHTMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.skinning?\"#define USE_SKINNING\":\"\",c.morphTargets?\"#define USE_MORPHTARGETS\":\"\",c.morphNormals?\"#define USE_MORPHNORMALS\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\r\n\t\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",c.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",\"uniform mat4 objectMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec2 uv2;\\n#ifdef USE_COLOR\\nattribute vec3 color;\\n#endif\\n#ifdef USE_MORPHTARGETS\\nattribute vec3 morphTarget0;\\nattribute vec3 morphTarget1;\\nattribute vec3 morphTarget2;\\nattribute vec3 morphTarget3;\\n#ifdef USE_MORPHNORMALS\\nattribute vec3 morphNormal0;\\nattribute vec3 morphNormal1;\\nattribute vec3 morphNormal2;\\nattribute vec3 morphNormal3;\\n#else\\nattribute vec3 morphTarget4;\\nattribute vec3 morphTarget5;\\nattribute vec3 morphTarget6;\\nattribute vec3 morphTarget7;\\n#endif\\n#endif\\n#ifdef USE_SKINNING\\nattribute vec4 skinVertexA;\\nattribute vec4 skinVertexB;\\nattribute vec4 skinIndex;\\nattribute vec4 skinWeight;\\n#endif\\n\"].join(\"\\n\");\r\n\tf=[\"precision \"+B+\" float;\",\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SHADOWS \"+c.maxShadows,c.alphaTest?\"#define ALPHATEST \"+c.alphaTest:\"\",y.gammaInput?\"#define GAMMA_INPUT\":\"\",y.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",y.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",c.useFog&&c.fog?\"#define USE_FOG\":\"\",c.useFog&&c.fog instanceof THREE.FogExp2?\"#define FOG_EXP2\":\"\",c.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\r\n\t\"#define USE_LIGHTMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.metal?\"#define METAL\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",\"uniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\"].join(\"\\n\");l.attachShader(q,t(\"fragment\",f+k));\r\n\tl.attachShader(q,t(\"vertex\",d+m));l.linkProgram(q);l.getProgramParameter(q,l.LINK_STATUS)||console.error(\"Could not initialise shader\\nVALIDATE_STATUS: \"+l.getProgramParameter(q,l.VALIDATE_STATUS)+\", gl error [\"+l.getError()+\"]\");q.uniforms={};q.attributes={};var r,d=\"viewMatrix,modelViewMatrix,projectionMatrix,normalMatrix,objectMatrix,cameraPosition,boneGlobalMatrices,morphTargetInfluences\".split(\",\");for(r in j)d.push(r);r=d;for(d=0,j=r.length;d<j;d++)k=r[d],q.uniforms[k]=l.getUniformLocation(q,\r\n\tk);d=\"position,normal,uv,uv2,tangent,color,skinVertexA,skinVertexB,skinIndex,skinWeight\".split(\",\");for(r=0;r<c.maxMorphTargets;r++)d.push(\"morphTarget\"+r);for(r=0;r<c.maxMorphNormals;r++)d.push(\"morphNormal\"+r);for(p in b)d.push(p);p=d;for(r=0,b=p.length;r<b;r++)c=p[r],q.attributes[c]=l.getAttribLocation(q,c);q.id=$.length;$.push({program:q,code:i});y.info.memory.programs=$.length;p=q}a.program=p;p=a.program.attributes;0<=p.position&&l.enableVertexAttribArray(p.position);0<=p.color&&l.enableVertexAttribArray(p.color);\r\n\t0<=p.normal&&l.enableVertexAttribArray(p.normal);0<=p.tangent&&l.enableVertexAttribArray(p.tangent);a.skinning&&0<=p.skinVertexA&&0<=p.skinVertexB&&0<=p.skinIndex&&0<=p.skinWeight&&(l.enableVertexAttribArray(p.skinVertexA),l.enableVertexAttribArray(p.skinVertexB),l.enableVertexAttribArray(p.skinIndex),l.enableVertexAttribArray(p.skinWeight));if(a.attributes)for(h in a.attributes)void 0!==p[h]&&0<=p[h]&&l.enableVertexAttribArray(p[h]);if(a.morphTargets){a.numSupportedMorphTargets=0;q=\"morphTarget\";\r\n\tfor(h=0;h<this.maxMorphTargets;h++)r=q+h,0<=p[r]&&(l.enableVertexAttribArray(p[r]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;q=\"morphNormal\";for(h=0;h<this.maxMorphNormals;h++)r=q+h,0<=p[r]&&(l.enableVertexAttribArray(p[r]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(g in a.uniforms)a.uniformsList.push([a.uniforms[g],g])};this.setFaceCulling=function(a,b){a?(!b||\"ccw\"===b?l.frontFace(l.CCW):l.frontFace(l.CW),\"back\"===a?l.cullFace(l.BACK):\"front\"===a?l.cullFace(l.FRONT):\r\n\tl.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)};this.setObjectFaces=function(a){if(ia!==a.doubleSided)a.doubleSided?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),ia=a.doubleSided;if(N!==a.flipSided)a.flipSided?l.frontFace(l.CW):l.frontFace(l.CCW),N=a.flipSided};this.setDepthTest=function(a){U!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),U=a)};this.setDepthWrite=function(a){ba!==a&&(l.depthMask(a),ba=a)};this.setBlending=function(a){if(a!==aa){switch(a){case THREE.NoBlending:l.disable(l.BLEND);\r\n\tbreak;case THREE.AdditiveBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE);break;case THREE.SubtractiveBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)}aa=\r\n\ta}};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=l.createTexture(),y.info.memory.textures++;l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),f=A(a.format),e=A(a.type);w(l.TEXTURE_2D,a,d);a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,f,c.width,c.height,0,f,e,c.data):l.texImage2D(l.TEXTURE_2D,0,f,f,e,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);\r\n\ta.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(void 0===a.depthBuffer)a.depthBuffer=!0;if(void 0===a.stencilBuffer)a.stencilBuffer=!0;a.__webglTexture=l.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=A(a.format),f=A(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,\r\n\ta.__webglTexture);w(l.TEXTURE_CUBE_MAP,a,c);for(c=0;6>c;c++){a.__webglFramebuffer[c]=l.createFramebuffer();a.__webglRenderbuffer[c]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,d,a.width,a.height,0,d,f,null);var e=a,g=l.TEXTURE_CUBE_MAP_POSITIVE_X+c;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[c]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,g,e.__webglTexture,0);u(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=\r\n\tl.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),w(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,f,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,d,a.__webglTexture,0),u(a.__webglRenderbuffer,a);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:\r\n\ta.__webglFramebuffer,d=a.width,a=a.height,c=f=0):(b=null,d=ha,a=ib,f=Ga,c=qa);b!==E&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(f,c,d,a),E=b);db=d;lb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};\r\n\tTHREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:\r\n\tTHREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};\r\n\tTHREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};\r\n\tTHREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};\r\n\tTHREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};\r\n\tTHREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};\r\n\tTHREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};\r\n\tTHREE.ColorUtils={adjustHSV:function(a,b,c,d){var f=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,f);f.h=THREE.Math.clamp(f.h+b,0,1);f.s=THREE.Math.clamp(f.s+c,0,1);f.v=THREE.Math.clamp(f.v+d,0,1);a.setHSV(f.h,f.s,f.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,f=a.b,g=Math.max(Math.max(c,d),f),e=Math.min(Math.min(c,d),f);if(e===g)e=c=0;else{var h=g-e,e=h/g,c=(c===g?(d-f)/h:d===g?2+(f-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=e;b.v=g;return b}};\r\n\tTHREE.ColorUtils.__hsv={h:0,s:0,v:0};\r\n\tTHREE.GeometryUtils={merge:function(a,b){for(var c,d,f=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,e=a.vertices,h=g.vertices,i=a.faces,j=g.faces,k=a.faceVertexUvs[0],q=g.faceVertexUvs[0],m={},o=0;o<a.materials.length;o++)m[a.materials[o].id]=o;if(b instanceof THREE.Mesh)b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale);for(var o=0,p=h.length;o<p;o++){var n=h[o].clone();c&&c.multiplyVector3(n.position);e.push(n)}for(o=0,p=j.length;o<p;o++){var e=\r\n\tj[o],r,s,t=e.vertexNormals,w=e.vertexColors;e instanceof THREE.Face3?r=new THREE.Face3(e.a+f,e.b+f,e.c+f):e instanceof THREE.Face4&&(r=new THREE.Face4(e.a+f,e.b+f,e.c+f,e.d+f));r.normal.copy(e.normal);d&&d.multiplyVector3(r.normal);h=0;for(n=t.length;h<n;h++)s=t[h].clone(),d&&d.multiplyVector3(s),r.vertexNormals.push(s);r.color.copy(e.color);h=0;for(n=w.length;h<n;h++)s=w[h],r.vertexColors.push(s.clone());if(void 0!==e.materialIndex){h=g.materials[e.materialIndex];n=h.id;w=m[n];if(void 0===w)w=a.materials.length,\r\n\tm[n]=w,a.materials.push(h);r.materialIndex=w}r.centroid.copy(e.centroid);c&&c.multiplyVector3(r.centroid);i.push(r)}for(o=0,p=q.length;o<p;o++){c=q[o];d=[];h=0;for(n=c.length;h<n;h++)d.push(new THREE.UV(c[h].u,c[h].v));k.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,f=a.faces,g=a.faceVertexUvs[0];if(a.materials)b.materials=a.materials.slice();for(a=0,c=d.length;a<c;a++)b.vertices.push(d[a].clone());for(a=0,c=f.length;a<c;a++)b.faces.push(f[a].clone());for(a=0,c=g.length;a<c;a++){for(var d=\r\n\tg[a],f=[],e=0,h=d.length;e<h;e++)f.push(new THREE.UV(d[e].u,d[e].v));b.faceVertexUvs[0].push(f)}return b},randomPointInTriangle:function(a,b,c){var d,f,g,e=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();1<d+f&&(d=1-d,f=1-f);g=1-d-f;e.copy(a);e.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);e.addSelf(h);h.copy(c);h.multiplyScalar(g);e.addSelf(h);return e},randomPointInFace:function(a,b,c){var d,f,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a].position,\r\n\tf=b.vertices[a.b].position,g=b.vertices[a.c].position,THREE.GeometryUtils.randomPointInTriangle(d,f,g);if(a instanceof THREE.Face4){d=b.vertices[a.a].position;f=b.vertices[a.b].position;g=b.vertices[a.c].position;var b=b.vertices[a.d].position,e;c?a._area1&&a._area2?(c=a._area1,e=a._area2):(c=THREE.GeometryUtils.triangleArea(d,f,b),e=THREE.GeometryUtils.triangleArea(f,g,b),a._area1=c,a._area2=e):(c=THREE.GeometryUtils.triangleArea(d,f,b),e=THREE.GeometryUtils.triangleArea(f,g,b));return THREE.GeometryUtils.random()*\r\n\t(c+e)<c?THREE.GeometryUtils.randomPointInTriangle(d,f,b):THREE.GeometryUtils.randomPointInTriangle(f,g,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var f=c+Math.floor((d-c)/2);return j[f]>a?b(c,f-1):j[f]<a?b(f+1,d):f}return b(0,j.length-1)}var d,f,g=a.faces,e=a.vertices,h=g.length,i=0,j=[],k,q,m,o;for(f=0;f<h;f++){d=g[f];if(d instanceof THREE.Face3)k=e[d.a].position,q=e[d.b].position,m=e[d.c].position,d._area=THREE.GeometryUtils.triangleArea(k,q,m);else if(d instanceof\r\n\tTHREE.Face4)k=e[d.a].position,q=e[d.b].position,m=e[d.c].position,o=e[d.d].position,d._area1=THREE.GeometryUtils.triangleArea(k,q,o),d._area2=THREE.GeometryUtils.triangleArea(q,m,o),d._area=d._area1+d._area2;i+=d._area;j[f]=i}d=[];for(f=0;f<b;f++)e=THREE.GeometryUtils.random()*i,e=c(e),d[f]=THREE.GeometryUtils.randomPointInFace(g[e],a,!0);return d},triangleArea:function(a,b,c){var d,f=THREE.GeometryUtils.__v1;f.sub(a,b);d=f.length();f.sub(a,c);a=f.length();f.sub(b,c);c=f.length();b=0.5*(d+a+c);return Math.sqrt(b*\r\n\t(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).setTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,g=d.length;f<g;f++)1!==d[f].u&&(d[f].u-=Math.floor(d[f].u)),1!==d[f].v&&(d[f].v-=Math.floor(d[f].v))},triangulateQuads:function(a){for(var b=a.faces.length-1;0<=b;b--){var c=\r\n\ta.faces[b];if(c instanceof THREE.Face4){var d=c.a,f=c.b,g=c.c,e=c.d,h=c.clone(),c=c.clone();h.a=d;h.b=f;h.c=e;c.a=f;c.b=g;c.c=e;a.faces.splice(b,1,h,c);for(d=0;d<a.faceVertexUvs.length;d++)a.faceVertexUvs[d].length&&(h=a.faceVertexUvs[d][b],f=h[1],g=h[2],e=h[3],h=[h[0].clone(),f.clone(),e.clone()],f=[f.clone(),g.clone(),e.clone()],a.faceVertexUvs[d].splice(b,1,h,f));for(d=0;d<a.faceUvs.length;d++)a.faceUvs[d].length&&(f=a.faceUvs[d][b],a.faceUvs[d].splice(b,1,f,f))}}a.computeCentroids();a.computeFaceNormals();\r\n\ta.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var f=b.length,g=a.faces[c];if(g instanceof THREE.Face4){var e=g.a,h=g.b,i=g.c,e=a.vertices[e],h=a.vertices[h],i=a.vertices[i],j=a.vertices[g.d];b.push(e.clone());b.push(h.clone());b.push(i.clone());b.push(j.clone());g.a=f;g.b=f+1;g.c=f+2;g.d=f+3}else e=g.a,h=g.b,i=g.c,e=a.vertices[e],h=a.vertices[h],i=a.vertices[i],b.push(e.clone()),b.push(h.clone()),b.push(i.clone()),g.a=f,\r\n\tg.b=f+1,g.c=f+2}a.vertices=b},tessellate:function(a,b){var c,d,f,g,e,h,i,j,k,q,m,o,p,n,r,s,t;for(c=a.faces.length-1;0<=c;c--)if(d=a.faces[c],d instanceof THREE.Face3){if(f=d.a,g=d.b,e=d.c,i=a.vertices[f],j=a.vertices[g],k=a.vertices[e],m=i.position.distanceTo(j.position),o=j.position.distanceTo(k.position),q=i.position.distanceTo(k.position),m>b||o>b||q>b){h=a.vertices.length;t=d.clone();d=d.clone();m>=o&&m>=q?(i=i.clone(),i.position.lerpSelf(j.position,0.5),t.a=f,t.b=h,t.c=e,d.a=h,d.b=g,d.c=e,f=\r\n\t0):o>=m&&o>=q?(i=j.clone(),i.position.lerpSelf(k.position,0.5),t.a=f,t.b=g,t.c=h,d.a=h,d.b=e,d.c=f,f=1):(i=i.clone(),i.position.lerpSelf(k.position,0.5),t.a=f,t.b=g,t.c=h,d.a=h,d.b=g,d.c=e,f=2);a.faces.splice(c,1,t,d);a.vertices.push(i);for(g=0;g<a.faceVertexUvs.length;g++)a.faceVertexUvs[g].length&&(k=a.faceVertexUvs[g][c],j=k[0],e=k[1],i=k[2],0===f?(m=j.clone(),m.lerpSelf(e,0.5),k=[j.clone(),m.clone(),i.clone()],e=[m.clone(),e.clone(),i.clone()]):1===f?(m=e.clone(),m.lerpSelf(i,0.5),k=[j.clone(),\r\n\te.clone(),m.clone()],e=[m.clone(),i.clone(),j.clone()]):(m=j.clone(),m.lerpSelf(i,0.5),k=[j.clone(),e.clone(),m.clone()],e=[m.clone(),e.clone(),i.clone()]),a.faceVertexUvs[g].splice(c,1,k,e))}}else if(f=d.a,g=d.b,e=d.c,h=d.d,i=a.vertices[f],j=a.vertices[g],k=a.vertices[e],q=a.vertices[h],m=i.position.distanceTo(j.position),o=j.position.distanceTo(k.position),p=k.position.distanceTo(q.position),n=i.position.distanceTo(q.position),m>b||o>b||p>b||n>b){r=a.vertices.length;s=a.vertices.length+1;t=d.clone();\r\n\td=d.clone();m>=o&&m>=p&&m>=n||p>=o&&p>=m&&p>=n?(m=i.clone(),m.position.lerpSelf(j.position,0.5),j=k.clone(),j.position.lerpSelf(q.position,0.5),t.a=f,t.b=r,t.c=s,t.d=h,d.a=r,d.b=g,d.c=e,d.d=s,f=0):(m=j.clone(),m.position.lerpSelf(k.position,0.5),j=q.clone(),j.position.lerpSelf(i.position,0.5),t.a=f,t.b=g,t.c=r,t.d=s,d.a=s,d.b=r,d.c=e,d.d=h,f=1);a.faces.splice(c,1,t,d);a.vertices.push(m);a.vertices.push(j);for(g=0;g<a.faceVertexUvs.length;g++)a.faceVertexUvs[g].length&&(k=a.faceVertexUvs[g][c],j=k[0],\r\n\te=k[1],i=k[2],k=k[3],0===f?(m=j.clone(),m.lerpSelf(e,0.5),o=i.clone(),o.lerpSelf(k,0.5),j=[j.clone(),m.clone(),o.clone(),k.clone()],e=[m.clone(),e.clone(),i.clone(),o.clone()]):(m=e.clone(),m.lerpSelf(i,0.5),o=k.clone(),o.lerpSelf(j,0.5),j=[j.clone(),e.clone(),m.clone(),o.clone()],e=[o.clone(),m.clone(),i.clone(),k.clone()]),a.faceVertexUvs[g].splice(c,1,j,e))}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;\r\n\tTHREE.ImageUtils={crossOrigin:\"anonymous\",loadTexture:function(a,b,c){var d=new Image,f=new THREE.Texture(d,b);d.onload=function(){f.needsUpdate=!0;c&&c(this)};d.crossOrigin=this.crossOrigin;d.src=a;return f},loadTextureCube:function(a,b,c){var d,f=[],g=new THREE.Texture(f,b);f.loadCount=0;for(b=0,d=a.length;b<d;++b)f[b]=new Image,f[b].onload=function(){f.loadCount+=1;if(6===f.loadCount)g.needsUpdate=!0;c&&c(this)},f[b].crossOrigin=this.crossOrigin,f[b].src=a[b];return g},getNormalMap:function(a,\r\n\tb){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,f=a.height,g=document.createElement(\"canvas\");g.width=d;g.height=f;var e=g.getContext(\"2d\");e.drawImage(a,0,0);for(var h=e.getImageData(0,0,d,f).data,i=e.createImageData(d,f),j=i.data,k=0;k<d;k++)for(var q=1;q<f;q++){var m=0>q-1?f-1:q-1,o=(q+1)%f,p=0>k-1?d-1:k-1,n=(k+1)%d,r=[],s=[0,0,h[4*(q*d+k)]/255*b];r.push([-1,0,h[4*(q*d+p)]/255*b]);r.push([-1,-1,h[4*(m*d+p)]/255*b]);r.push([0,-1,\r\n\th[4*(m*d+k)]/255*b]);r.push([1,-1,h[4*(m*d+n)]/255*b]);r.push([1,0,h[4*(q*d+n)]/255*b]);r.push([1,1,h[4*(o*d+n)]/255*b]);r.push([0,1,h[4*(o*d+k)]/255*b]);r.push([-1,1,h[4*(o*d+p)]/255*b]);m=[];p=r.length;for(o=0;o<p;o++){var n=r[o],t=r[(o+1)%p],n=[n[0]-s[0],n[1]-s[1],n[2]-s[2]],t=[t[0]-s[0],t[1]-s[1],t[2]-s[2]];m.push(c([n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]))}r=[0,0,0];for(o=0;o<m.length;o++)r[0]+=m[o][0],r[1]+=m[o][1],r[2]+=m[o][2];r[0]/=m.length;r[1]/=m.length;r[2]/=m.length;\r\n\ts=4*(q*d+k);j[s]=255*((r[0]+1)/2)|0;j[s+1]=255*(r[1]+0.5)|0;j[s+2]=255*r[2]|0;j[s+3]=255}e.putImageData(i,0,0);return g},generateDataTexture:function(a,b,c){for(var d=a*b,f=new Uint8Array(3*d),g=Math.floor(255*c.r),e=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;h<d;h++)f[3*h]=g,f[3*h+1]=e,f[3*h+2]=c;a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};\r\n\tTHREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,f=a.children.length;for(d=0;d<f;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,f=new THREE.Object3D;for(c=0;c<d;c++){var g=new THREE.Mesh(a,b[c]);f.add(g)}return f},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),\r\n\tb.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?\r\n\t(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,\r\n\tb.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.doubleSided=a.doubleSided;\r\n\tb.flipSided=a.flipSided;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=\r\n\ta.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\r\n\tif(THREE.WebGLRenderer)THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:\"f\",value:1.02},mFresnelBias:{type:\"f\",value:0.1},mFresnelPower:{type:\"f\",value:2},mFresnelScale:{type:\"f\",value:1},tCube:{type:\"t\",value:1,texture:null}},fragmentShader:\"uniform samplerCube tCube;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\\nrefractedColor.a = 1.0;\\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\\n}\",\r\n\tvertexShader:\"uniform float mRefractionRatio;\\nuniform float mFresnelBias;\\nuniform float mFresnelScale;\\nuniform float mFresnelPower;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\\nvec3 I = mPosition.xyz - cameraPosition;\\nvReflect = reflect( I, nWorld );\\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\\ngl_Position = projectionMatrix * mvPosition;\\n}\"},\r\n\tnormal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:\"i\",value:0},enableDiffuse:{type:\"i\",value:0},enableSpecular:{type:\"i\",value:0},enableReflection:{type:\"i\",value:0},tDiffuse:{type:\"t\",value:0,texture:null},tCube:{type:\"t\",value:1,texture:null},tNormal:{type:\"t\",value:2,texture:null},tSpecular:{type:\"t\",value:3,texture:null},tAO:{type:\"t\",value:4,texture:null},tDisplacement:{type:\"t\",value:5,texture:null},uNormalScale:{type:\"f\",\r\n\tvalue:1},uDisplacementBias:{type:\"f\",value:0},uDisplacementScale:{type:\"f\",value:1},uDiffuseColor:{type:\"c\",value:new THREE.Color(16777215)},uSpecularColor:{type:\"c\",value:new THREE.Color(1118481)},uAmbientColor:{type:\"c\",value:new THREE.Color(16777215)},uShininess:{type:\"f\",value:30},uOpacity:{type:\"f\",value:1},uReflectivity:{type:\"f\",value:0.5},uOffset:{type:\"v2\",value:new THREE.Vector2(0,0)},uRepeat:{type:\"v2\",value:new THREE.Vector2(1,1)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),\r\n\tfragmentShader:[\"uniform vec3 uAmbientColor;\\nuniform vec3 uDiffuseColor;\\nuniform vec3 uSpecularColor;\\nuniform float uShininess;\\nuniform float uOpacity;\\nuniform bool enableDiffuse;\\nuniform bool enableSpecular;\\nuniform bool enableAO;\\nuniform bool enableReflection;\\nuniform sampler2D tDiffuse;\\nuniform sampler2D tNormal;\\nuniform sampler2D tSpecular;\\nuniform sampler2D tAO;\\nuniform samplerCube tCube;\\nuniform float uNormalScale;\\nuniform float uReflectivity;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vViewPosition;\",\r\n\tTHREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\\nvec3 specularTex = vec3( 1.0 );\\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\\nnormalTex.xy *= uNormalScale;\\nnormalTex = normalize( normalTex );\\nif( enableDiffuse ) {\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( tDiffuse, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\\n#endif\\n}\\nif( enableAO ) {\\n#ifdef GAMMA_INPUT\\nvec4 aoColor = texture2D( tAO, vUv );\\naoColor.xyz *= aoColor.xyz;\\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\\n#endif\\n}\\nif( enableSpecular )\\nspecularTex = texture2D( tSpecular, vUv ).xyz;\\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\\nvec3 finalNormal = tsb * normalTex;\\nvec3 normal = normalize( finalNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\\nfloat pointDistance = vPointLight[ i ].w;\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\\n#endif\\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\n#ifdef WRAP_AROUND\\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\\n#endif\\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\\nif ( enableReflection ) {\\nvec3 wPos = cameraPosition - vViewPosition;\\nvec3 vReflect = reflect( normalize( wPos ), normal );\\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\\n}\",\r\n\tTHREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\"),vertexShader:[\"attribute vec4 tangent;\\nuniform vec2 uOffset;\\nuniform vec2 uRepeat;\\n#ifdef VERTEX_TEXTURES\\nuniform sampler2D tDisplacement;\\nuniform float uDisplacementScale;\\nuniform float uDisplacementBias;\\n#endif\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\nvarying vec3 vViewPosition;\",\r\n\tTHREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvViewPosition = -mvPosition.xyz;\\nvNormal = normalMatrix * normal;\\nvTangent = normalMatrix * tangent.xyz;\\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\\nvUv = uv * uRepeat + uOffset;\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\nvPointLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#ifdef VERTEX_TEXTURES\\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\\ngl_Position = projectionMatrix * displacedPosition;\\n#else\\ngl_Position = projectionMatrix * mvPosition;\\n#endif\",\r\n\tTHREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\")},cube:{uniforms:{tCube:{type:\"t\",value:1,texture:null},tFlip:{type:\"f\",value:-1}},vertexShader:\"varying vec3 vViewPosition;\\nvoid main() {\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvViewPosition = cameraPosition - mPosition.xyz;\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vViewPosition;\\nvoid main() {\\nvec3 wPos = cameraPosition - vViewPosition;\\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\\n}\"}}};\r\n\tTHREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null;this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}};\r\n\tTHREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log(\"Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};\r\n\tTHREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1)return this.cacheArcLengths;var b=[],c,d=this.getPoint(0),f,g=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),g+=c.distanceTo(d),b.push(g),d=c;return this.cacheArcLengths=b};\r\n\tTHREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,g;g=b?b:a*c[f-1];for(var e=0,h=f-1,i;e<=h;)if(d=Math.floor(e+(h-e)/2),i=c[d]-g,0>i)e=d+1;else if(0<i)h=d-1;else{h=d;break}d=h;if(c[d]==g)return d/(f-1);e=c[d];return c=(d+(g-e)/(c[d+1]-e))/(f-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};\r\n\tTHREE.Curve.prototype.getTangent=function(a){var b=a-1.0E-4,a=a+1.0E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);a=this.getPoint(a);return b.clone().subSelf(a).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,b){a instanceof THREE.Vector2?(this.v1=a,this.v2=b):THREE.LineCurve.oldConstructor.apply(this,arguments)};\r\n\tTHREE.LineCurve.oldConstructor=function(a,b,c,d){this.constructor(new THREE.Vector2(a,b),new THREE.Vector2(c,d))};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.sub(this.v2,this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};\r\n\tTHREE.LineCurve.prototype.getTangent=function(){var a=new THREE.Vector2;a.sub(this.v2,this.v1);a.normalize();return a};THREE.QuadraticBezierCurve=function(a,b,c){if(!(b instanceof THREE.Vector2))var d=Array.prototype.slice.call(arguments),a=new THREE.Vector2(d[0],d[1]),b=new THREE.Vector2(d[2],d[3]),c=new THREE.Vector2(d[4],d[5]);this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};\r\n\tTHREE.CubicBezierCurve=function(a,b,c,d){if(!(b instanceof THREE.Vector2))var f=Array.prototype.slice.call(arguments),a=new THREE.Vector2(f[0],f[1]),b=new THREE.Vector2(f[2],f[3]),c=new THREE.Vector2(f[4],f[5]),d=new THREE.Vector2(f[6],f[7]);this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;\r\n\tTHREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};\r\n\tTHREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\r\n\tTHREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};THREE.ArcCurve=function(a,b,c,d,f,g){this.aX=a;this.aY=b;this.aRadius=c;this.aStartAngle=d;this.aEndAngle=f;this.aClockwise=g};\r\n\tTHREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.aRadius*Math.cos(b);b=this.aY+this.aRadius*Math.sin(b);return new THREE.Vector2(a,b)};\r\n\tTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){var a=0.5*(c-a),d=0.5*(d-b),g=f*f;return(2*b-2*c+a+d)*f*g+(-3*b+3*c-2*a-d)*g+a*f+b}};\r\n\tTHREE.Curve.create=function(a,b){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});\r\n\tTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});\r\n\tTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});\r\n\tTHREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});\r\n\tTHREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};\r\n\tTHREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\r\n\tTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};\r\n\tTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f;b=c=Number.NEGATIVE_INFINITY;d=f=Number.POSITIVE_INFINITY;var g,e,h,i;i=new THREE.Vector2;for(e=0,h=a.length;e<h;e++){g=a[e];if(g.x>b)b=g.x;else if(g.x<d)d=g.x;if(g.y>c)c=g.y;else if(g.y<c)f=g.y;i.addSelf(g.x,g.y)}return{minX:d,minY:f,maxX:b,maxY:c,centroid:i.divideScalar(h)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vertex(new THREE.Vector3(a[c].x,a[c].y,0)));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\r\n\tTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;if(!b)b=this.bends;for(d=0,f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;if(!b)b=this.bends;for(d=0,f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};\r\n\tTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,g,e,h,i;for(d=0,f=a.length;d<f;d++)g=a[d],e=g.x,h=g.y,i=e/c.maxX,i=b.getUtoTmapping(i,e),e=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),g.x=e.x+h.x,g.y=e.y+h.y;return a};\r\n\tTHREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0==a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=new THREE.Object3D;THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;\r\n\tTHREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=\r\n\t!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;\r\n\tTHREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};\r\n\tTHREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\r\n\tTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};\r\n\tTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,g){var e=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,g)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:e})};\r\n\tTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};\r\n\tTHREE.Path.prototype.arc=function(a,b,c,d,f,g){var e=Array.prototype.slice.call(arguments);this.curves.push(new THREE.ArcCurve(a,b,c,d,f,g));this.actions.push({action:THREE.PathActions.ARC,args:e})};THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};\r\n\tTHREE.Path.prototype.getPoints=function(a,b){var a=a||12,c=[],d,f,g,e,h,i,j,k,q,m,o,p,n;for(d=0,f=this.actions.length;d<f;d++)switch(g=this.actions[d],e=g.action,g=g.args,e){case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=g[2];i=g[3];q=g[0];m=g[1];0<c.length?(e=c[c.length-1],o=e.x,p=e.y):(e=this.actions[d-1].args,o=e[e.length-2],p=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,g=THREE.Shape.Utils.b2(n,o,q,h),n=THREE.Shape.Utils.b2(n,p,m,\r\n\ti),c.push(new THREE.Vector2(g,n));break;case THREE.PathActions.BEZIER_CURVE_TO:h=g[4];i=g[5];q=g[0];m=g[1];j=g[2];k=g[3];0<c.length?(e=c[c.length-1],o=e.x,p=e.y):(e=this.actions[d-1].args,o=e[e.length-2],p=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,g=THREE.Shape.Utils.b3(n,o,q,j,h),n=THREE.Shape.Utils.b3(n,p,m,k,i),c.push(new THREE.Vector2(g,n));break;case THREE.PathActions.CSPLINE_THRU:e=this.actions[d-1].args;e=[new THREE.Vector2(e[e.length-2],e[e.length-1])];n=a*g[0].length;e=e.concat(g[0]);g=new THREE.SplineCurve(e);\r\n\tfor(e=1;e<=n;e++)c.push(g.getPointAt(e/n));break;case THREE.PathActions.ARC:e=this.actions[d-1].args;h=g[0];i=g[1];j=g[2];q=g[3];n=g[4];m=!!g[5];k=e[e.length-2];o=e[e.length-1];0==e.length&&(k=o=0);p=n-q;var r=2*a;for(e=1;e<=r;e++)n=e/r,m||(n=1-n),n=q+n*p,g=k+h+j*Math.cos(n),n=o+i+j*Math.sin(n),c.push(new THREE.Vector2(g,n))}b&&c.push(c[0]);return c};THREE.Path.prototype.transform=function(a,b){this.getBoundingBox();return this.getWrapPoints(this.getPoints(b),a)};\r\n\tTHREE.Path.prototype.nltransform=function(a,b,c,d,f,g){var e=this.getPoints(),h,i,j,k,q;for(h=0,i=e.length;h<i;h++)j=e[h],k=j.x,q=j.y,j.x=a*k+b*q+c,j.y=d*q+f*k+g;return e};\r\n\tTHREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement(\"canvas\"),a.setAttribute(\"width\",b.maxX+100),a.setAttribute(\"height\",b.maxY+100),document.body.appendChild(a));b=a.getContext(\"2d\");b.fillStyle=\"white\";b.fillRect(0,0,a.width,a.height);b.strokeStyle=\"black\";b.beginPath();var c,d,f;for(a=0,c=this.actions.length;a<c;a++)d=this.actions[a],f=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,f);b.stroke();b.closePath();b.strokeStyle=\"red\";d=\r\n\tthis.getPoints();for(a=0,c=d.length;a<c;a++)f=d[a],b.beginPath(),b.arc(f.x,f.y,1.5,0,2*Math.PI,!1),b.stroke(),b.closePath()};\r\n\tTHREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],g=new THREE.Path;for(a=0,b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[c].apply(g,d);0!=g.actions.length&&f.push(g);if(0==f.length)return[];var e;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return g=f[0],e=new THREE.Shape,e.actions=g.actions,e.curves=g.curves,d.push(e),d;if(a){e=new THREE.Shape;for(a=0,b=f.length;a<\r\n\tb;a++)g=f[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(e.actions=g.actions,e.curves=g.curves,d.push(e),e=new THREE.Shape):e.holes.push(g)}else{for(a=0,b=f.length;a<b;a++)g=f[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(e&&d.push(e),e=new THREE.Shape,e.actions=g.actions,e.curves=g.curves):e.holes.push(g);d.push(e)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;\r\n\tTHREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\r\n\tTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\r\n\tTHREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,g,e,h,i,j,k,q,m,o,p=[];for(i=0;i<b.length;i++){j=b[i];Array.prototype.push.apply(d,j);g=Number.POSITIVE_INFINITY;for(f=0;f<j.length;f++){m=j[f];o=[];for(q=0;q<c.length;q++)k=c[q],k=m.distanceToSquared(k),o.push(k),k<g&&(g=k,e=f,h=q)}f=0<=h-1?h-1:c.length-1;g=0<=e-1?e-1:j.length-1;var n=[j[e],c[h],c[f]];q=THREE.FontUtils.Triangulate.area(n);var r=[j[e],j[g],c[h]];m=THREE.FontUtils.Triangulate.area(r);o=h;k=e;h+=1;e+=-1;0>\r\n\th&&(h+=c.length);h%=c.length;0>e&&(e+=j.length);e%=j.length;f=0<=h-1?h-1:c.length-1;g=0<=e-1?e-1:j.length-1;n=[j[e],c[h],c[f]];n=THREE.FontUtils.Triangulate.area(n);r=[j[e],j[g],c[h]];r=THREE.FontUtils.Triangulate.area(r);q+m>n+r&&(h=o,e=k,0>h&&(h+=c.length),h%=c.length,0>e&&(e+=j.length),e%=j.length,f=0<=h-1?h-1:c.length-1,g=0<=e-1?e-1:j.length-1);q=c.slice(0,h);m=c.slice(h);o=j.slice(e);k=j.slice(0,e);g=[j[e],j[g],c[h]];p.push([j[e],c[h],c[f]]);p.push(g);c=q.concat(o).concat(k).concat(m)}return{shape:c,\r\n\tisolatedPts:p,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),g,e,h,i,j={};for(g=0,e=d.length;g<e;g++)i=d[g].x+\":\"+d[g].y,void 0!==j[i]&&console.log(\"Duplicate point\",i),j[i]=g;for(g=0,e=c.length;g<e;g++){h=c[g];for(d=0;3>d;d++)i=h[d].x+\":\"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}for(g=0,e=f.length;g<e;g++){h=f[g];for(d=0;3>d;d++)i=h[d].x+\":\"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}return c.concat(f)},\r\n\tisClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+\r\n\tthis.b3p3(a,f)}};THREE.TextPath=function(a,b){THREE.Path.call(this);this.parameters=b||{};this.set(a)};THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters;this.text=a;var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:\"helvetiker\",f=void 0!==b.weight?b.weight:\"normal\",g=void 0!==b.style?b.style:\"normal\";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=g};\r\n\tTHREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b};\r\n\tTHREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log(\"THREE.AnimationHandler.add: Warning! \"+a.name+\" already exists in library. Overwriting.\");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(0>a.hierarchy[c].keys[d].time)a.hierarchy[c].keys[d].time=\r\n\t0;if(void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var j=a.hierarchy[c].keys[d].morphTargets[i];h[j]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var k=\r\n\t{};for(j in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===j){k[j]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(k[j]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=k}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*\r\n\ta.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if(\"string\"===typeof a){if(b[a])return b[a];console.log(\"THREE.AnimationHandler.get: Couldn't find animation \"+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=\r\n\t1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c,d){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.JITCompile=void 0!==d?d:!0;this.points=[];this.target=new THREE.Vector3};\r\n\tTHREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)f.useQuaternion=!0;f.matrixAutoUpdate=!0;if(void 0===f.animationCache)f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof\r\n\tTHREE.Bone?f.skinMatrix:f.matrix;var g=f.animationCache.prevKey;f=f.animationCache.nextKey;g.pos=this.data.hierarchy[c].keys[0];g.rot=this.data.hierarchy[c].keys[0];g.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith(\"pos\",c,1);f.rot=this.getNextKeyWith(\"rot\",c,1);f.scl=this.getNextKeyWith(\"scl\",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};\r\n\tTHREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};\r\n\tTHREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)if(void 0!==this.hierarchy[a].animationCache)this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache};\r\n\tTHREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=[\"pos\",\"rot\",\"scl\"],c,d,f,g,e,h,i,j,k=this.data.JIT.hierarchy,q,m;m=this.currentTime+=a*this.timeScale;q=this.currentTime%=this.data.length;j=parseInt(Math.min(q*this.data.fps,this.data.length*this.data.fps),10);for(var o=0,p=this.hierarchy.length;o<p;o++)if(a=this.hierarchy[o],i=a.animationCache,this.JITCompile&&void 0!==k[o][j])a instanceof THREE.Bone?(a.skinMatrix=k[o][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!1):(a.matrix=\r\n\tk[o][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{if(this.JITCompile)a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix;for(var n=0;3>n;n++){c=b[n];e=i.prevKey[c];h=i.nextKey[c];if(h.time<=m){if(q<m)if(this.loop){e=this.data.hierarchy[o].keys[0];for(h=this.getNextKeyWith(c,o,1);h.time<q;)e=h,h=this.getNextKeyWith(c,o,h.index+1)}else{this.stop();return}else{do e=h,h=this.getNextKeyWith(c,o,h.index+1);while(h.time<q)}i.prevKey[c]=\r\n\te;i.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(q-e.time)/(h.time-e.time);f=e[c];g=h[c];if(0>d||1<d)console.log(\"THREE.Animation.update: Warning! Scale out of bounds:\"+d+\" on bone \"+o),d=0>d?0:1;if(\"pos\"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=f[0]+(g[0]-f[0])*d,c.y=f[1]+(g[1]-f[1])*d,c.z=f[2]+(g[2]-f[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)if(this.points[0]=\r\n\tthis.getPrevKeyWith(\"pos\",o,e.index-1).pos,this.points[1]=f,this.points[2]=g,this.points[3]=this.getNextKeyWith(\"pos\",o,h.index+1).pos,d=0.33*d+0.33,f=this.interpolateCatmullRom(this.points,d),c.x=f[0],c.y=f[1],c.z=f[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)d=this.interpolateCatmullRom(this.points,1.01*d),this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0)}else if(\"rot\"===\r\n\tc)THREE.Quaternion.slerp(f,g,a.quaternion,d);else if(\"scl\"===c)c=a.scale,c.x=f[0]+(g[0]-f[0])*d,c.y=f[1]+(g[1]-f[1])*d,c.z=f[2]+(g[2]-f[2])*d}}if(this.JITCompile&&void 0===k[0][j]){this.hierarchy[0].updateMatrixWorld(!0);for(o=0;o<this.hierarchy.length;o++)k[o][j]=this.hierarchy[o]instanceof THREE.Bone?this.hierarchy[o].skinMatrix.clone():this.hierarchy[o].matrix.clone()}}};\r\n\tTHREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,g,e,h,i,j;f=(a.length-1)*b;g=Math.floor(f);f-=g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>a.length-2?g:g+1;c[3]=g>a.length-3?g:g+2;g=a[c[0]];h=a[c[1]];i=a[c[2]];j=a[c[3]];c=f*f;e=f*c;d[0]=this.interpolate(g[0],h[0],i[0],j[0],f,c,e);d[1]=this.interpolate(g[1],h[1],i[1],j[1],f,c,e);d[2]=this.interpolate(g[2],h[2],i[2],j[2],f,c,e);return d};\r\n\tTHREE.Animation.prototype.interpolate=function(a,b,c,d,f,g,e){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*e+(-3*(b-c)-2*a-d)*g+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};\r\n\tTHREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};\r\n\tTHREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var g=c[f],e=this.getNextKeyWith(g,a,0);e&&e.apply(g)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();\r\n\td.matrixWorldNeedsUpdate=!0}}};\r\n\tTHREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,g;for(c=0;c<d;c++){f=this.hierarchy[c];g=this.data.hierarchy[c];f.useQuaternion=!0;if(void 0===g.animationCache)g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:\r\n\tf.matrix;f=this.data.hierarchy[c].keys;if(f.length)g.animationCache.prevKey=f[0],g.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};\r\n\tTHREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};\r\n\tTHREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,g=this.data.JIT.hierarchy,e,h,i;h=this.currentTime+=a*this.timeScale;e=this.currentTime%=this.data.length;if(e<this.startTimeMs)e=this.currentTime=this.startTimeMs+e;f=parseInt(Math.min(e*this.data.fps,this.data.length*this.data.fps),10);if((i=e<h)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var k=this.data.hierarchy[a].keys,g=this.data.hierarchy[a].sids;d=k.length-1;f=this.hierarchy[a];if(k.length){for(k=\r\n\t0;k<g.length;k++)e=g[k],(h=this.getPrevKeyWith(e,a,d))&&h.apply(e);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(e<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var k=b.keys,q=b.animationCache;if(this.JITCompile&&void 0!==g[a][f])d instanceof THREE.Bone?(d.skinMatrix=g[a][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=g[a][f],d.matrixWorldNeedsUpdate=!0);else if(k.length){if(this.JITCompile&&q)d instanceof\r\n\tTHREE.Bone?d.skinMatrix=q.originalMatrix:d.matrix=q.originalMatrix;b=q.prevKey;c=q.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=k[0];for(c=k[1];c.time<e;)b=c,c=k[b.index+1]}else if(!i)for(var m=k.length-1;c.time<e&&c.index!==m;)b=c,c=k[b.index+1];q.prevKey=b;q.nextKey=c}c.time>=e?b.interpolate(c,e):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===g[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)g[a][f]=\r\n\tthis.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};\r\n\tTHREE.CubeCamera=function(a,b,c,d){this.heightOffset=c;this.position=new THREE.Vector3(0,c,0);this.cameraPX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPX.position=this.position;this.cameraNX.position=this.position;this.cameraPY.position=\r\n\tthis.position;this.cameraNY.position=this.position;this.cameraPZ.position=this.position;this.cameraNZ.position=this.position;this.cameraPX.up.set(0,-1,0);this.cameraNX.up.set(0,-1,0);this.cameraPY.up.set(0,0,1);this.cameraNY.up.set(0,0,-1);this.cameraPZ.up.set(0,-1,0);this.cameraNZ.up.set(0,-1,0);this.targetPX=new THREE.Vector3(0,0,0);this.targetNX=new THREE.Vector3(0,0,0);this.targetPY=new THREE.Vector3(0,0,0);this.targetNY=new THREE.Vector3(0,0,0);this.targetPZ=new THREE.Vector3(0,0,0);this.targetNZ=\r\n\tnew THREE.Vector3(0,0,0);this.renderTarget=new THREE.WebGLRenderTargetCube(d,d,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updatePosition=function(a){this.position.copy(a);this.position.y+=this.heightOffset;this.targetPX.copy(this.position);this.targetNX.copy(this.position);this.targetPY.copy(this.position);this.targetNY.copy(this.position);this.targetPZ.copy(this.position);this.targetNZ.copy(this.position);this.targetPX.x+=1;this.targetNX.x-=1;this.targetPY.y+=\r\n\t1;this.targetNY.y-=1;this.targetPZ.z+=1;this.targetNZ.z-=1;this.cameraPX.lookAt(this.targetPX);this.cameraNX.lookAt(this.targetNX);this.cameraPY.lookAt(this.targetPY);this.cameraNY.lookAt(this.targetNY);this.cameraPZ.lookAt(this.targetPZ);this.cameraNZ.lookAt(this.targetNZ)};this.updateCubeMap=function(a,b){var c=this.renderTarget;c.activeCubeFace=0;a.render(b,this.cameraPX,c);c.activeCubeFace=1;a.render(b,this.cameraNX,c);c.activeCubeFace=2;a.render(b,this.cameraPY,c);c.activeCubeFace=3;a.render(b,\r\n\tthis.cameraNY,c);c.activeCubeFace=4;a.render(b,this.cameraPZ,c);c.activeCubeFace=5;a.render(b,this.cameraNZ,c)}};THREE.CombinedCamera=function(a,b,c,d,f,g,e){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,g,e);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CoolCamera;\r\n\tTHREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};\r\n\tTHREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};\r\n\tTHREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.setLens=function(a,b){var c=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};\r\n\tTHREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};\r\n\tTHREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};\r\n\tTHREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=\r\n\t0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute(\"tabindex\",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=\r\n\t!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=\r\n\tfunction(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=\r\n\t!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);\r\n\tthis.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&\r\n\t(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax);b=this.target;c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);\r\n\tthis.object.lookAt(b)}};this.domElement.addEventListener(\"contextmenu\",function(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",c(this,this.onMouseMove),!1);this.domElement.addEventListener(\"mousedown\",c(this,this.onMouseDown),!1);this.domElement.addEventListener(\"mouseup\",c(this,this.onMouseUp),!1);this.domElement.addEventListener(\"keydown\",c(this,this.onKeyDown),!1);this.domElement.addEventListener(\"keyup\",c(this,this.onKeyUp),!1)};\r\n\tTHREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function f(a,b,c,d){var f={name:c,fps:0.6,length:d,hierarchy:[]},e,g=b.getControlPointsArray(),h=b.getLength(),r=g.length,s=0;e=r-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[e]={time:d,pos:g[e],rot:[0,0,0,1],scl:[1,1,1]};for(e=1;e<r-1;e++)s=d*h.chunks[e]/h.total,b.keys[e]={time:s,pos:g[e]};f.hierarchy[0]=b;THREE.AnimationHandler.add(f);\r\n\treturn new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function g(a,b){var c,d,f=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),f.vertices[c]=new THREE.Vertex(new THREE.Vector3(d.x,d.y,d.z));return f}this.object=a;this.domElement=void 0!==b?b:document;this.id=\"PathControls\"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=\r\n\tnew THREE.Object3D;this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/\r\n\t2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute(\"tabindex\",-1));var e=2*Math.PI,h=Math.PI/180;this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%e;this.phi=0<=a?a:a+e;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;\r\n\tb=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=function(a){this.domElement===\r\n\tdocument?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),\r\n\tc=new THREE.CubeGeometry(10,10,20),e=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(e,b);a.position.set(0,10,0);this.animation=f(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=f(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=\r\n\tthis.debugPath,b=this.spline,e=g(b,10),c=g(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),e=new THREE.Line(e,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));e.scale.set(1,1,1);a.add(e);c.scale.set(1,1,1);a.add(c);for(var e=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),o=0;o<b.points.length;o++)c=new THREE.Mesh(e,h),c.position.copy(b.points[o]),a.add(c)}this.domElement.addEventListener(\"mousemove\",d(this,this.onMouseMove),\r\n\t!1)}};THREE.PathControlsIdCounter=0;\r\n\tTHREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute(\"tabindex\",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,\r\n\t0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(\"function\"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=\r\n\t1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=\r\n\t0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=\r\n\t!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,e=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-e)/e;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=\r\n\t!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);\r\n\tthis.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=\r\n\t-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener(\"mousemove\",c(this,this.mousemove),!1);this.domElement.addEventListener(\"mousedown\",c(this,this.mousedown),!1);this.domElement.addEventListener(\"mouseup\",c(this,\r\n\tthis.mouseup),!1);this.domElement.addEventListener(\"keydown\",c(this,this.keydown),!1);this.domElement.addEventListener(\"keyup\",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};\r\n\tTHREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Matrix4,e=!1,h=1,i=0,j=0,k=0,q=0,m=0,o=window.innerWidth/2,p=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var b=a*this.lookSpeed;\r\n\tthis.rotateHorizontally(b*q);this.rotateVertically(b*m)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<i||this.autoForward&&!(0>i)?1:i));this.object.translateX(b*j);this.object.translateY(b*k);e&&(this.roll+=this.rollSpeed*a*h);if(this.forward.y>this.constrainVertical[1])this.forward.y=this.constrainVertical[1],this.forward.normalize();else if(this.forward.y<this.constrainVertical[0])this.forward.y=this.constrainVertical[0],this.forward.normalize();f.copy(this.forward);d.set(0,1,0);c.cross(d,\r\n\tf).normalize();d.cross(f,c).normalize();this.object.matrix.n11=c.x;this.object.matrix.n12=d.x;this.object.matrix.n13=f.x;this.object.matrix.n21=c.y;this.object.matrix.n22=d.y;this.object.matrix.n23=f.y;this.object.matrix.n31=c.z;this.object.matrix.n32=d.z;this.object.matrix.n33=f.z;g.identity();g.n11=Math.cos(this.roll);g.n12=-Math.sin(this.roll);g.n21=Math.sin(this.roll);g.n22=Math.cos(this.roll);this.object.matrix.multiplySelf(g);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.n14=this.object.position.x;\r\n\tthis.object.matrix.n24=this.object.position.y;this.object.matrix.n34=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.n11*a;this.object.position.y+=this.object.matrix.n21*a;this.object.position.z+=this.object.matrix.n31*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.n12*a;this.object.position.y+=this.object.matrix.n22*a;this.object.position.z+=this.object.matrix.n32*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.n13*\r\n\ta;this.object.position.y-=this.object.matrix.n23*a;this.object.position.z-=this.object.matrix.n33*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.n11,this.object.matrix.n21,this.object.matrix.n31);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.n12,this.object.matrix.n22,this.object.matrix.n32);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener(\"contextmenu\",\r\n\tfunction(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",function(a){q=(a.clientX-o)/window.innerWidth;m=(a.clientY-p)/window.innerHeight},!1);this.domElement.addEventListener(\"mousedown\",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},!1);this.domElement.addEventListener(\"mouseup\",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1);this.domElement.addEventListener(\"keydown\",\r\n\tfunction(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:j=-1;break;case 40:case 83:i=-1;break;case 39:case 68:j=1;break;case 81:e=!0;h=1;break;case 69:e=!0;h=-1;break;case 82:k=1;break;case 70:k=-1}},!1);this.domElement.addEventListener(\"keyup\",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:j=0;break;case 40:case 83:i=0;break;case 39:case 68:j=0;break;case 81:e=!1;break;case 69:e=!1;break;case 82:k=0;break;case 70:k=0}},!1)};\r\n\tTHREE.TrackballControls=function(a,b){THREE.EventTarget.call(this);var c=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=\r\n\tnew THREE.Vector3;var d=new THREE.Vector3,f=!1,g=-1,e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector2,k=new THREE.Vector2,q=new THREE.Vector2,m=new THREE.Vector2,o={type:\"change\"};this.handleEvent=function(a){if(\"function\"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-c.screen.offsetLeft)/c.radius),0.5*((b-c.screen.offsetTop)/c.radius))};this.getMouseProjectionOnBall=function(a,b){var d=new THREE.Vector3((a-\r\n\t0.5*c.screen.width-c.screen.offsetLeft)/c.radius,(0.5*c.screen.height+c.screen.offsetTop-b)/c.radius,0),f=d.length();1<f?d.normalize():d.z=Math.sqrt(1-f*f);e.copy(c.object.position).subSelf(c.target);f=c.object.up.clone().setLength(d.y);f.addSelf(c.object.up.clone().crossSelf(e).setLength(d.x));f.addSelf(e.setLength(d.z));return f};this.rotateCamera=function(){var a=Math.acos(h.dot(i)/h.length()/i.length());if(a){var b=(new THREE.Vector3).cross(h,i).normalize(),d=new THREE.Quaternion,a=a*c.rotateSpeed;\r\n\td.setFromAxisAngle(b,-a);d.multiplyVector3(e);d.multiplyVector3(c.object.up);d.multiplyVector3(i);c.staticMoving?h=i:(d.setFromAxisAngle(b,a*(c.dynamicDampingFactor-1)),d.multiplyVector3(h))}};this.zoomCamera=function(){var a=1+(k.y-j.y)*c.zoomSpeed;1!==a&&0<a&&(e.multiplyScalar(a),c.staticMoving?j=k:j.y+=(k.y-j.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=m.clone().subSelf(q);if(a.lengthSq()){a.multiplyScalar(e.length()*c.panSpeed);var b=e.clone().crossSelf(c.object.up).setLength(a.x);\r\n\tb.addSelf(c.object.up.clone().setLength(a.y));c.object.position.addSelf(b);c.target.addSelf(b);c.staticMoving?q=m:q.addSelf(a.sub(m,q).multiplyScalar(c.dynamicDampingFactor))}};this.checkDistances=function(){if(!c.noZoom||!c.noPan)c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),e.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,e.setLength(c.minDistance))};this.update=function(){e.copy(c.object.position).subSelf(c.target);\r\n\tc.noRotate||c.rotateCamera();c.noZoom||c.zoomCamera();c.noPan||c.panCamera();c.object.position.add(c.target,e);c.checkDistances();c.object.lookAt(c.target);0<d.distanceTo(c.object.position)&&(c.dispatchEvent(o),d.copy(c.object.position))};this.domElement.addEventListener(\"contextmenu\",function(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",function(a){c.enabled&&(f&&(h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY),j=k=c.getMouseOnScreen(a.clientX,a.clientY),q=m=c.getMouseOnScreen(a.clientX,\r\n\ta.clientY),f=!1),-1!==g&&(0===g&&!c.noRotate?i=c.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!c.noZoom?k=c.getMouseOnScreen(a.clientX,a.clientY):2===g&&!c.noPan&&(m=c.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener(\"mousedown\",function(a){if(c.enabled&&(a.preventDefault(),a.stopPropagation(),-1===g))g=a.button,0===g&&!c.noRotate?h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!c.noZoom?j=k=c.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(q=m=\r\n\tc.getMouseOnScreen(a.clientX,a.clientY))},!1);this.domElement.addEventListener(\"mouseup\",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),g=-1)},!1);window.addEventListener(\"keydown\",function(a){c.enabled&&-1===g&&(a.keyCode===c.keys[0]&&!c.noRotate?g=0:a.keyCode===c.keys[1]&&!c.noZoom?g=1:a.keyCode===c.keys[2]&&!c.noPan&&(g=2),-1!==g&&(f=!0))},!1);window.addEventListener(\"keyup\",function(){c.enabled&&-1!==g&&(g=-1)},!1)};\r\n\tTHREE.CubeGeometry=function(a,b,c,d,f,g,e,h){function i(a,b,c,e,h,i,k,m){var n,o=d||1,q=f||1,p=h/2,r=i/2,s=j.vertices.length;if(\"x\"===a&&\"y\"===b||\"y\"===a&&\"x\"===b)n=\"z\";else if(\"x\"===a&&\"z\"===b||\"z\"===a&&\"x\"===b)n=\"y\",q=g||1;else if(\"z\"===a&&\"y\"===b||\"y\"===a&&\"z\"===b)n=\"x\",o=g||1;var l=o+1,t=q+1,w=h/o,E=i/q,S=new THREE.Vector3;S[n]=0<k?1:-1;for(h=0;h<t;h++)for(i=0;i<l;i++){var R=new THREE.Vector3;R[a]=(i*w-p)*c;R[b]=(h*E-r)*e;R[n]=k;j.vertices.push(new THREE.Vertex(R))}for(h=0;h<q;h++)for(i=0;i<o;i++)a=\r\n\tnew THREE.Face4(i+l*h+s,i+l*(h+1)+s,i+1+l*(h+1)+s,i+1+l*h+s),a.normal.copy(S),a.vertexNormals.push(S.clone(),S.clone(),S.clone(),S.clone()),a.materialIndex=m,j.faces.push(a),j.faceVertexUvs[0].push([new THREE.UV(i/o,h/q),new THREE.UV(i/o,(h+1)/q),new THREE.UV((i+1)/o,(h+1)/q),new THREE.UV((i+1)/o,h/q)])}THREE.Geometry.call(this);var j=this,k=a/2,q=b/2,m=c/2,o,p,n,r,s,t;if(void 0!==e){if(e instanceof Array)this.materials=e;else{this.materials=[];for(o=0;6>o;o++)this.materials.push(e)}o=0;r=1;p=2;s=\r\n\t3;n=4;t=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var w in h)void 0!==this.sides[w]&&(this.sides[w]=h[w]);this.sides.px&&i(\"z\",\"y\",-1,-1,c,b,k,o);this.sides.nx&&i(\"z\",\"y\",1,-1,c,b,-k,r);this.sides.py&&i(\"x\",\"z\",1,1,a,c,q,p);this.sides.ny&&i(\"x\",\"z\",1,-1,a,c,-q,s);this.sides.pz&&i(\"x\",\"y\",1,-1,a,b,m,n);this.sides.nz&&i(\"x\",\"y\",-1,-1,a,b,-m,t);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;\r\n\tTHREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;\r\n\tTHREE.CylinderGeometry=function(a,b,c,d,f,g){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,e=c/2,d=d||8,f=f||1,h,i,j=[],k=[];for(i=0;i<=f;i++){var q=[],m=[],o=i/f,p=o*(b-a)+a;for(h=0;h<=d;h++){var n=h/d,r=p*Math.sin(2*n*Math.PI),s=-o*c+e,t=p*Math.cos(2*n*Math.PI);this.vertices.push(new THREE.Vertex(new THREE.Vector3(r,s,t)));q.push(this.vertices.length-1);m.push(new THREE.UV(n,o))}j.push(q);k.push(m)}for(i=0;i<f;i++)for(h=0;h<d;h++){var c=j[i][h],q=j[i+1][h],\r\n\tm=j[i+1][h+1],o=j[i][h+1],p=this.vertices[c].position.clone().setY(0).normalize(),n=this.vertices[q].position.clone().setY(0).normalize(),r=this.vertices[m].position.clone().setY(0).normalize(),s=this.vertices[o].position.clone().setY(0).normalize(),t=k[i][h].clone(),w=k[i+1][h].clone(),u=k[i+1][h+1].clone(),v=k[i][h+1].clone();this.faces.push(new THREE.Face4(c,q,m,o,[p,n,r,s]));this.faceVertexUvs[0].push([t,w,u,v])}if(!g&&0<a){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,e,0)));for(h=\r\n\t0;h<d;h++)c=j[0][h],q=j[0][h+1],m=this.vertices.length-1,p=new THREE.Vector3(0,1,0),n=new THREE.Vector3(0,1,0),r=new THREE.Vector3(0,1,0),t=k[0][h].clone(),w=k[0][h+1].clone(),u=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(c,q,m,[p,n,r])),this.faceVertexUvs[0].push([t,w,u])}if(!g&&0<b){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,-e,0)));for(h=0;h<d;h++)c=j[i][h+1],q=j[i][h],m=this.vertices.length-1,p=new THREE.Vector3(0,-1,0),n=new THREE.Vector3(0,-1,0),r=new THREE.Vector3(0,-1,\r\n\t0),t=k[i][h+1].clone(),w=k[i][h].clone(),u=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(c,q,m,[p,n,r])),this.faceVertexUvs[0].push([t,w,u])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;\r\n\tTHREE.ExtrudeGeometry=function(a,b){if(\"undefined\"!==typeof a){THREE.Geometry.call(this);var a=a instanceof Array?a:[a],c,d,f=a.length;this.shapebb=a[f-1].getBoundingBox();for(d=0;d<f;d++)c=a[d],this.addShape(c,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;\r\n\tTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log(\"die\");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,f=THREE.ExtrudeGeometry.__v2,e=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);f.set(a.x-c.x,a.y-c.y);d=d.normalize();f=f.normalize();e.set(-d.y,d.x);g.set(f.y,-f.x);h.copy(a).addSelf(e);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();\r\n\th.copy(b).addSelf(e);i.copy(c).addSelf(g);e=d.dot(g);g=i.subSelf(h).dot(g);0===e&&(console.log(\"Either infinite or no solutions!\"),0===g?console.log(\"Its finite solutions.\"):console.log(\"Too bad, no solutions.\"));g/=e;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function f(a){for(y=a.length;0<=--y;){$=y;C=y-1;0>C&&(C=a.length-1);for(var b=\r\n\t0,c=o+2*k,b=0;b<c;b++){var d=L*b,f=L*(b+1),e=ca+$+d,g=ca+C+d,h=ca+C+f,i=ca+$+f,e=e+D,g=g+D,h=h+D,i=i+D;B.faces.push(new THREE.Face4(e,g,h,i,null,null,u));var f=B.vertices[e].position.x,d=B.vertices[e].position.y,e=B.vertices[e].position.z,j=B.vertices[g].position.x,l=B.vertices[g].position.y,g=B.vertices[g].position.z,m=B.vertices[h].position.x,n=B.vertices[h].position.y,h=B.vertices[h].position.z,q=B.vertices[i].position.x,p=B.vertices[i].position.y,i=B.vertices[i].position.z;0.01>Math.abs(d-l)?\r\n\tB.faceVertexUvs[0].push([new THREE.UV(f,e),new THREE.UV(j,g),new THREE.UV(m,h),new THREE.UV(q,i)]):B.faceVertexUvs[0].push([new THREE.UV(d,e),new THREE.UV(l,g),new THREE.UV(n,h),new THREE.UV(p,i)])}}}function g(a,b,c){B.vertices.push(new THREE.Vertex(new THREE.Vector3(a,b,c)))}function e(a,b,c){a+=D;b+=D;c+=D;B.faces.push(new THREE.Face3(a,b,c,null,null,w));var d=B.vertices[b].position.x,b=B.vertices[b].position.y,f=B.vertices[c].position.x,c=B.vertices[c].position.y;B.faceVertexUvs[0].push([new THREE.UV(B.vertices[a].position.x,\r\n\t1-B.vertices[a].position.y),new THREE.UV(d,1-b),new THREE.UV(f,1-c)])}var h=void 0!==b.amount?b.amount:100,i=void 0!==b.bevelThickness?b.bevelThickness:6,j=void 0!==b.bevelSize?b.bevelSize:i-2,k=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,m=void 0!==b.curveSegments?b.curveSegments:12,o=void 0!==b.steps?b.steps:1,p=b.bendPath,n=b.extrudePath,r,s=!1,t=void 0!==b.useSpacedPoints?b.useSpacedPoints:!1,w=b.material,u=b.extrudeMaterial;if(n)r=n.getPoints(m),o=r.length,\r\n\ts=!0,q=!1;q||(j=i=k=0);var v,A,F,B=this,D=this.vertices.length;p&&a.addWrapPath(p);m=t?a.extractAllSpacedPoints(m):a.extractAllPoints(m);p=m.shape;m=m.holes;if(n=!THREE.Shape.Utils.isClockWise(p)){p=p.reverse();for(A=0,F=m.length;A<F;A++)v=m[A],THREE.Shape.Utils.isClockWise(v)&&(m[A]=v.reverse());n=!1}n=THREE.Shape.Utils.triangulateShape(p,m);t=p;for(A=0,F=m.length;A<F;A++)v=m[A],p=p.concat(v);for(var H,I,Q,P,L=p.length,K=n.length,O=[],y=0,l=t.length,$=l-1,C=y+1;y<l;y++,$++,C++)$===l&&($=0),C===l&&\r\n\t(C=0),O[y]=d(t[y],t[$],t[C]);var E=[],S,R=O.concat();for(A=0,F=m.length;A<F;A++){v=m[A];S=[];for(y=0,l=v.length,$=l-1,C=y+1;y<l;y++,$++,C++)$===l&&($=0),C===l&&(C=0),S[y]=d(v[y],v[$],v[C]);E.push(S);R=R.concat(S)}for(H=0;H<k;H++){I=H/k;Q=i*(1-I);I=j*Math.sin(I*Math.PI/2);for(y=0,l=t.length;y<l;y++)P=c(t[y],O[y],I),g(P.x,P.y,-Q);for(A=0,F=m.length;A<F;A++){v=m[A];S=E[A];for(y=0,l=v.length;y<l;y++)P=c(v[y],S[y],I),g(P.x,P.y,-Q)}}I=j;for(y=0;y<L;y++)P=q?c(p[y],R[y],I):p[y],s?g(P.x,P.y+r[0].y,r[0].x):\r\n\tg(P.x,P.y,0);for(H=1;H<=o;H++)for(y=0;y<L;y++)P=q?c(p[y],R[y],I):p[y],s?g(P.x,P.y+r[H-1].y,r[H-1].x):g(P.x,P.y,h/o*H);for(H=k-1;0<=H;H--){I=H/k;Q=i*(1-I);I=j*Math.sin(I*Math.PI/2);for(y=0,l=t.length;y<l;y++)P=c(t[y],O[y],I),g(P.x,P.y,h+Q);for(A=0,F=m.length;A<F;A++){v=m[A];S=E[A];for(y=0,l=v.length;y<l;y++)P=c(v[y],S[y],I),s?g(P.x,P.y+r[o-1].y,r[o-1].x+Q):g(P.x,P.y,h+Q)}}if(q){i=0*L;for(y=0;y<K;y++)h=n[y],e(h[2]+i,h[1]+i,h[0]+i);i=L*(o+2*k);for(y=0;y<K;y++)h=n[y],e(h[0]+i,h[1]+i,h[2]+i)}else{for(y=\r\n\t0;y<K;y++)h=n[y],e(h[2],h[1],h[0]);for(y=0;y<K;y++)h=n[y],e(h[0]+L*o,h[1]+L*o,h[2]+L*o)}var ca=0;f(t);ca+=t.length;for(A=0,F=m.length;A<F;A++)v=m[A],f(v),ca+=v.length};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;\r\n\tTHREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);this.steps=b||12;this.angle=c||2*Math.PI;for(var b=this.angle/this.steps,c=[],d=[],f=[],g=[],e=(new THREE.Matrix4).setRotationZ(b),h=0;h<a.length;h++)this.vertices.push(new THREE.Vertex(a[h])),c[h]=a[h].clone(),d[h]=this.vertices.length-1;for(var i=0;i<=this.angle+0.001;i+=b){for(h=0;h<c.length;h++)i<this.angle?(c[h]=e.multiplyVector3(c[h].clone()),this.vertices.push(new THREE.Vertex(c[h])),f[h]=this.vertices.length-1):f=g;0==i&&(g=d);\r\n\tfor(h=0;h<d.length-1;h++)this.faces.push(new THREE.Face4(f[h],f[h+1],d[h+1],d[h])),this.faceVertexUvs[0].push([new THREE.UV(1-i/this.angle,h/a.length),new THREE.UV(1-i/this.angle,(h+1)/a.length),new THREE.UV(1-(i-b)/this.angle,(h+1)/a.length),new THREE.UV(1-(i-b)/this.angle,h/a.length)]);d=f;f=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\r\n\tTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var f=a/2,g=b/2,c=c||1,d=d||1,e=c+1,h=d+1,i=a/c,j=b/d,k=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<e;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*i-f,-(a*j-g),0)));for(a=0;a<d;a++)for(b=0;b<c;b++)f=new THREE.Face4(b+e*a,b+e*(a+1),b+1+e*(a+1),b+1+e*a),f.normal.copy(k),f.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(f),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/\r\n\tc,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\r\n\tTHREE.SphereGeometry=function(a,b,c,d,f,g,e){THREE.Geometry.call(this);var a=a||50,d=void 0!==d?d:0,f=void 0!==f?f:2*Math.PI,g=void 0!==g?g:0,e=void 0!==e?e:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,j=[],k=[];for(i=0;i<=c;i++){var q=[],m=[];for(h=0;h<=b;h++){var o=h/b,p=i/c,n=-a*Math.cos(d+o*f)*Math.sin(g+p*e),r=a*Math.cos(g+p*e),s=a*Math.sin(d+o*f)*Math.sin(g+p*e);this.vertices.push(new THREE.Vertex(new THREE.Vector3(n,r,s)));q.push(this.vertices.length-1);m.push(new THREE.UV(o,\r\n\tp))}j.push(q);k.push(m)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=j[i][h+1],f=j[i][h],g=j[i+1][h],e=j[i+1][h+1],q=this.vertices[d].position.clone().normalize(),m=this.vertices[f].position.clone().normalize(),o=this.vertices[g].position.clone().normalize(),p=this.vertices[e].position.clone().normalize(),n=k[i][h+1].clone(),r=k[i][h].clone(),s=k[i+1][h].clone(),t=k[i+1][h+1].clone();Math.abs(this.vertices[d].position.y)==a?(this.faces.push(new THREE.Face3(d,g,e,[q,o,p])),this.faceVertexUvs[0].push([n,\r\n\ts,t])):Math.abs(this.vertices[g].position.y)==a?(this.faces.push(new THREE.Face3(d,f,g,[q,m,o])),this.faceVertexUvs[0].push([n,r,s])):(this.faces.push(new THREE.Face4(d,f,g,e,[q,m,o,p])),this.faceVertexUvs[0].push([n,r,s,t]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\r\n\tTHREE.TextGeometry=function(a,b){var c=(new THREE.TextPath(a,b)).toShapes();b.amount=void 0!==b.height?b.height:50;if(void 0===b.bevelThickness)b.bevelThickness=10;if(void 0===b.bevelSize)b.bevelSize=8;if(void 0===b.bevelEnabled)b.bevelEnabled=!1;if(b.bend){var d=c[c.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;\r\n\tTHREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\r\n\tTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=\r\n\t0,f=(\"\"+a).split(\"\"),g=f.length,e=[],a=0;a<g;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;e.push(h.path)}return{paths:e,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var g=[],e,h,i,j,k,q,m,o,p,n,r,s=b.glyphs[a]||b.glyphs[\"?\"];if(s){if(s.o){b=s._cachedOutline||(s._cachedOutline=s.o.split(\" \"));j=b.length;for(a=0;a<j;)switch(i=b[a++],i){case \"m\":i=b[a++]*c+d;k=b[a++]*c;g.push(new THREE.Vector2(i,k));f.moveTo(i,k);break;case \"l\":i=b[a++]*c+d;k=b[a++]*c;g.push(new THREE.Vector2(i,\r\n\tk));f.lineTo(i,k);break;case \"q\":i=b[a++]*c+d;k=b[a++]*c;o=b[a++]*c+d;p=b[a++]*c;f.quadraticCurveTo(o,p,i,k);if(e=g[g.length-1]){q=e.x;m=e.y;for(e=1,h=this.divisions;e<=h;e++){var t=e/h,w=THREE.Shape.Utils.b2(t,q,o,i),t=THREE.Shape.Utils.b2(t,m,p,k);g.push(new THREE.Vector2(w,t))}}break;case \"b\":if(i=b[a++]*c+d,k=b[a++]*c,o=b[a++]*c+d,p=b[a++]*-c,n=b[a++]*c+d,r=b[a++]*-c,f.bezierCurveTo(i,k,o,p,n,r),e=g[g.length-1]){q=e.x;m=e.y;for(e=1,h=this.divisions;e<=h;e++)t=e/h,w=THREE.Shape.Utils.b3(t,q,o,\r\n\tn,i),t=THREE.Shape.Utils.b3(t,m,p,r,k),g.push(new THREE.Vector2(w,t))}}}return{offset:s.ha*c,points:g,path:f}}}};\r\n\t(function(a){var b=function(a){for(var b=a.length,f=0,g=b-1,e=0;e<b;g=e++)f+=a[g].x*a[e].y-a[e].x*a[g].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var g=[],e=[],h=[],i,j,k;if(0<b(a))for(j=0;j<f;j++)e[j]=j;else for(j=0;j<f;j++)e[j]=f-1-j;var q=2*f;for(j=f-1;2<f;){if(0>=q--){console.log(\"Warning, unable to triangulate polygon!\");break}i=j;f<=i&&(i=0);j=i+1;f<=j&&(j=0);k=j+1;f<=k&&(k=0);var m;a:{m=a;var o=i,p=j,n=k,r=f,s=e,t=void 0,w=void 0,u=void 0,v=void 0,A=void 0,\r\n\tF=void 0,B=void 0,D=void 0,H=void 0,w=m[s[o]].x,u=m[s[o]].y,v=m[s[p]].x,A=m[s[p]].y,F=m[s[n]].x,B=m[s[n]].y;if(1.0E-10>(v-w)*(B-u)-(A-u)*(F-w))m=!1;else{for(t=0;t<r;t++)if(!(t==o||t==p||t==n)){var D=m[s[t]].x,H=m[s[t]].y,I=void 0,Q=void 0,P=void 0,L=void 0,K=void 0,O=void 0,y=void 0,l=void 0,$=void 0,C=void 0,E=void 0,S=void 0,I=P=K=void 0,I=F-v,Q=B-A,P=w-F,L=u-B,K=v-w,O=A-u,y=D-w,l=H-u,$=D-v,C=H-A,E=D-F,S=H-B,I=I*C-Q*$,K=K*l-O*y,P=P*S-L*E;if(0<=I&&0<=P&&0<=K){m=!1;break a}}m=!0}}if(m){g.push([a[e[i]],\r\n\ta[e[j]],a[e[k]]]);h.push([e[i],e[j],e[k]]);for(i=j,k=j+1;k<f;i++,k++)e[i]=e[k];f--;q=2*f}}return d?h:g};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};\r\n\tTHREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=f||2*Math.PI;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var g=d/this.segmentsT*this.arc,e=2*c/this.segmentsR*Math.PI;f.x=this.radius*Math.cos(g);f.y=this.radius*Math.sin(g);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(e))*Math.cos(g);h.y=(this.radius+this.tube*Math.cos(e))*Math.sin(g);h.z=\r\n\tthis.tube*Math.sin(e);this.vertices.push(new THREE.Vertex(h));a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR));b.push(h.clone().subSelf(f).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){var f=(this.segmentsT+1)*c+d-1,g=(this.segmentsT+1)*(c-1)+d-1,e=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,i=new THREE.Face4(f,g,e,h,[b[f],b[g],b[e],b[h]]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);i.normal.addSelf(b[e]);i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);\r\n\tthis.faceVertexUvs[0].push([a[f].clone(),a[g].clone(),a[e].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\r\n\tTHREE.TorusKnotGeometry=function(a,b,c,d,f,g,e){function h(a,b,c,d,f,e){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*f*(2+c);b=0.5*f*(2+c)*b;f=0.5*e*f*Math.sin(a);return new THREE.Vector3(g,b,f)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=f||2;this.q=g||3;this.heightScale=e||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=\r\n\tArray(this.segmentsT);for(b=0;b<this.segmentsT;++b){var i=2*(a/this.segmentsR)*this.p*Math.PI,e=2*(b/this.segmentsT)*Math.PI,g=h(i,e,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,e,this.q,this.p,this.radius,this.heightScale);c.sub(i,g);d.add(i,g);f.cross(c,d);d.cross(f,c);f.normalize();d.normalize();i=-this.tube*Math.cos(e);e=this.tube*Math.sin(e);g.x+=i*d.x+e*f.x;g.y+=i*d.y+e*f.y;g.z+=i*d.z+e*f.z;this.grid[a][b]=this.vertices.push(new THREE.Vertex(new THREE.Vector3(g.x,g.y,g.z)))-1}}for(a=\r\n\t0;a<this.segmentsR;++a)for(b=0;b<this.segmentsT;++b){var f=(a+1)%this.segmentsR,g=(b+1)%this.segmentsT,c=this.grid[a][b],d=this.grid[f][b],f=this.grid[f][g],g=this.grid[a][g],e=new THREE.UV(a/this.segmentsR,b/this.segmentsT),i=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),j=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),k=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,f,g));this.faceVertexUvs[0].push([e,i,j,k])}this.computeCentroids();this.computeFaceNormals();\r\n\tthis.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\r\n\tTHREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=new THREE.Vertex(a.normalize());b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,a);return b}function g(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.position.clone(),b.position.clone(),c.position.clone()]),d.centroid.addSelf(a.position).addSelf(b.position).addSelf(c.position).divideScalar(3),d.normal=d.centroid.clone().normalize(),\r\n\ti.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),i.faceVertexUvs[0].push([h(a.uv,a.position,d),h(b.uv,b.position,d),h(c.uv,c.position,d)])):(d-=1,g(a,e(a,b),e(a,c),d),g(e(a,b),b,e(b,c),d),g(e(a,c),e(b,c),c,d),g(e(a,b),e(b,c),e(a,c),d))}function e(a,b){q[a.index]||(q[a.index]=[]);q[b.index]||(q[b.index]=[]);var c=q[a.index][b.index];void 0===c&&(q[a.index][b.index]=q[b.index][a.index]=c=f((new THREE.Vector3).add(a.position,b.position).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&\r\n\t(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);for(var c=c||1,d=d||0,i=this,j=0,k=a.length;j<k;j++)f(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var q=[],a=this.vertices,j=0,k=b.length;j<k;j++)g(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices();j=0;for(k=this.vertices.length;j<k;j++)this.vertices[j].position.multiplyScalar(c);this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=new THREE.Geometry;\r\n\tTHREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;\r\n\tTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\r\n\tTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=new THREE.Geometry;THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\r\n\tTHREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vertex);a.vertices.push(new THREE.Vertex(new THREE.Vector3(0,100,0)));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));\r\n\tthis.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=new THREE.Object3D;THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\r\n\tTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.lineGeometry.vertices.push(new THREE.Vertex(new THREE.Vector3));d.lineGeometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var d=this;this.lineGeometry=new THREE.Geometry;this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.pointMap={};b(\"n1\",\"n2\",16755200);b(\"n2\",\r\n\t\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);b(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);\r\n\tthis.update(a);this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces);this.add(this.lines)};THREE.CameraHelper.prototype=new THREE.Object3D;THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\r\n\tTHREE.CameraHelper.prototype.update=function(a){function b(a,b,g,e){THREE.CameraHelper.__v.set(b,g,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=c.pointMap[a];if(void 0!==a){b=0;for(g=a.length;b<g;b++)c.lineGeometry.vertices[a[b]].position.copy(THREE.CameraHelper.__v)}}var c=this;THREE.CameraHelper.__c.projectionMatrix.copy(a.projectionMatrix);b(\"c\",0,0,-1);b(\"t\",0,0,1);b(\"n1\",-1,-1,-1);b(\"n2\",1,-1,-1);b(\"n3\",-1,1,-1);b(\"n4\",1,1,-1);b(\"f1\",-1,-1,\r\n\t1);b(\"f2\",1,-1,1);b(\"f3\",-1,1,1);b(\"f4\",1,1,1);b(\"u1\",0.7,1.1,-1);b(\"u2\",-0.7,1.1,-1);b(\"u3\",0,2,-1);b(\"cf1\",-1,0,1);b(\"cf2\",1,0,1);b(\"cf3\",0,-1,1);b(\"cf4\",0,1,1);b(\"cn1\",-1,0,-1);b(\"cn2\",1,0,-1);b(\"cn3\",0,-1,-1);b(\"cn4\",0,1,-1);this.lineGeometry.__dirtyVertices=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;\r\n\tTHREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};\r\n\tTHREE.SubdivisionModifier.prototype.smooth=function(a){function b(a,b,c,d,h,i){var j=new THREE.Face4(a,b,c,d,null,h.color,h.material);if(e.useOldVertexColors){j.vertexColors=[];for(var k,n,o,q=0;4>q;q++){o=i[q];k=new THREE.Color;k.setRGB(0,0,0);for(var p=0;p<o.length;p++)n=h.vertexColors[o[p]-1],k.r+=n.r,k.g+=n.g,k.b+=n.b;k.r/=o.length;k.g/=o.length;k.b/=o.length;j.vertexColors[q]=k}}f.push(j);(!e.supportUVs||0!=m.length)&&g.push([m[a],m[b],m[c],m[d]])}function c(a,b){return Math.min(a,b)+\"_\"+Math.max(a,\r\n\tb)}var d=[],f=[],g=[],e=this,h=a.vertices,d=a.faces,i=h.concat(),j=[],k={},q={},m=[],o,p,n,r,s,t=a.faceVertexUvs[0];for(o=0,p=t.length;o<p;o++)for(n=0,r=t[o].length;n<r;n++)s=d[o][\"abcd\".charAt(n)],m[s]||(m[s]=t[o][n]);var w;for(o=0,p=d.length;o<p;o++)if(s=d[o],j.push(s.centroid),i.push(new THREE.Vertex(s.centroid)),e.supportUVs&&0!=m.length){w=new THREE.UV;if(s instanceof THREE.Face3)w.u=m[s.a].u+m[s.b].u+m[s.c].u,w.v=m[s.a].v+m[s.b].v+m[s.c].v,w.u/=3,w.v/=3;else if(s instanceof THREE.Face4)w.u=\r\n\tm[s.a].u+m[s.b].u+m[s.c].u+m[s.d].u,w.v=m[s.a].v+m[s.b].v+m[s.c].v+m[s.d].v,w.u/=4,w.v/=4;m.push(w)}p=function(a){function b(a,c,d){void 0===a[c]&&(a[c]=[]);a[c].push(d)}var d,f,e,g,h={};for(d=0,f=a.faces.length;d<f;d++)e=a.faces[d],e instanceof THREE.Face3?(g=c(e.a,e.b),b(h,g,d),g=c(e.b,e.c),b(h,g,d),g=c(e.c,e.a),b(h,g,d)):e instanceof THREE.Face4&&(g=c(e.a,e.b),b(h,g,d),g=c(e.b,e.c),b(h,g,d),g=c(e.c,e.d),b(h,g,d),g=c(e.d,e.a),b(h,g,d));return h}(a);var u=0,t=h.length,v,A,F={},B={},D=function(a,\r\n\tb){void 0===F[a]&&(F[a]=[]);F[a].push(b)},H=function(a,b){void 0===B[a]&&(B[a]={});B[a][b]=null};for(o in p){w=p[o];v=o.split(\"_\");A=v[0];v=v[1];D(A,[A,v]);D(v,[A,v]);for(n=0,r=w.length;n<r;n++)s=w[n],H(A,s,o),H(v,s,o);2>w.length&&(q[o]=!0)}for(o in p)if(w=p[o],s=w[0],w=w[1],v=o.split(\"_\"),A=v[0],v=v[1],r=new THREE.Vector3,q[o]?(r.addSelf(h[A].position),r.addSelf(h[v].position),r.multiplyScalar(0.5)):(r.addSelf(j[s]),r.addSelf(j[w]),r.addSelf(h[A].position),r.addSelf(h[v].position),r.multiplyScalar(0.25)),\r\n\tk[o]=t+d.length+u,i.push(new THREE.Vertex(r)),u++,e.supportUVs&&0!=m.length)w=new THREE.UV,w.u=m[A].u+m[v].u,w.v=m[A].v+m[v].v,w.u/=2,w.v/=2,m.push(w);var I,Q;v=[\"123\",\"12\",\"2\",\"23\"];r=[\"123\",\"23\",\"3\",\"31\"];var D=[\"123\",\"31\",\"1\",\"12\"],H=[\"1234\",\"12\",\"2\",\"23\"],P=[\"1234\",\"23\",\"3\",\"34\"],L=[\"1234\",\"34\",\"4\",\"41\"],K=[\"1234\",\"41\",\"1\",\"12\"];for(o=0,p=j.length;o<p;o++)s=d[o],w=t+o,s instanceof THREE.Face3?(u=c(s.a,s.b),A=c(s.b,s.c),I=c(s.c,s.a),b(w,k[u],s.b,k[A],s,v),b(w,k[A],s.c,k[I],s,r),b(w,k[I],s.a,k[u],\r\n\ts,D)):s instanceof THREE.Face4?(u=c(s.a,s.b),A=c(s.b,s.c),I=c(s.c,s.d),Q=c(s.d,s.a),b(w,k[u],s.b,k[A],s,H),b(w,k[A],s.c,k[I],s,P),b(w,k[I],s.d,k[Q],s,L),b(w,k[Q],s.a,k[u],s,K)):console.log(\"face should be a face!\",s);d=i;i=new THREE.Vector3;k=new THREE.Vector3;for(o=0,p=h.length;o<p;o++)if(void 0!==F[o]){i.set(0,0,0);k.set(0,0,0);s=new THREE.Vector3(0,0,0);w=0;for(n in B[o])i.addSelf(j[n]),w++;u=0;t=F[o].length;for(n=0;n<t;n++)q[c(F[o][n][0],F[o][n][1])]&&u++;if(2!=u){i.divideScalar(w);for(n=0;n<\r\n\tt;n++)w=F[o][n],w=h[w[0]].position.clone().addSelf(h[w[1]].position).divideScalar(2),k.addSelf(w);k.divideScalar(t);s.addSelf(h[o].position);s.multiplyScalar(t-3);s.addSelf(i);s.addSelf(k.multiplyScalar(2));s.divideScalar(t);d[o].position=s}}a.vertices=d;a.faces=f;a.faceVertexUvs[0]=g;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};\r\n\tTHREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\r\n\tTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:\"anonymous\",addStatusElement:function(){var a=document.createElement(\"div\");a.style.position=\"absolute\";a.style.right=\"0px\";a.style.top=\"0px\";a.style.fontSize=\"0.8em\";a.style.textAlign=\"left\";a.style.background=\"rgba(0,0,0,0.25)\";a.style.color=\"#fff\";a.style.width=\"120px\";a.style.padding=\"0.5em 0.5em 0.5em 0.5em\";a.style.zIndex=1E3;a.innerHTML=\"Loading ...\";return a},updateProgress:function(a){var b=\"Loaded \",b=a.total?b+((100*a.loaded/\r\n\ta.total).toFixed(0)+\"%\"):b+((a.loaded/1E3).toFixed(2)+\" KB\");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split(\"/\");a.pop();return(1>a.length?\".\":a.join(\"/\"))+\"/\"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=\r\n\tMath.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,b){var e=new Image;e.onload=function(){if(!c(this.width)||!c(this.height)){var b=d(this.width),e=d(this.height);a.image.width=b;a.image.height=e;a.image.getContext(\"2d\").drawImage(this,0,0,b,e)}else a.image=this;a.needsUpdate=!0};e.crossOrigin=h.crossOrigin;e.src=b}function g(a,c,d,e,g,h){var i=document.createElement(\"canvas\");a[c]=new THREE.Texture(i);a[c].sourceFile=d;\r\n\tif(e){a[c].repeat.set(e[0],e[1]);if(1!=e[0])a[c].wrapS=THREE.RepeatWrapping;if(1!=e[1])a[c].wrapT=THREE.RepeatWrapping}g&&a[c].offset.set(g[0],g[1]);if(h){e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(void 0!==e[h[0]])a[c].wrapS=e[h[0]];if(void 0!==e[h[1]])a[c].wrapT=e[h[1]]}f(a[c],b+\"/\"+d)}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i=\"MeshLambertMaterial\",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};a.shading&&\r\n\t(\"Phong\"==a.shading?i=\"MeshPhongMaterial\":\"Basic\"==a.shading&&(i=\"MeshBasicMaterial\"));if(a.blending)if(\"Additive\"==a.blending)j.blending=THREE.AdditiveBlending;else if(\"Subtractive\"==a.blending)j.blending=THREE.SubtractiveBlending;else if(\"Multiply\"==a.blending)j.blending=THREE.MultiplyBlending;if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;if(void 0!==a.depthTest)j.depthTest=a.depthTest;if(void 0!==a.vertexColors)if(\"face\"==a.vertexColors)j.vertexColors=THREE.FaceColors;else if(a.vertexColors)j.vertexColors=\r\n\tTHREE.VertexColors;if(a.colorDiffuse)j.color=e(a.colorDiffuse);else if(a.DbgColor)j.color=a.DbgColor;if(a.colorSpecular)j.specular=e(a.colorSpecular);if(a.colorAmbient)j.ambient=e(a.colorAmbient);if(a.transparency)j.opacity=a.transparency;if(a.specularCoef)j.shininess=a.specularCoef;a.mapDiffuse&&b&&g(j,\"map\",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&b&&g(j,\"lightMap\",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&b&&g(j,\"normalMap\",\r\n\ta.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);a.mapSpecular&&b&&g(j,\"specularMap\",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);if(a.mapNormal){var i=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(i.uniforms);k.tNormal.texture=j.normalMap;if(a.mapNormalFactor)k.uNormalScale.value=a.mapNormalFactor;if(j.map)k.tDiffuse.texture=j.map,k.enableDiffuse.value=!0;if(j.specularMap)k.tSpecular.texture=j.specularMap,k.enableSpecular.value=!0;if(j.lightMap)k.tAO.texture=\r\n\tj.lightMap,k.enableAO.value=!0;k.uDiffuseColor.value.setHex(j.color);k.uSpecularColor.value.setHex(j.specular);k.uAmbientColor.value.setHex(j.ambient);k.uShininess.value=j.shininess;if(void 0!==j.opacity)k.uOpacity.value=j.opacity;j=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:k,lights:!0,fog:!0})}else j=new THREE[i](j);if(void 0!==a.DbgName)j.name=a.DbgName;return j}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};\r\n\tTHREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;THREE.BinaryLoader.prototype.supr=THREE.Loader.prototype;THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};\r\n\tTHREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,g){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(4==e.readyState)if(200==e.status||0==e.status){var h=JSON.parse(e.responseText);a.loadAjaxBuffers(h,c,f,d,g)}else console.error(\"THREE.BinaryLoader: Couldn't load [\"+b+\"] [\"+e.status+\"]\")};e.open(\"GET\",b,!0);e.overrideMimeType&&e.overrideMimeType(\"text/plain; charset=x-user-defined\");e.setRequestHeader(\"Content-Type\",\"text/plain\");e.send(null)};\r\n\tTHREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var g=new XMLHttpRequest,e=c+\"/\"+a.buffers,h=0;g.onreadystatechange=function(){4==g.readyState?200==g.status||0==g.status?THREE.BinaryLoader.prototype.createBinModel(g.response,b,d,a.materials):console.error(\"THREE.BinaryLoader: Couldn't load [\"+e+\"] [\"+g.status+\"]\"):3==g.readyState?f&&(0==h&&(h=g.getResponseHeader(\"Content-Length\")),f({total:h,loaded:g.responseText.length})):2==g.readyState&&(h=g.getResponseHeader(\"Content-Length\"))};\r\n\tg.open(\"GET\",e,!0);g.responseType=\"arraybuffer\";g.send(null)};\r\n\tTHREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){var c,f,i,j,k,q,m,o,p,n,r,s,t,w,u;function v(a){return a%4?4-a%4:0}function A(a,b){return(new Uint8Array(a,b,1))[0]}function F(a,b){return(new Uint32Array(a,b,1))[0]}function B(b,c){var d,e,f,g,h,i,j,k,l=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=l[3*d];f=l[3*d+1];g=l[3*d+2];h=y[2*e];e=y[2*e+1];i=y[2*f];j=y[2*f+1];f=y[2*g];k=y[2*g+1];g=L.faceVertexUvs[0];var m=[];m.push(new THREE.UV(h,e));m.push(new THREE.UV(i,j));m.push(new THREE.UV(f,\r\n\tk));g.push(m)}}function D(b,c){var d,e,f,g,h,i,j,k,l,m,n=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=n[4*d];f=n[4*d+1];g=n[4*d+2];h=n[4*d+3];i=y[2*e];e=y[2*e+1];j=y[2*f];l=y[2*f+1];k=y[2*g];m=y[2*g+1];g=y[2*h];f=y[2*h+1];h=L.faceVertexUvs[0];var o=[];o.push(new THREE.UV(i,e));o.push(new THREE.UV(j,l));o.push(new THREE.UV(k,m));o.push(new THREE.UV(g,f));h.push(o)}}function H(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],\r\n\tL.faces.push(new THREE.Face3(e,f,g,null,null,h))}function I(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=j[d],L.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function Q(b,c,d,e){for(var f,g,h,i,j,k,l,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),m=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];j=d[3*e];k=d[3*e+1];l=d[3*e+2];i=m[e];var n=O[3*k],o=O[3*k+1];k=O[3*k+2];var q=O[3*l],p=\r\n\tO[3*l+1];l=O[3*l+2];L.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(O[3*j],O[3*j+1],O[3*j+2]),new THREE.Vector3(n,o,k),new THREE.Vector3(q,p,l)],null,i))}}function P(b,c,d,e){for(var f,g,h,i,j,k,l,m,n,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),o=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];k=d[4*e];l=d[4*e+1];m=d[4*e+2];n=d[4*e+3];j=o[e];var q=O[3*l],p=O[3*l+1];l=O[3*l+2];var r=O[3*m],s=O[3*m+1];m=O[3*m+2];var t=O[3*n],u=O[3*n+1];n=O[3*n+2];L.faces.push(new THREE.Face4(f,\r\n\tg,h,i,[new THREE.Vector3(O[3*k],O[3*k+1],O[3*k+2]),new THREE.Vector3(q,p,l),new THREE.Vector3(r,s,m),new THREE.Vector3(t,u,n)],null,j))}}var L=this,K=0,O=[],y=[],l,$,C;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(L,d,b);(function(a,b,c){for(var a=new Uint8Array(a,b,c),d=\"\",e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d})(a,K,12);c=A(a,K+12);A(a,K+13);A(a,K+14);A(a,K+15);f=A(a,K+16);i=A(a,K+17);j=A(a,K+18);k=A(a,K+19);q=F(a,K+20);m=F(a,K+20+4);o=F(a,K+20+8);b=F(a,K+20+12);p=\r\n\tF(a,K+20+16);n=F(a,K+20+20);r=F(a,K+20+24);s=F(a,K+20+28);t=F(a,K+20+32);w=F(a,K+20+36);u=F(a,K+20+40);K+=c;c=3*f+k;C=4*f+k;l=b*c;$=p*(c+3*i);f=n*(c+3*j);k=r*(c+3*i+3*j);c=s*C;i=t*(C+4*i);j=w*(C+4*j);K+=function(b){var b=new Float32Array(a,b,3*q),c,d,e,f;for(c=0;c<q;c++)d=b[3*c],e=b[3*c+1],f=b[3*c+2],L.vertices.push(new THREE.Vertex(new THREE.Vector3(d,e,f)));return 3*q*Float32Array.BYTES_PER_ELEMENT}(K);K+=function(b){if(m){var b=new Int8Array(a,b,3*m),c,d,e,f;for(c=0;c<m;c++)d=b[3*c],e=b[3*c+1],\r\n\tf=b[3*c+2],O.push(d/127,e/127,f/127)}return 3*m*Int8Array.BYTES_PER_ELEMENT}(K);K+=v(3*m);K+=function(b){if(o){var b=new Float32Array(a,b,2*o),c,d,e;for(c=0;c<o;c++)d=b[2*c],e=b[2*c+1],y.push(d,e)}return 2*o*Float32Array.BYTES_PER_ELEMENT}(K);l=K+l+v(2*b);$=l+$+v(2*p);f=$+f+v(2*n);k=f+k+v(2*r);c=k+c+v(2*s);i=c+i+v(2*t);j=i+j+v(2*w);(function(a){if(n){var b=a+3*n*Uint32Array.BYTES_PER_ELEMENT;H(n,a,b+3*n*Uint32Array.BYTES_PER_ELEMENT);B(n,b)}})($);(function(a){if(r){var b=a+3*r*Uint32Array.BYTES_PER_ELEMENT,\r\n\tc=b+3*r*Uint32Array.BYTES_PER_ELEMENT;Q(r,a,b,c+3*r*Uint32Array.BYTES_PER_ELEMENT);B(r,c)}})(f);(function(a){if(w){var b=a+4*w*Uint32Array.BYTES_PER_ELEMENT;I(w,a,b+4*w*Uint32Array.BYTES_PER_ELEMENT);D(w,b)}})(i);(function(a){if(u){var b=a+4*u*Uint32Array.BYTES_PER_ELEMENT,c=b+4*u*Uint32Array.BYTES_PER_ELEMENT;P(u,a,b,c+4*u*Uint32Array.BYTES_PER_ELEMENT);D(u,c)}})(j);b&&H(b,K,K+3*b*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(p){var b=a+3*p*Uint32Array.BYTES_PER_ELEMENT;Q(p,a,b,b+3*p*Uint32Array.BYTES_PER_ELEMENT)}})(l);\r\n\ts&&I(s,k,k+4*s*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(t){var b=a+4*t*Uint32Array.BYTES_PER_ELEMENT;P(t,a,b,b+4*t*Uint32Array.BYTES_PER_ELEMENT)}})(c);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f(c))};\r\n\tTHREE.ColladaLoader=function(){function a(a,d,f){U=a;d=d||Ta;void 0!==f&&(a=f.split(\"/\"),a.pop(),Sa=(1>a.length?\".\":a.join(\"/\"))+\"/\");if((a=U.evaluate(\"//dae:asset\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(f=0;f<a.childNodes.length;f++){var i=a.childNodes[f];switch(i.nodeName){case \"unit\":(i=i.getAttribute(\"meter\"))&&parseFloat(i);break;case \"up_axis\":Fa=i.textContent.charAt(0)}}if(!Ea.convertUpAxis||Fa===Ea.upAxis)Wa=null;else switch(Fa){case \"X\":Wa=\"Y\"===\r\n\tEa.upAxis?\"XtoY\":\"XtoZ\";break;case \"Y\":Wa=\"X\"===Ea.upAxis?\"YtoX\":\"YtoZ\";break;case \"Z\":Wa=\"X\"===Ea.upAxis?\"ZtoX\":\"ZtoY\"}Ka=b(\"//dae:library_images/dae:image\",e,\"image\");ib=b(\"//dae:library_materials/dae:material\",B,\"material\");db=b(\"//dae:library_effects/dae:effect\",P,\"effect\");ha=b(\"//dae:library_geometries/dae:geometry\",r,\"geometry\");lb=b(\".//dae:library_cameras/dae:camera\",$,\"camera\");qa=b(\"//dae:library_controllers/dae:controller\",h,\"controller\");Ga=b(\"//dae:library_animations/dae:animation\",\r\n\tK,\"animation\");Za=b(\".//dae:library_visual_scenes/dae:visual_scene\",k,\"visual_scene\");La=[];sa=[];(a=U.evaluate(\".//dae:scene/dae:instance_visual_scene\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute(\"url\").replace(/^#/,\"\"),ea=Za[0<a.length?a:\"visual_scene0\"]):ea=null;ba=new THREE.Object3D;for(a=0;a<ea.nodes.length;a++)ba.add(g(ea.nodes[a]));cb=[];c(ba);a={scene:ba,morphs:La,skins:sa,animations:cb,dae:{images:Ka,materials:ib,cameras:lb,effects:db,geometries:ha,controllers:qa,\r\n\tanimations:Ga,visualScenes:Za,scene:ea}};d&&d(a);return a}function b(a,b,c){for(var a=U.evaluate(a,U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=ea.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:\"animation_\"+a.name,length:0};cb.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,\r\n\tb.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function f(a,b,c){var e,\r\n\tf=qa[b.url];if(!f||!f.skin)console.log(\"ColladaLoader: Could not find skin controller.\");else if(!b.skeleton||!b.skeleton.length)console.log(\"ColladaLoader: Could not find the skeleton for the skin. \");else{var c=1E6,g=-c,h=0;for(e in Ga)for(var i=Ga[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=ea.getChildById(b.skeleton[0],!0)||ea.getChildBySid(b.skeleton[0],!0),l,m,g=new THREE.Vector3,n,\r\n\tj=0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j].position);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vertex(new THREE.Vector3));d(b,h,c);j=h;k=f.skin;for(m=0;m<j.length;m++)if(l=j[m],n=-1,\"JOINT\"==l.type){for(var o=0;o<k.joints.length;o++)if(l.sid==k.joints[o]){n=o;break}if(0<=n){o=k.invBindMatrices[n];l.invBindMatrix=o;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiply(l.world,o);l.weights=[];for(o=0;o<k.weights.length;o++)for(var q=\r\n\t0;q<k.weights[o].length;q++){var p=k.weights[o][q];p.joint==n&&l.weights.push(p)}}else throw\"ColladaLoader: Could not find joint '\"+l.sid+\"'.\";}for(j=0;j<h.length;j++)if(\"JOINT\"==h[j].type)for(k=0;k<h[j].weights.length;k++)l=h[j].weights[k],m=l.index,l=l.weight,n=a.vertices[m],m=i[m],g.x=n.position.x,g.y=n.position.y,g.z=n.position.z,h[j].skinningMatrix.multiplyVector3(g),m.position.x+=g.x*l,m.position.y+=g.y*l,m.position.z+=g.z*l;a.morphTargets.push({name:\"target_\"+c,vertices:i})}}}function g(a){var b=\r\n\tnew THREE.Object3D,c,d,e,h;for(e=0;e<a.controllers.length;e++){var i=qa[a.controllers[e].url];switch(i.type){case \"skin\":if(ha[i.skin.source]){var j=new n;j.url=i.skin.source;j.instance_material=a.controllers[e].instance_material;a.geometries.push(j);c=a.controllers[e]}else if(qa[i.skin.source]&&(d=i=qa[i.skin.source],i.morph&&ha[i.morph.source]))j=new n,j.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j);break;case \"morph\":if(ha[i.morph.source])j=new n,\r\n\tj.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j),d=a.controllers[e];console.log(\"ColladaLoader: Morph-controller partially supported.\")}}for(e=0;e<a.geometries.length;e++){var i=a.geometries[e],j=i.instance_material,i=ha[i.url],k={},l=[],m=0,q;if(i&&i.mesh&&i.mesh.primitives){if(0==b.name.length)b.name=i.id;if(j)for(h=0;h<j.length;h++){q=j[h];var p=ib[q.target],r=db[p.instance_effect.url].shader;r.material.opacity=!r.material.opacity?1:r.material.opacity;\r\n\tk[q.symbol]=m;l.push(r.material);q=r.material;q.name=null==p.name||\"\"===p.name?p.id:p.name;m++}j=q||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading});i=i.mesh.geometry3js;if(1<m){j=new THREE.MeshFaceMaterial;i.materials=l;for(h=0;h<i.faces.length;h++)l=i.faces[h],l.materialIndex=k[l.daeMaterial]}if(void 0!==c)f(i,c),j.morphTargets=!0,j=new THREE.SkinnedMesh(i,j),j.skeleton=c.skeleton,j.skinController=qa[c.url],j.skinInstanceController=c,j.name=\"skin_\"+sa.length,sa.push(j);\r\n\telse if(void 0!==d){h=i;k=d instanceof o?qa[d.url]:d;if(!k||!k.morph)console.log(\"could not find morph controller!\");else{k=k.morph;for(l=0;l<k.targets.length;l++)if(m=ha[k.targets[l]],m.mesh&&m.mesh.primitives&&m.mesh.primitives.length)m=m.mesh.primitives[0].geometry,m.vertices.length===h.vertices.length&&h.morphTargets.push({name:\"target_1\",vertices:m.vertices});h.morphTargets.push({name:\"target_Z\",vertices:h.vertices})}j.morphTargets=!0;j=new THREE.Mesh(i,j);j.name=\"morph_\"+La.length;La.push(j)}else j=\r\n\tnew THREE.Mesh(i,j);1<a.geometries.length?b.add(j):b=j}}for(e=0;e<a.cameras.length;e++)b=lb[a.cameras[e].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.id||\"\";b.matrix=a.matrix;e=a.matrix.decompose();b.position=e[0];b.quaternion=e[1];b.useQuaternion=!0;b.scale=e[2];Ea.centerGeometry&&b.geometry&&(e=THREE.GeometryUtils.center(b.geometry),b.quaternion.multiplyVector3(e.multiplySelf(b.scale)),b.position.subSelf(e));for(e=0;e<a.nodes.length;e++)b.add(g(a.nodes[e],a));\r\n\treturn b}function e(){this.init_from=this.id=\"\"}function h(){this.type=this.name=this.id=\"\";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function j(){this.source=\"\";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function k(){this.name=this.id=\"\";this.nodes=[];this.scene=new THREE.Object3D}function q(){this.sid=this.name=this.id=\"\";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=\r\n\t[];this.matrix=new THREE.Matrix4}function m(){this.type=this.sid=\"\";this.data=[];this.obj=null}function o(){this.url=\"\";this.skeleton=[];this.instance_material=[]}function p(){this.target=this.symbol=\"\"}function n(){this.url=\"\";this.instance_material=[]}function r(){this.id=\"\";this.mesh=null}function s(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function t(){}function w(){this.material=\"\";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}\r\n\tfunction u(){this.source=\"\";this.stride=this.count=0;this.params=[]}function v(){this.input={}}function A(){this.semantic=\"\";this.offset=0;this.source=\"\";this.set=0}function F(a){this.id=a;this.type=null}function B(){this.name=this.id=\"\";this.instance_effect=null}function D(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function H(a,b){this.type=a;this.effect=b;this.material=null}function I(a){this.effect=\r\n\ta;this.format=this.init_from=null}function Q(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function P(){this.name=this.id=\"\";this.sampler=this.surface=this.shader=null}function L(){this.url=\"\"}function K(){this.name=this.id=\"\";this.source={};this.sampler=[];this.channel=[]}function O(a){this.animation=a;this.target=this.source=\"\";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=this.sid=this.fullSid=null}function y(a){this.id=\"\";this.animation=\r\n\ta;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function l(a){this.targets=[];this.time=a}function $(){this.name=this.id=\"\"}function C(){this.url=\"\"}function E(a){return\"dae\"==a?\"http://www.collada.org/2005/11/COLLADASchema\":null}function S(a){for(var a=ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function R(a){for(var a=ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function ca(a){return 0<\r\n\ta.length?a.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\").split(/\\s+/):[]}function ka(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function ia(a,b){if(Ea.convertUpAxis&&Fa!==Ea.upAxis)switch(Wa){case \"XtoY\":var c=a[0];a[0]=b*a[1];a[1]=c;break;case \"XtoZ\":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case \"YtoX\":c=a[0];a[0]=a[1];a[1]=b*c;break;case \"YtoZ\":c=a[1];a[1]=b*a[2];a[2]=c;break;case \"ZtoX\":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case \"ZtoY\":c=a[1],a[1]=a[2],a[2]=b*c}}function N(a,b){var c=\r\n\t[a[b],a[b+1],a[b+2]];ia(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function aa(a){if(Ea.convertUpAxis){var b=[a[0],a[4],a[8]];ia(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];ia(b,-1);a[1]=b[0];a[5]=b[1];a[9]=b[2];b=[a[2],a[6],a[10]];ia(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];ia(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];ia(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];ia(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];ia(b,-1);a[3]=b[0];\r\n\ta[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}var U=null,ba=null,ea,Ta=null,Ja={},Ka={},Ga={},qa={},ha={},ib={},db={},lb={},cb,Za,Sa,La,sa,za=THREE.SmoothShading,Ea={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:\"Y\"},Fa=\"Y\",Wa=null,mb=Math.PI/180;e.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(\"init_from\"==c.nodeName)this.init_from=\r\n\tc.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.type=\"none\";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"skin\":this.skin=(new j).parse(c);this.type=c.nodeName;break;case \"morph\":this.morph=(new i).parse(c),this.type=c.nodeName}}return this};i.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute(\"method\");this.source=a.getAttribute(\"source\").replace(/^#/,\"\");for(d=\r\n\t0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case \"source\":e=(new F).parse(e);b[e.id]=e;break;case \"targets\":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case \"MORPH_TARGET\":this.targets=e.read();break;case \"MORPH_WEIGHT\":this.weights=e.read()}return this};i.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"input\":b.push((new A).parse(d))}}return b};\r\n\tj.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case \"bind_shape_matrix\":f=S(f.textContent);this.bindShapeMatrix=aa(f);break;case \"source\":f=(new F).parse(f);b[f.id]=f;break;case \"joints\":c=f;break;case \"vertex_weights\":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,\r\n\tb);return this};j.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"input\":var d=(new A).parse(d),e=b[d.source];if(\"JOINT\"==d.semantic)this.joints=e.read();else if(\"INV_BIND_MATRIX\"==d.semantic)this.invBindMatrices=e.read()}}};j.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case \"input\":e.push((new A).parse(g));break;\r\n\tcase \"v\":c=R(g.textContent);break;case \"vcount\":d=R(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],n=c[g+m.offset];switch(m.semantic){case \"JOINT\":k.joint=n;break;case \"WEIGHT\":k.weight=b[m.source].data[n]}}i.push(k);g+=e.length}for(j=0;j<i.length;j++)i[j].index=f;this.weights.push(i)}};k.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};\r\n\tk.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};k.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"node\":this.nodes.push((new q).parse(c))}}return this};q.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],\r\n\td=c.target.split(\"/\");d.shift();var e=d.shift(),f=0<=e.indexOf(\".\"),g=0<=e.indexOf(\"(\"),h;if(f)d=e.split(\".\"),e=d.shift(),d.shift();else if(g){h=e.split(\"(\");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\\)/,\"\"))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};q.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};q.prototype.getChildBySid=\r\n\tfunction(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};q.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};q.prototype.parse=function(a){var b;this.id=a.getAttribute(\"id\");this.sid=a.getAttribute(\"sid\");this.name=a.getAttribute(\"name\");this.type=a.getAttribute(\"type\");this.type=\"JOINT\"==this.type?this.type:\r\n\t\"NODE\";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case \"node\":this.nodes.push((new q).parse(b));break;case \"instance_camera\":this.cameras.push((new C).parse(b));break;case \"instance_controller\":this.controllers.push((new o).parse(b));break;case \"instance_geometry\":this.geometries.push((new n).parse(b));break;case \"instance_light\":break;\r\n\tcase \"instance_node\":b=b.getAttribute(\"url\").replace(/^#/,\"\");(b=U.evaluate(\".//dae:library_nodes//dae:node[@id='\"+b+\"']\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new q).parse(b));break;case \"rotate\":case \"translate\":case \"scale\":case \"matrix\":case \"lookat\":case \"skew\":this.transforms.push((new m).parse(b));break;case \"extra\":break;default:console.log(b.nodeName)}a=[];c=1E6;b=-1E6;for(var d in Ga)for(var e=Ga[d],f=0;f<e.channel.length;f++){var g=e.channel[f],\r\n\th=e.sampler[f];d=g.target.split(\"/\")[0];if(d==this.id)h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g)}if(a.length)this.startTime=c,this.endTime=b;if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){b=this.channels[c];f=b.fullSid;g=b.member;if(Ea.convertUpAxis)switch(g){case \"X\":switch(Wa){case \"XtoY\":case \"XtoZ\":case \"YtoX\":g=\"Y\";break;case \"ZtoX\":g=\"Z\"}break;case \"Y\":switch(Wa){case \"XtoY\":case \"YtoX\":case \"ZtoX\":g=\"X\";\r\n\tbreak;case \"XtoZ\":case \"YtoZ\":case \"ZtoY\":g=\"Z\"}break;case \"Z\":switch(Wa){case \"XtoZ\":g=\"X\";break;case \"YtoZ\":case \"ZtoX\":case \"ZtoY\":g=\"Y\"}}var h=b.sampler,i=h.input,j=this.getTransformBySid(b.sid);if(j){-1===a.indexOf(f)&&a.push(f);b=0;for(var k=i.length;b<k;b++){var p=i[b],r=h.getData(j.type,b),s;s=null;for(var t=0,u=d.length;t<u&&null==s;t++){var v=d[t];if(v.time===p)s=v;else if(v.time>p)break}if(!s){s=new l(p);t=-1;u=0;for(v=d.length;u<v&&-1==t;u++)d[u].time>=p&&(t=u);p=t;d.splice(-1==p?d.length:\r\n\tp,0,s)}s.addTarget(f,j,g,r)}}else console.log('Could not find transform \"'+b.sid+'\" in node '+this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(s=d[b],!s.hasTarget(e)){h=d;f=s;j=b;g=e;i=void 0;a:{i=j?j-1:0;for(i=0<=i?i:i+h.length;0<=i;i--)if(k=h[i],k.hasTarget(g)){i=k;break a}i=null}k=void 0;a:{for(j+=1;j<h.length;j++)if(k=h[j],k.hasTarget(g))break a;k=null}if(i&&k){h=(f.time-i.time)/(k.time-i.time);i=i.getTarget(g);j=k.getTarget(g).data;k=i.data;r=void 0;if(k.length){r=[];for(p=0;p<\r\n\tk.length;++p)r[p]=k[p]+(j[p]-k[p])*h}else r=k+(j-k)*h;f.addTarget(g,i.transform,i.member,r)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};q.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};m.prototype.parse=function(a){this.sid=a.getAttribute(\"sid\");this.type=a.nodeName;this.data=S(a.textContent);this.convert();return this};m.prototype.convert=function(){switch(this.type){case \"matrix\":this.obj=aa(this.data);\r\n\tbreak;case \"rotate\":this.angle=this.data[3]*mb;case \"translate\":ia(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case \"scale\":ia(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log(\"Can not convert Transform of type \"+this.type)}};m.prototype.apply=function(a){switch(this.type){case \"matrix\":a.multiplySelf(this.obj);break;case \"translate\":a.translate(this.obj);break;case \"rotate\":a.rotateByAxis(this.obj,\r\n\tthis.angle);break;case \"scale\":a.scale(this.obj)}};m.prototype.update=function(a,b){switch(this.type){case \"matrix\":console.log(\"Currently not handling matrix transform updates\");break;case \"translate\":case \"scale\":switch(b){case \"X\":this.obj.x=a;break;case \"Y\":this.obj.y=a;break;case \"Z\":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case \"rotate\":switch(b){case \"X\":this.obj.x=a;break;case \"Y\":this.obj.y=a;break;case \"Z\":this.obj.z=a;break;case \"ANGLE\":this.angle=\r\n\ta*mb;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=a[3]*mb}}};o.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"skeleton\":this.skeleton.push(c.textContent.replace(/^#/,\"\"));break;case \"bind_material\":if(c=U.evaluate(\".//dae:instance_material\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=\r\n\tc.iterateNext();d;)this.instance_material.push((new p).parse(d)),d=c.iterateNext()}}return this};p.prototype.parse=function(a){this.symbol=a.getAttribute(\"symbol\");this.target=a.getAttribute(\"target\").replace(/^#/,\"\");return this};n.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&\"bind_material\"==c.nodeName){if(a=U.evaluate(\".//dae:instance_material\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,\r\n\tnull))for(b=a.iterateNext();b;)this.instance_material.push((new p).parse(b)),b=a.iterateNext();break}}return this};r.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"mesh\":this.mesh=(new s(this)).parse(c)}}return this};s.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"source\":var d=c.getAttribute(\"id\");void 0==Ja[d]&&(Ja[d]=\r\n\t(new F(d)).parse(c));break;case \"vertices\":this.vertices=(new v).parse(c);break;case \"triangles\":this.primitives.push((new w).parse(c));break;case \"polygons\":console.warn(\"polygon holes not yet supported!\");case \"polylist\":this.primitives.push((new t).parse(c))}}this.geometry3js=new THREE.Geometry;a=Ja[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(new THREE.Vertex(N(a,b)));for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),\r\n\tthis.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};s.prototype.handlePrimitive=function(a,b){var c=0,d,e,f=a.p,g=a.inputs,h,i,j,k,l=0,m=3,n=0,o=[];for(d=0;d<g.length;d++){h=g[d];var q=h.offset+1,n=n<q?q:n;switch(h.semantic){case \"TEXCOORD\":o.push(h.set)}}for(;c<f.length;){var p=\r\n\t[],r=[],q={},s=[];a.vcount&&(m=a.vcount[l++]);for(d=0;d<m;d++)for(e=0;e<g.length;e++)switch(h=g[e],k=Ja[h.source],i=f[c+d*n+h.offset],j=k.accessor.params.length,j*=i,h.semantic){case \"VERTEX\":p.push(i);break;case \"NORMAL\":r.push(N(k.data,j));break;case \"TEXCOORD\":void 0===q[h.set]&&(q[h.set]=[]);q[h.set].push(new THREE.UV(k.data[j],1-k.data[j+1]));break;case \"COLOR\":s.push((new THREE.Color).setRGB(k.data[j],k.data[j+1],k.data[j+2]))}e=null;d=[];if(0==r.length)if(h=this.vertices.input.NORMAL){k=Ja[h.source];\r\n\tj=k.accessor.params.length;h=0;for(i=p.length;h<i;h++)r.push(N(k.data,p[h]*j))}else b.calcNormals=!0;if(3===m)d.push(new THREE.Face3(p[0],p[1],p[2],r,s.length?s:new THREE.Color));else if(4===m)d.push(new THREE.Face4(p[0],p[1],p[2],p[3],r,s.length?s:new THREE.Color));else if(4<m&&Ea.subdivideFaces){s=s.length?s:new THREE.Color;for(e=1;e<m-1;)d.push(new THREE.Face3(p[0],p[e],p[e+1],[r[0],r[e++],r[e]],s))}if(d.length){h=0;for(i=d.length;h<i;h++){e=d[h];e.daeMaterial=a.material;b.faces.push(e);for(e=\r\n\t0;e<o.length;e++)p=q[o[e]],p=4<m?[p[0],p[h+1],p[h+2]]:4===m?[p[0],p[1],p[2],p[3]]:[p[0],p[1],p[2]],b.faceVertexUvs[e]||(b.faceVertexUvs[e]=[]),b.faceVertexUvs[e].push(p)}}else console.log(\"dropped face with vcount \"+m+\" for geometry with id: \"+b.id);c+=n*m}};t.prototype=new w;t.prototype.constructor=t;w.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)if(this.inputs[b].source==a.id)this.inputs[b].source=a.input.POSITION.source};w.prototype.parse=function(a){this.inputs=[];this.material=\r\n\ta.getAttribute(\"material\");this.count=ka(a,\"count\",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"input\":this.inputs.push((new A).parse(a.childNodes[b]));break;case \"vcount\":this.vcount=R(c.textContent);break;case \"p\":this.p=R(c.textContent)}}return this};u.prototype.parse=function(a){this.params=[];this.source=a.getAttribute(\"source\");this.count=ka(a,\"count\",0);this.stride=ka(a,\"stride\",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(\"param\"==\r\n\tc.nodeName){var d={};d.name=c.getAttribute(\"name\");d.type=c.getAttribute(\"type\");this.params.push(d)}}return this};v.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++)if(\"input\"==a.childNodes[b].nodeName){var c=(new A).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};A.prototype.parse=function(a){this.semantic=a.getAttribute(\"semantic\");this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.set=ka(a,\"set\",-1);this.offset=ka(a,\"offset\",0);\r\n\tif(\"TEXCOORD\"==this.semantic&&0>this.set)this.set=0;return this};F.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"bool_array\":for(var d=ca(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push(\"true\"==d[f]||\"1\"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case \"float_array\":this.data=S(c.textContent);this.type=c.nodeName;break;case \"int_array\":this.data=R(c.textContent);this.type=c.nodeName;break;case \"IDREF_array\":case \"Name_array\":this.data=\r\n\tca(c.textContent);this.type=c.nodeName;break;case \"technique_common\":for(d=0;d<c.childNodes.length;d++)if(\"accessor\"==c.childNodes[d].nodeName){this.accessor=(new u).parse(c.childNodes[d]);break}}}return this};F.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case \"IDREF\":case \"Name\":case \"name\":case \"float\":return this.data;case \"float4x4\":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=aa(c);a.push(c)}break;default:console.log(\"ColladaLoader: Source: Read dont know how to read \"+\r\n\tb.type+\".\")}return a};B.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");for(var b=0;b<a.childNodes.length;b++)if(\"instance_effect\"==a.childNodes[b].nodeName){this.instance_effect=(new L).parse(a.childNodes[b]);break}return this};D.prototype.isColor=function(){return null==this.texture};D.prototype.isTexture=function(){return null!=this.texture};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"color\":c=\r\n\tS(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case \"texture\":this.texture=c.getAttribute(\"texture\"),this.texcoord=c.getAttribute(\"texcoord\"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};D.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&\"extra\"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&\"technique\"===a.childNodes[1].nodeName&&\r\n\t(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"offsetU\":case \"offsetV\":case \"repeatU\":case \"repeatV\":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case \"wrapU\":case \"wrapV\":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"ambient\":case \"emission\":case \"diffuse\":case \"specular\":case \"transparent\":this[c.nodeName]=\r\n\t(new D).parse(c);break;case \"shininess\":case \"reflectivity\":case \"transparency\":var d;d=U.evaluate(\".//dae:float\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};H.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case \"ambient\":case \"emission\":case \"diffuse\":case \"specular\":var d=this[c];\r\n\tif(d instanceof D)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=Ka[this.effect.surface.init_from];if(e)e=THREE.ImageUtils.loadTexture(Sa+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e}}else\"diffuse\"==\r\n\tc?a.color=d.color.getHex():b||(a[c]=d.color.getHex());break;case \"shininess\":case \"reflectivity\":a[c]=this[c];break;case \"transparency\":if(b)a.transparent=!0,a.opacity=this[c],b=!0}a.shading=za;return this.material=new THREE.MeshLambertMaterial(a)};I.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"init_from\":this.init_from=c.textContent;break;case \"format\":this.format=c.textContent;break;default:console.log(\"unhandled Surface prop: \"+\r\n\tc.nodeName)}}return this};Q.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"source\":this.source=c.textContent;break;case \"minfilter\":this.minfilter=c.textContent;break;case \"magfilter\":this.magfilter=c.textContent;break;case \"mipfilter\":this.mipfilter=c.textContent;break;case \"wrap_s\":this.wrap_s=c.textContent;break;case \"wrap_t\":this.wrap_t=c.textContent;break;default:console.log(\"unhandled Sampler2D prop: \"+c.nodeName)}}return this};\r\n\tP.prototype.create=function(){if(null==this.shader)return null};P.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"profile_COMMON\":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};P.prototype.parseNewparam=function(a){for(var b=a.getAttribute(\"sid\"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"surface\":this.surface=\r\n\t(new I(this)).parse(d);this.surface.sid=b;break;case \"sampler2D\":this.sampler=(new Q(this)).parse(d);this.sampler.sid=b;break;case \"extra\":break;default:console.log(d.nodeName)}}};P.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"profile_COMMON\":this.parseProfileCOMMON(d);break;case \"technique\":b=d;break;case \"newparam\":this.parseNewparam(d);break;case \"extra\":break;default:console.log(d.nodeName)}}return b};\r\n\tP.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"constant\":case \"lambert\":case \"blinn\":case \"phong\":this.shader=(new H(c.nodeName,this)).parse(c)}}};L.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");return this};K.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];\r\n\tif(1==c.nodeType)switch(c.nodeName){case \"source\":c=(new F).parse(c);this.source[c.id]=c;break;case \"sampler\":this.sampler.push((new y(this)).parse(c));break;case \"channel\":this.channel.push((new O(this)).parse(c))}}return this};O.prototype.parse=function(a){this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.target=a.getAttribute(\"target\");var b=this.target.split(\"/\");b.shift();var a=b.shift(),c=0<=a.indexOf(\".\"),d=0<=a.indexOf(\"(\");if(c)b=a.split(\".\"),this.sid=b.shift(),this.member=b.shift();\r\n\telse if(d){b=a.split(\"(\");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\\)/,\"\"));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};y.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"input\":this.inputs.push((new A).parse(c))}}return this};y.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=\r\n\tthis.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case \"INPUT\":this.input=c.read();break;case \"OUTPUT\":this.output=c.read();this.strideOut=c.accessor.stride;break;case \"INTERPOLATION\":this.interpolation=c.read();break;case \"IN_TANGENT\":break;case \"OUT_TANGENT\":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),\r\n\tthis.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};y.prototype.getData=function(a,b){var c;if(1<this.strideOut){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case \"rotate\":case \"translate\":ia(c,-1);break;case \"scale\":ia(c,1)}}else c=this.output[b];return c};l.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};l.prototype.apply=function(a){for(var b=\r\n\t0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};l.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};l.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};l.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if(e){var f=(b-this.time)/\r\n\t(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log(\"Key.interpolate: Warning! Scale out of bounds:\"+f),f=0>f?0:1;if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};$.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"optics\":this.parseOptics(c)}}return this};$.prototype.parseOptics=\r\n\tfunction(a){for(var b=0;b<a.childNodes.length;b++)if(\"technique_common\"==a.childNodes[b].nodeName)for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++)if(\"perspective\"==c.childNodes[d].nodeName)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case \"xfov\":this.fov=g.textContent;break;case \"znear\":this.znear=0.4;break;case \"zfar\":this.zfar=1E15;break;case \"aspect_ratio\":this.aspect_ratio=g.textContent}}return this};C.prototype.parse=function(a){this.url=\r\n\ta.getAttribute(\"url\").replace(/^#/,\"\");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.overrideMimeType&&f.overrideMimeType(\"text/xml\");f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)f.responseXML?(Ta=c,a(f.responseXML,void 0,b)):console.error(\"ColladaLoader: Empty or non-existing file (\"+b+\")\")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader(\"Content-Length\")),\r\n\td({total:e,loaded:f.responseText.length}))};f.open(\"GET\",b,!0);f.send(null)}else alert(\"Don't know how to parse XML!\")},parse:a,setPreferredShading:function(a){za=a},applySkin:f,geometries:ha,options:Ea}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.supr=THREE.Loader.prototype;\r\n\tTHREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};\r\n\tTHREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var g=new XMLHttpRequest,e=0;g.onreadystatechange=function(){if(g.readyState===g.DONE)if(200===g.status||0===g.status){if(g.responseText){var h=JSON.parse(g.responseText);a.createModel(h,c,d)}else console.warn(\"THREE.JSONLoader: [\"+b+\"] seems to be unreachable or file there is empty\");a.onLoadComplete()}else console.error(\"THREE.JSONLoader: Couldn't load [\"+b+\"] [\"+g.status+\"]\");else g.readyState===g.LOADING?f&&(0===e&&(e=g.getResponseHeader(\"Content-Length\")),\r\n\tf({total:e,loaded:g.responseText.length})):g.readyState===g.HEADERS_RECEIVED&&(e=g.getResponseHeader(\"Content-Length\"))};g.open(\"GET\",b,!0);g.overrideMimeType&&g.overrideMimeType(\"text/plain; charset=x-user-defined\");g.setRequestHeader(\"Content-Type\",\"text/plain\");g.send(null)};\r\n\tTHREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(b){var c,f,i,j,k,q,m,o,p,n,r,s,t,w,u=a.faces;q=a.vertices;var v=a.normals,A=a.colors,F=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&F++;for(c=0;c<F;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];j=0;for(k=q.length;j<k;)m=new THREE.Vertex,m.position.x=q[j++]*b,m.position.y=q[j++]*b,m.position.z=q[j++]*b,d.vertices.push(m);j=0;for(k=u.length;j<k;){b=\r\n\tu[j++];q=b&1;i=b&2;c=b&4;f=b&8;o=b&16;m=b&32;n=b&64;b&=128;q?(r=new THREE.Face4,r.a=u[j++],r.b=u[j++],r.c=u[j++],r.d=u[j++],q=4):(r=new THREE.Face3,r.a=u[j++],r.b=u[j++],r.c=u[j++],q=3);if(i)i=u[j++],r.materialIndex=i;i=d.faces.length;if(c)for(c=0;c<F;c++)s=a.uvs[c],p=u[j++],w=s[2*p],p=s[2*p+1],d.faceUvs[c][i]=new THREE.UV(w,p);if(f)for(c=0;c<F;c++){s=a.uvs[c];t=[];for(f=0;f<q;f++)p=u[j++],w=s[2*p],p=s[2*p+1],t[f]=new THREE.UV(w,p);d.faceVertexUvs[c][i]=t}if(o)o=3*u[j++],f=new THREE.Vector3,f.x=v[o++],\r\n\tf.y=v[o++],f.z=v[o],r.normal=f;if(m)for(c=0;c<q;c++)o=3*u[j++],f=new THREE.Vector3,f.x=v[o++],f.y=v[o++],f.z=v[o],r.vertexNormals.push(f);if(n)m=u[j++],m=new THREE.Color(A[m]),r.color=m;if(b)for(c=0;c<q;c++)m=u[j++],m=new THREE.Color(A[m]),r.vertexColors.push(m);d.faces.push(r)}})(f);(function(){var b,c,f,i;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)f=a.skinWeights[b],i=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(f,i,0,0));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<\r\n\tc;b+=2)f=a.skinIndices[b],i=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(f,i,0,0));d.bones=a.bones;d.animation=a.animation})();(function(b){if(void 0!==a.morphTargets){var c,f,i,j,k,q,m,o,p;for(c=0,f=a.morphTargets.length;c<f;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];o=d.morphTargets[c].vertices;p=a.morphTargets[c].vertices;for(i=0,j=p.length;i<j;i+=3)k=p[i]*b,q=p[i+1]*b,m=p[i+2]*b,o.push(new THREE.Vertex(new THREE.Vector3(k,q,\r\n\tm)))}}if(void 0!==a.morphColors)for(c=0,f=a.morphColors.length;c<f;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];j=d.morphColors[c].colors;k=a.morphColors[c].colors;for(b=0,i=k.length;b<i;b+=3)q=new THREE.Color(16755200),q.setRGB(k[b],k[b+1],k[b+2]),j.push(q)}})(f);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};\r\n\tTHREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;\r\n\tTHREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4==d.readyState)if(200==d.status||0==d.status){var f=JSON.parse(d.responseText);c.createScene(f,b,a)}else console.error(\"THREE.SceneLoader: Couldn't load [\"+a+\"] [\"+d.status+\"]\")};d.open(\"GET\",a,!0);d.overrideMimeType&&d.overrideMimeType(\"text/plain; charset=x-user-defined\");d.setRequestHeader(\"Content-Type\",\"text/plain\");d.send(null)};\r\n\tTHREE.SceneLoader.prototype.createScene=function(a,b,c){function d(a,b){return\"relativeToHTML\"==b?a:j+\"/\"+a}function f(){var a;for(m in L.objects)if(!C.objects[m])if(s=L.objects[m],void 0!==s.geometry){if(H=C.geometries[s.geometry]){a=!1;I=C.materials[s.materials[0]];(a=I instanceof THREE.ShaderMaterial)&&H.computeTangents();u=s.position;v=s.rotation;A=s.quaternion;F=s.scale;A=0;0==s.materials.length&&(I=new THREE.MeshFaceMaterial);1<s.materials.length&&(I=new THREE.MeshFaceMaterial);a=new THREE.Mesh(H,\r\n\tI);a.name=m;a.position.set(u[0],u[1],u[2]);A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(v[0],v[1],v[2]);a.scale.set(F[0],F[1],F[2]);a.visible=s.visible;C.scene.add(a);C.objects[m]=a;if(s.castsShadow){var b=new THREE.ShadowVolume(H);C.scene.add(b);b.position=a.position;b.rotation=a.rotation;b.scale=a.scale}s.trigger&&\"none\"!=s.trigger.toLowerCase()&&(b={type:s.trigger,object:s},C.triggers[a.name]=b)}}else u=s.position,v=s.rotation,A=s.quaternion,F=s.scale,A=0,a=new THREE.Object3D,\r\n\ta.name=m,a.position.set(u[0],u[1],u[2]),A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(v[0],v[1],v[2]),a.scale.set(F[0],F[1],F[2]),a.visible=void 0!==s.visible?s.visible:!1,C.scene.add(a),C.objects[m]=a,C.empties[m]=a,s.trigger&&\"none\"!=s.trigger.toLowerCase()&&(b={type:s.trigger,object:s},C.triggers[a.name]=b)}function g(a){return function(b){C.geometries[a]=b;f();O-=1;i.onLoadComplete();h()}}function e(a){return function(b){C.geometries[a]=b}}function h(){i.callbackProgress({totalModels:l,\r\n\ttotalTextures:$,loadedModels:l-O,loadedTextures:$-y},C);i.onLoadProgress();0==O&&0==y&&b(C)}var i=this,j=THREE.Loader.prototype.extractUrlBase(c),k,q,m,o,p,n,r,s,t,w,u,v,A,F,B,D,H,I,Q,P,L,K,O,y,l,$,C;L=a;c=new THREE.BinaryLoader;K=new THREE.JSONLoader;y=O=0;C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},triggers:{},empties:{}};if(L.transform)a=L.transform.position,t=L.transform.rotation,B=L.transform.scale,a&&C.scene.position.set(a[0],a[1],\r\n\ta[2]),t&&C.scene.rotation.set(t[0],t[1],t[2]),B&&C.scene.scale.set(B[0],B[1],B[2]),(a||t||B)&&C.scene.updateMatrix();a=function(){y-=1;h();i.onLoadComplete()};for(p in L.cameras)B=L.cameras[p],\"perspective\"==B.type?Q=new THREE.PerspectiveCamera(B.fov,B.aspect,B.near,B.far):\"ortho\"==B.type&&(Q=new THREE.OrthographicCamera(B.left,B.right,B.top,B.bottom,B.near,B.far)),u=B.position,t=B.target,B=B.up,Q.position.set(u[0],u[1],u[2]),Q.target=new THREE.Vector3(t[0],t[1],t[2]),B&&Q.up.set(B[0],B[1],B[2]),\r\n\tC.cameras[p]=Q;for(o in L.lights)t=L.lights[o],p=void 0!==t.color?t.color:16777215,Q=void 0!==t.intensity?t.intensity:1,\"directional\"==t.type?(u=t.direction,w=new THREE.DirectionalLight(p,Q),w.position.set(u[0],u[1],u[2]),w.position.normalize()):\"point\"==t.type?(u=t.position,w=t.distance,w=new THREE.PointLight(p,Q,w),w.position.set(u[0],u[1],u[2])):\"ambient\"==t.type&&(w=new THREE.AmbientLight(p)),C.scene.add(w),C.lights[o]=w;for(n in L.fogs)o=L.fogs[n],\"linear\"==o.type?P=new THREE.Fog(0,o.near,o.far):\r\n\t\"exp2\"==o.type&&(P=new THREE.FogExp2(0,o.density)),B=o.color,P.color.setRGB(B[0],B[1],B[2]),C.fogs[n]=P;if(C.cameras&&L.defaults.camera)C.currentCamera=C.cameras[L.defaults.camera];if(C.fogs&&L.defaults.fog)C.scene.fog=C.fogs[L.defaults.fog];B=L.defaults.bgcolor;C.bgColor=new THREE.Color;C.bgColor.setRGB(B[0],B[1],B[2]);C.bgColorAlpha=L.defaults.bgalpha;for(k in L.geometries)if(n=L.geometries[k],\"bin_mesh\"==n.type||\"ascii_mesh\"==n.type)O+=1,i.onLoadStart();l=O;for(k in L.geometries)if(n=L.geometries[k],\r\n\t\"cube\"==n.type)H=new THREE.CubeGeometry(n.width,n.height,n.depth,n.segmentsWidth,n.segmentsHeight,n.segmentsDepth,null,n.flipped,n.sides),C.geometries[k]=H;else if(\"plane\"==n.type)H=new THREE.PlaneGeometry(n.width,n.height,n.segmentsWidth,n.segmentsHeight),C.geometries[k]=H;else if(\"sphere\"==n.type)H=new THREE.SphereGeometry(n.radius,n.segmentsWidth,n.segmentsHeight),C.geometries[k]=H;else if(\"cylinder\"==n.type)H=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),C.geometries[k]=\r\n\tH;else if(\"torus\"==n.type)H=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),C.geometries[k]=H;else if(\"icosahedron\"==n.type)H=new THREE.IcosahedronGeometry(n.radius,n.subdivisions),C.geometries[k]=H;else if(\"bin_mesh\"==n.type)c.load(d(n.url,L.urlBaseType),g(k));else if(\"ascii_mesh\"==n.type)K.load(d(n.url,L.urlBaseType),g(k));else if(\"embedded_mesh\"==n.type)n=L.embeds[n.id],n.metadata=L.metadata,n&&K.createModel(n,e(k),\"\");for(r in L.textures)if(k=L.textures[r],k.url instanceof Array){y+=\r\n\tk.url.length;for(n=0;n<k.url.length;n++)i.onLoadStart()}else y+=1,i.onLoadStart();$=y;for(r in L.textures){k=L.textures[r];if(void 0!=k.mapping&&void 0!=THREE[k.mapping])k.mapping=new THREE[k.mapping];if(k.url instanceof Array){n=[];for(P=0;P<k.url.length;P++)n[P]=d(k.url[P],L.urlBaseType);n=THREE.ImageUtils.loadTextureCube(n,k.mapping,a)}else{n=THREE.ImageUtils.loadTexture(d(k.url,L.urlBaseType),k.mapping,a);if(void 0!=THREE[k.minFilter])n.minFilter=THREE[k.minFilter];if(void 0!=THREE[k.magFilter])n.magFilter=\r\n\tTHREE[k.magFilter];if(k.repeat){n.repeat.set(k.repeat[0],k.repeat[1]);if(1!=k.repeat[0])n.wrapS=THREE.RepeatWrapping;if(1!=k.repeat[1])n.wrapT=THREE.RepeatWrapping}k.offset&&n.offset.set(k.offset[0],k.offset[1]);if(k.wrap){P={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(void 0!==P[k.wrap[0]])n.wrapS=P[k.wrap[0]];if(void 0!==P[k.wrap[1]])n.wrapT=P[k.wrap[1]]}}C.textures[r]=n}for(q in L.materials){r=L.materials[q];for(D in r.parameters)if(\"envMap\"==D||\"map\"==D||\"lightMap\"==D)r.parameters[D]=\r\n\tC.textures[r.parameters[D]];else if(\"shading\"==D)r.parameters[D]=\"flat\"==r.parameters[D]?THREE.FlatShading:THREE.SmoothShading;else if(\"blending\"==D)r.parameters[D]=THREE[r.parameters[D]]?THREE[r.parameters[D]]:THREE.NormalBlending;else if(\"combine\"==D)r.parameters[D]=\"MixOperation\"==r.parameters[D]?THREE.MixOperation:THREE.MultiplyOperation;else if(\"vertexColors\"==D)if(\"face\"==r.parameters[D])r.parameters[D]=THREE.FaceColors;else if(r.parameters[D])r.parameters[D]=THREE.VertexColors;if(void 0!==\r\n\tr.parameters.opacity&&1>r.parameters.opacity)r.parameters.transparent=!0;if(r.parameters.normalMap){a=THREE.ShaderUtils.lib.normal;k=THREE.UniformsUtils.clone(a.uniforms);n=r.parameters.color;P=r.parameters.specular;c=r.parameters.ambient;K=r.parameters.shininess;k.tNormal.texture=C.textures[r.parameters.normalMap];if(r.parameters.normalMapFactor)k.uNormalScale.value=r.parameters.normalMapFactor;if(r.parameters.map)k.tDiffuse.texture=r.parameters.map,k.enableDiffuse.value=!0;if(r.parameters.lightMap)k.tAO.texture=\r\n\tr.parameters.lightMap,k.enableAO.value=!0;if(r.parameters.specularMap)k.tSpecular.texture=C.textures[r.parameters.specularMap],k.enableSpecular.value=!0;k.uDiffuseColor.value.setHex(n);k.uSpecularColor.value.setHex(P);k.uAmbientColor.value.setHex(c);k.uShininess.value=K;if(r.parameters.opacity)k.uOpacity.value=r.parameters.opacity;I=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:k,lights:!0,fog:!0})}else I=new THREE[r.type](r.parameters);C.materials[q]=\r\n\tI}f();i.callbackSync(C);h()};THREE.UTF8Loader=function(){};\r\n\tTHREE.UTF8Loader.prototype.load=function(a,b,c){var d=new XMLHttpRequest,f=void 0!==c.scale?c.scale:1,g=void 0!==c.offsetX?c.offsetX:0,e=void 0!==c.offsetY?c.offsetY:0,h=void 0!==c.offsetZ?c.offsetZ:0;d.onreadystatechange=function(){4==d.readyState?200==d.status||0==d.status?THREE.UTF8Loader.prototype.createModel(d.responseText,b,f,g,e,h):console.error(\"THREE.UTF8Loader: Couldn't load [\"+a+\"] [\"+d.status+\"]\"):3!=d.readyState&&2==d.readyState&&d.getResponseHeader(\"Content-Length\")};d.open(\"GET\",a,\r\n\t!0);d.send(null)};THREE.UTF8Loader.prototype.decompressMesh=function(a){var b=a.charCodeAt(0);57344<=b&&(b-=2048);b++;for(var c=new Float32Array(8*b),d=1,f=0;8>f;f++){for(var g=0,e=0;e<b;++e){var h=a.charCodeAt(e+d),g=g+(h>>1^-(h&1));c[8*e+f]=g}d+=b}b=a.length-d;g=new Uint16Array(b);for(f=e=0;f<b;f++)h=a.charCodeAt(f+d),g[f]=e-h,0==h&&e++;return[c,g]};\r\n\tTHREE.UTF8Loader.prototype.createModel=function(a,b,c,d,f,g){var e=function(){var b=this;b.materials=[];THREE.Geometry.call(this);var e=THREE.UTF8Loader.prototype.decompressMesh(a),j=[],k=[];(function(a,e,i){for(var j,k,r,s=a.length;i<s;i+=e)j=a[i],k=a[i+1],r=a[i+2],j=j/16383*c,k=k/16383*c,r=r/16383*c,j+=d,k+=f,r+=g,b.vertices.push(new THREE.Vertex(new THREE.Vector3(j,k,r)))})(e[0],8,0);(function(a,b,c){for(var d,e,f=a.length;c<f;c+=b)d=a[c],e=a[c+1],d/=1023,e/=1023,k.push(d,1-e)})(e[0],8,3);(function(a,\r\n\tb,c){for(var d,e,f,g=a.length;c<g;c+=b)d=a[c],e=a[c+1],f=a[c+2],d=(d-512)/511,e=(e-512)/511,f=(f-512)/511,j.push(d,e,f)})(e[0],8,5);(function(a){var c,d,e,f,g,i,t,w,u,v=a.length;for(c=0;c<v;c+=3){d=a[c];e=a[c+1];f=a[c+2];g=b;w=d;u=e;i=f;var A=j[3*e],F=j[3*e+1],B=j[3*e+2],D=j[3*f],H=j[3*f+1],I=j[3*f+2];t=new THREE.Vector3(j[3*d],j[3*d+1],j[3*d+2]);A=new THREE.Vector3(A,F,B);D=new THREE.Vector3(D,H,I);g.faces.push(new THREE.Face3(w,u,i,[t,A,D],null,0));g=k[2*d];d=k[2*d+1];i=k[2*e];t=k[2*e+1];w=k[2*\r\n\tf];u=k[2*f+1];f=b.faceVertexUvs[0];e=i;i=t;t=[];t.push(new THREE.UV(g,d));t.push(new THREE.UV(e,i));t.push(new THREE.UV(w,u));f.push(t)}})(e[1]);this.computeCentroids();this.computeFaceNormals()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e)};\r\n\tTHREE.MarchingCubes=function(a,b){THREE.Object3D.call(this);this.material=b;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasNormal=\r\n\tthis.hasPos=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount)};this.lerp=function(a,b,f){return a+(b-a)*f};this.VIntX=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h+e*this.delta;b[g+1]=i;b[g+2]=j;f[g]=this.lerp(k[a],k[a+3],e);f[g+1]=this.lerp(k[a+1],k[a+4],e);f[g+2]=this.lerp(k[a+2],k[a+5],e)};this.VIntY=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h;b[g+1]=i+e*this.delta;b[g+2]=j;b=a+3*this.yd;\r\n\tf[g]=this.lerp(k[a],k[b],e);f[g+1]=this.lerp(k[a+1],k[b+1],e);f[g+2]=this.lerp(k[a+2],k[b+2],e)};this.VIntZ=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h;b[g+1]=i;b[g+2]=j+e*this.delta;b=a+3*this.zd;f[g]=this.lerp(k[a],k[b],e);f[g+1]=this.lerp(k[a+1],k[b+1],e);f[g+2]=this.lerp(k[a+2],k[b+2],e)};this.compNorm=function(a){var b=3*a;0===this.normal_cache[b]&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],\r\n\tthis.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,f,g,e,h){var i=g+1,j=g+this.yd,k=g+this.zd,q=i+this.yd,m=i+this.zd,o=g+this.yd+this.zd,p=i+this.yd+this.zd,n=0,r=this.field[g],s=this.field[i],t=this.field[j],w=this.field[q],u=this.field[k],v=this.field[m],A=this.field[o],F=this.field[p];r<e&&(n|=1);s<e&&(n|=2);t<e&&(n|=8);w<e&&(n|=4);u<e&&(n|=16);v<e&&(n|=32);A<e&&(n|=128);F<e&&(n|=64);var B=THREE.edgeTable[n];if(0===B)return 0;var D=this.delta,H=a+\r\n\tD,I=b+D,D=f+D;B&1&&(this.compNorm(g),this.compNorm(i),this.VIntX(3*g,this.vlist,this.nlist,0,e,a,b,f,r,s));B&2&&(this.compNorm(i),this.compNorm(q),this.VIntY(3*i,this.vlist,this.nlist,3,e,H,b,f,s,w));B&4&&(this.compNorm(j),this.compNorm(q),this.VIntX(3*j,this.vlist,this.nlist,6,e,a,I,f,t,w));B&8&&(this.compNorm(g),this.compNorm(j),this.VIntY(3*g,this.vlist,this.nlist,9,e,a,b,f,r,t));B&16&&(this.compNorm(k),this.compNorm(m),this.VIntX(3*k,this.vlist,this.nlist,12,e,a,b,D,u,v));B&32&&(this.compNorm(m),\r\n\tthis.compNorm(p),this.VIntY(3*m,this.vlist,this.nlist,15,e,H,b,D,v,F));B&64&&(this.compNorm(o),this.compNorm(p),this.VIntX(3*o,this.vlist,this.nlist,18,e,a,I,D,A,F));B&128&&(this.compNorm(k),this.compNorm(o),this.VIntY(3*k,this.vlist,this.nlist,21,e,a,b,D,u,A));B&256&&(this.compNorm(g),this.compNorm(k),this.VIntZ(3*g,this.vlist,this.nlist,24,e,a,b,f,r,u));B&512&&(this.compNorm(i),this.compNorm(m),this.VIntZ(3*i,this.vlist,this.nlist,27,e,H,b,f,s,v));B&1024&&(this.compNorm(q),this.compNorm(p),this.VIntZ(3*\r\n\tq,this.vlist,this.nlist,30,e,H,I,f,w,F));B&2048&&(this.compNorm(j),this.compNorm(o),this.VIntZ(3*j,this.vlist,this.nlist,33,e,a,I,f,t,A));n<<=4;for(e=g=0;-1!=THREE.triTable[n+e];)a=n+e,b=a+1,f=a+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[f],h),e+=3,g++;return g};this.posnormtriv=function(a,b,f,g,e,h){var i=3*this.count;this.positionArray[i]=a[f];this.positionArray[i+1]=a[f+1];this.positionArray[i+2]=a[f+2];this.positionArray[i+3]=a[g];this.positionArray[i+\r\n\t4]=a[g+1];this.positionArray[i+5]=a[g+2];this.positionArray[i+6]=a[e];this.positionArray[i+7]=a[e+1];this.positionArray[i+8]=a[e+2];this.normalArray[i]=b[f];this.normalArray[i+1]=b[f+1];this.normalArray[i+2]=b[f+2];this.normalArray[i+3]=b[g];this.normalArray[i+4]=b[g+1];this.normalArray[i+5]=b[g+2];this.normalArray[i+6]=b[e];this.normalArray[i+7]=b[e+1];this.normalArray[i+8]=b[e+2];this.hasNormal=this.hasPos=!0;this.count+=3;this.count>=this.maxCount-3&&h(this)};this.begin=function(){this.count=0;\r\n\tthis.hasNormal=this.hasPos=!1};this.end=function(a){if(0!==this.count){for(var b=3*this.count;b<this.positionArray.length;b++)this.positionArray[b]=0;a(this)}};this.addBall=function(a,b,f,g,e){var h=this.size*Math.sqrt(g/e),i=f*this.size,j=b*this.size,k=a*this.size,q=Math.floor(i-h);1>q&&(q=1);i=Math.floor(i+h);i>this.size-1&&(i=this.size-1);var m=Math.floor(j-h);1>m&&(m=1);j=Math.floor(j+h);j>this.size-1&&(j=this.size-1);var o=Math.floor(k-h);1>o&&(o=1);h=Math.floor(k+h);h>this.size-1&&(h=this.size-\r\n\t1);for(var p,n,r,s,t,w,u,k=q;k<i;k++){r=this.size2*k;t=k/this.size-f;w=t*t;for(q=m;q<j;q++){n=r+this.size*q;p=q/this.size-b;u=p*p;for(p=o;p<h;p++)s=p/this.size-a,s=g/(1.0E-6+s*s+u+w)-e,0<s&&(this.field[n+p]+=s)}}};this.addPlaneX=function(a,b){var f,g,e,h,i,j=this.size,k=this.yd,q=this.zd,m=this.field,o=j*Math.sqrt(a/b);o>j&&(o=j);for(f=0;f<o;f++)if(g=f/j,g*=g,h=a/(1.0E-4+g)-b,0<h)for(g=0;g<j;g++){i=f+g*k;for(e=0;e<j;e++)m[q*e+i]+=h}};this.addPlaneY=function(a,b){var f,g,e,h,i,j,k=this.size,q=this.yd,\r\n\tm=this.zd,o=this.field,p=k*Math.sqrt(a/b);p>k&&(p=k);for(g=0;g<p;g++)if(f=g/k,f*=f,h=a/(1.0E-4+f)-b,0<h){i=g*q;for(f=0;f<k;f++){j=i+f;for(e=0;e<k;e++)o[m*e+j]+=h}}};this.addPlaneZ=function(a,b){var f,g,e,h,i,j,k=this.size,q=this.yd,m=this.zd,o=this.field,p=k*Math.sqrt(a/b);p>k&&(p=k);for(e=0;e<p;e++)if(f=e/k,f*=f,h=a/(1.0E-4+f)-b,0<h){i=m*e;for(g=0;g<k;g++){j=i+g*q;for(f=0;f<k;f++)o[j+f]+=h}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[3*a]=0,this.field[a]=0};this.render=\r\n\tfunction(a){this.begin();var b,f,g,e,h,i,j,k,q,m=this.size-2;for(e=1;e<m;e++){q=this.size2*e;j=(e-this.halfsize)/this.halfsize;for(g=1;g<m;g++){k=q+this.size*g;i=(g-this.halfsize)/this.halfsize;for(f=1;f<m;f++)h=(f-this.halfsize)/this.halfsize,b=k+f,this.polygonize(h,i,j,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,f=[];this.render(function(g){var e,h,i,j,k,q,m,o;for(e=0;e<g.count;e++)m=3*e,k=m+1,o=m+2,h=g.positionArray[m],i=g.positionArray[k],j=\r\n\tg.positionArray[o],q=new THREE.Vector3(h,i,j),h=g.normalArray[m],i=g.normalArray[k],j=g.normalArray[o],m=new THREE.Vector3(h,i,j),m.normalize(),k=new THREE.Vertex(q),b.vertices.push(k),f.push(m);q=g.count/3;for(e=0;e<q;e++)m=3*(a+e),k=m+1,o=m+2,h=f[m],i=f[k],j=f[o],m=new THREE.Face3(m,k,o,[h,i,j]),b.faces.push(m);a+=q;g.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;\r\n\tTHREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,\r\n\t1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,\r\n\t419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);\r\n\tTHREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,\r\n\t-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,\r\n\t-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,\r\n\t-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,\r\n\t8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,\r\n\t-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,\r\n\t5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,\r\n\t-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,\r\n\t10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,\r\n\t6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,\r\n\t8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,\r\n\t2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,\r\n\t-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,\r\n\t-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,\r\n\t-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\r\n\t1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,\r\n\t-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,\r\n\t2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,\r\n\t4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,\r\n\t-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,\r\n\t2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;\r\n\tTHREE.LensFlare.prototype.supr=THREE.Object3D.prototype;THREE.LensFlare.prototype.add=function(a,b,c,d,f,g){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===g&&(g=1);void 0===f&&(f=new THREE.Color(16777215));if(void 0===d)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:f,blending:d})};\r\n\tTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};\r\n\tTHREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,f,g,e,h,i,j,k,q,m,o;this.init=function(p){b=p.context;c=p;d=new Float32Array(16);f=new Uint16Array(6);p=0;d[p++]=-1;d[p++]=-1;d[p++]=0;d[p++]=0;d[p++]=1;d[p++]=-1;d[p++]=1;d[p++]=\r\n\t0;d[p++]=1;d[p++]=1;d[p++]=1;d[p++]=1;d[p++]=-1;d[p++]=1;d[p++]=0;d[p++]=1;p=0;f[p++]=0;f[p++]=1;f[p++]=2;f[p++]=0;f[p++]=2;f[p++]=3;g=b.createBuffer();e=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,\r\n\tb.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);\r\n\tb.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(j=!1,k=a(THREE.ShaderFlares.lensFlare)):(j=!0,k=a(THREE.ShaderFlares.lensFlareVertexTexture));q={};m={};q.vertex=b.getAttribLocation(k,\"position\");q.uv=b.getAttribLocation(k,\"uv\");m.renderType=b.getUniformLocation(k,\"renderType\");m.map=b.getUniformLocation(k,\"map\");m.occlusionMap=b.getUniformLocation(k,\"occlusionMap\");m.opacity=b.getUniformLocation(k,\"opacity\");m.color=b.getUniformLocation(k,\r\n\t\"color\");m.scale=b.getUniformLocation(k,\"scale\");m.rotation=b.getUniformLocation(k,\"rotation\");m.screenPosition=b.getUniformLocation(k,\"screenPosition\");o=!1};this.render=function(a,d,f,s){var a=a.__webglFlares,t=a.length;if(t){var w=new THREE.Vector3,u=s/f,v=0.5*f,A=0.5*s,F=16/s,B=new THREE.Vector2(F*u,F),D=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1),I=m,F=q;b.useProgram(k);o||(b.enableVertexAttribArray(q.vertex),b.enableVertexAttribArray(q.uv),o=!0);b.uniform1i(I.occlusionMap,0);b.uniform1i(I.map,\r\n\t1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(F.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(F.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.disable(b.CULL_FACE);b.depthMask(!1);var Q,P,L,K,O;for(Q=0;Q<t;Q++)if(F=16/s,B.set(F*u,F),K=a[Q],w.set(K.matrixWorld.n14,K.matrixWorld.n24,K.matrixWorld.n34),d.matrixWorldInverse.multiplyVector3(w),d.projectionMatrix.multiplyVector3(w),D.copy(w),H.x=D.x*v+v,H.y=D.y*A+A,j||0<H.x&&H.x<f&&0<H.y&&H.y<s){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,\r\n\th);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x-8,H.y-8,16,16,0);b.uniform1i(I.renderType,0);b.uniform2f(I.scale,B.x,B.y);b.uniform3f(I.screenPosition,D.x,D.y,D.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x-8,H.y-8,16,16,0);b.uniform1i(I.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,\r\n\t6,b.UNSIGNED_SHORT,0);K.positionScreen.copy(D);K.customUpdateCallback?K.customUpdateCallback(K):K.updateLensFlares();b.uniform1i(I.renderType,2);b.enable(b.BLEND);for(P=0,L=K.lensFlares.length;P<L;P++)if(O=K.lensFlares[P],0.001<O.opacity&&0.001<O.scale)D.x=O.x,D.y=O.y,D.z=O.z,F=O.size*O.scale/s,B.x=F*u,B.y=F,b.uniform3f(I.screenPosition,D.x,D.y,D.z),b.uniform2f(I.scale,B.x,B.y),b.uniform1f(I.rotation,O.rotation),b.uniform1f(I.opacity,O.opacity),b.uniform3f(I.color,O.color.r,O.color.g,O.color.b),c.setBlending(O.blending),\r\n\tc.setTexture(O.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};\r\n\tTHREE.ShadowMapPlugin=function(){var a,b,c,d,f=new THREE.Frustum,g=new THREE.Matrix4,e=new THREE.Vector3,h=new THREE.Vector3;this.init=function(e){a=e.context;b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,\r\n\tc){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(i,j){var k,q,m,o,p,n,r,s,t,w=[];o=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.FRONT);b.setDepthTest(!0);for(k=0,q=i.__lights.length;k<q;k++)if(m=i.__lights[k],m.castShadow)if(m instanceof THREE.DirectionalLight&&m.shadowCascade)for(p=0;p<m.shadowCascadeCount;p++){var u;if(m.shadowCascadeArray[p])u=m.shadowCascadeArray[p];else{t=m;r=p;u=new THREE.DirectionalLight;u.isVirtual=\r\n\t!0;u.onlyShadow=!0;u.castShadow=!0;u.shadowCameraNear=t.shadowCameraNear;u.shadowCameraFar=t.shadowCameraFar;u.shadowCameraLeft=t.shadowCameraLeft;u.shadowCameraRight=t.shadowCameraRight;u.shadowCameraBottom=t.shadowCameraBottom;u.shadowCameraTop=t.shadowCameraTop;u.shadowCameraVisible=t.shadowCameraVisible;u.shadowDarkness=t.shadowDarkness;u.shadowBias=t.shadowCascadeBias[r];u.shadowMapWidth=t.shadowCascadeWidth[r];u.shadowMapHeight=t.shadowCascadeHeight[r];u.pointsWorld=[];u.pointsFrustum=[];s=\r\n\tu.pointsWorld;n=u.pointsFrustum;for(var v=0;8>v;v++)s[v]=new THREE.Vector3,n[v]=new THREE.Vector3;s=t.shadowCascadeNearZ[r];t=t.shadowCascadeFarZ[r];n[0].set(-1,-1,s);n[1].set(1,-1,s);n[2].set(-1,1,s);n[3].set(1,1,s);n[4].set(-1,-1,t);n[5].set(1,-1,t);n[6].set(-1,1,t);n[7].set(1,1,t);u.originalCamera=j;n=new THREE.Gyroscope;n.position=m.shadowCascadeOffset;n.add(u);n.add(u.target);j.add(n);m.shadowCascadeArray[p]=u;console.log(\"Created virtualLight\",u)}r=m;s=p;t=r.shadowCascadeArray[s];t.position.copy(r.position);\r\n\tt.target.position.copy(r.target.position);t.lookAt(t.target);t.shadowCameraVisible=r.shadowCameraVisible;t.shadowDarkness=r.shadowDarkness;t.shadowBias=r.shadowCascadeBias[s];n=r.shadowCascadeNearZ[s];r=r.shadowCascadeFarZ[s];t=t.pointsFrustum;t[0].z=n;t[1].z=n;t[2].z=n;t[3].z=n;t[4].z=r;t[5].z=r;t[6].z=r;t[7].z=r;w[o]=u;o++}else w[o]=m,o++;for(k=0,q=w.length;k<q;k++){m=w[k];if(!m.shadowMap)m.shadowMap=new THREE.WebGLRenderTarget(m.shadowMapWidth,m.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,\r\n\tformat:THREE.RGBAFormat}),m.shadowMapSize=new THREE.Vector2(m.shadowMapWidth,m.shadowMapHeight),m.shadowMatrix=new THREE.Matrix4;if(!m.shadowCamera){if(m instanceof THREE.SpotLight)m.shadowCamera=new THREE.PerspectiveCamera(m.shadowCameraFov,m.shadowMapWidth/m.shadowMapHeight,m.shadowCameraNear,m.shadowCameraFar);else if(m instanceof THREE.DirectionalLight)m.shadowCamera=new THREE.OrthographicCamera(m.shadowCameraLeft,m.shadowCameraRight,m.shadowCameraTop,m.shadowCameraBottom,m.shadowCameraNear,m.shadowCameraFar);\r\n\telse{console.error(\"Unsupported light type for shadow\");continue}i.add(m.shadowCamera);b.autoUpdateScene&&i.updateMatrixWorld()}if(m.shadowCameraVisible&&!m.cameraHelper)m.cameraHelper=new THREE.CameraHelper(m.shadowCamera),m.shadowCamera.add(m.cameraHelper);if(m.isVirtual&&u.originalCamera==j){p=j;o=m.shadowCamera;n=m.pointsFrustum;t=m.pointsWorld;e.set(Infinity,Infinity,Infinity);h.set(-Infinity,-Infinity,-Infinity);for(r=0;8>r;r++){s=t[r];s.copy(n[r]);THREE.ShadowMapPlugin.__projector.unprojectVector(s,\r\n\tp);o.matrixWorldInverse.multiplyVector3(s);if(s.x<e.x)e.x=s.x;if(s.x>h.x)h.x=s.x;if(s.y<e.y)e.y=s.y;if(s.y>h.y)h.y=s.y;if(s.z<e.z)e.z=s.z;if(s.z>h.z)h.z=s.z}o.left=e.x;o.right=h.x;o.top=h.y;o.bottom=e.y;o.updateProjectionMatrix()}o=m.shadowMap;n=m.shadowMatrix;p=m.shadowCamera;p.position.copy(m.matrixWorld.getPosition());p.lookAt(m.target.matrixWorld.getPosition());p.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);if(m.cameraHelper)m.cameraHelper.lines.visible=m.shadowCameraVisible;\r\n\tm.shadowCameraVisible&&m.cameraHelper.update(m.shadowCamera);n.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);n.multiplySelf(p.projectionMatrix);n.multiplySelf(p.matrixWorldInverse);if(!p._viewMatrixArray)p._viewMatrixArray=new Float32Array(16);p.matrixWorldInverse.flattenToArray(p._viewMatrixArray);if(!p._projectionMatrixArray)p._projectionMatrixArray=new Float32Array(16);p.projectionMatrix.flattenToArray(p._projectionMatrixArray);g.multiply(p.projectionMatrix,p.matrixWorldInverse);f.setFromMatrix(g);\r\n\tb.setRenderTarget(o);b.clear();t=i.__webglObjects;for(m=0,o=t.length;m<o;m++)if(r=t[m],n=r.object,r.render=!1,n.visible&&n.castShadow&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||f.contains(n)))n.matrixWorld.flattenToArray(n._objectMatrixArray),n._modelViewMatrix.multiplyToArray(p.matrixWorldInverse,n.matrixWorld,n._modelViewMatrixArray),r.render=!0;for(m=0,o=t.length;m<o;m++)if(r=t[m],r.render)n=r.object,r=r.buffer,b.setObjectFaces(n),s=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?\r\n\td:c,r instanceof THREE.BufferGeometry?b.renderBufferDirect(p,i.__lights,null,s,r,n):b.renderBuffer(p,i.__lights,null,s,r,n);t=i.__webglObjectsImmediate;for(m=0,o=t.length;m<o;m++)r=t[m],n=r.object,n.visible&&n.castShadow&&(n.matrixAutoUpdate&&n.matrixWorld.flattenToArray(n._objectMatrixArray),n._modelViewMatrix.multiplyToArray(p.matrixWorldInverse,n.matrixWorld,n._modelViewMatrixArray),b.renderImmediateObject(p,i.__lights,null,c,n))}k=b.getClearColor();q=b.getClearAlpha();a.clearColor(k.r,k.g,k.b,\r\n\tq);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;\r\n\tTHREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,f,g,e,h,i,j,k;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);f=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=0;d[a++]=-1;d[a++]=1;d[a++]=0;a=d[a++]=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;g=b.createBuffer();e=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,\r\n\te);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),o=b.createShader(b.FRAGMENT_SHADER),p=b.createShader(b.VERTEX_SHADER);b.shaderSource(o,a.fragmentShader);b.shaderSource(p,a.vertexShader);b.compileShader(o);b.compileShader(p);b.attachShader(m,o);b.attachShader(m,p);b.linkProgram(m);h=m;i={};j={};i.position=b.getAttribLocation(h,\"position\");i.uv=b.getAttribLocation(h,\"uv\");j.uvOffset=b.getUniformLocation(h,\"uvOffset\");j.uvScale=b.getUniformLocation(h,\r\n\t\"uvScale\");j.rotation=b.getUniformLocation(h,\"rotation\");j.scale=b.getUniformLocation(h,\"scale\");j.alignment=b.getUniformLocation(h,\"alignment\");j.color=b.getUniformLocation(h,\"color\");j.map=b.getUniformLocation(h,\"map\");j.opacity=b.getUniformLocation(h,\"opacity\");j.useScreenCoordinates=b.getUniformLocation(h,\"useScreenCoordinates\");j.affectedByDistance=b.getUniformLocation(h,\"affectedByDistance\");j.screenPosition=b.getUniformLocation(h,\"screenPosition\");j.modelViewMatrix=b.getUniformLocation(h,\"modelViewMatrix\");\r\n\tj.projectionMatrix=b.getUniformLocation(h,\"projectionMatrix\");k=!1};this.render=function(d,f,o,p){var d=d.__webglSprites,n=d.length;if(n){var r=i,s=j,t=p/o,o=0.5*o,w=0.5*p,u=!0;b.useProgram(h);k||(b.enableVertexAttribArray(r.position),b.enableVertexAttribArray(r.uv),k=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(r.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(r.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.uniformMatrix4fv(s.projectionMatrix,\r\n\t!1,f._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(s.map,0);for(var v,A=[],r=0;r<n;r++)if(v=d[r],v.visible&&0!==v.opacity)v.useScreenCoordinates?v.z=-v.position.z:(v._modelViewMatrix.multiplyToArray(f.matrixWorldInverse,v.matrixWorld,v._modelViewMatrixArray),v.z=-v._modelViewMatrix.n34);d.sort(a);for(r=0;r<n;r++)v=d[r],v.visible&&0!==v.opacity&&v.map&&v.map.image&&v.map.image.width&&(v.useScreenCoordinates?(b.uniform1i(s.useScreenCoordinates,1),b.uniform3f(s.screenPosition,(v.position.x-\r\n\to)/o,(w-v.position.y)/w,Math.max(0,Math.min(1,v.position.z)))):(b.uniform1i(s.useScreenCoordinates,0),b.uniform1i(s.affectedByDistance,v.affectedByDistance?1:0),b.uniformMatrix4fv(s.modelViewMatrix,!1,v._modelViewMatrixArray)),f=v.map.image.width/(v.scaleByViewport?p:1),A[0]=f*t*v.scale.x,A[1]=f*v.scale.y,b.uniform2f(s.uvScale,v.uvScale.x,v.uvScale.y),b.uniform2f(s.uvOffset,v.uvOffset.x,v.uvOffset.y),b.uniform2f(s.alignment,v.alignment.x,v.alignment.y),b.uniform1f(s.opacity,v.opacity),b.uniform3f(s.color,\r\n\tv.color.r,v.color.g,v.color.b),b.uniform1f(s.rotation,v.rotation),b.uniform2fv(s.scale,A),v.mergeWith3D&&!u?(b.enable(b.DEPTH_TEST),u=!0):!v.mergeWith3D&&u&&(b.disable(b.DEPTH_TEST),u=!1),c.setBlending(v.blending),c.setTexture(v.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};\r\n\tif(THREE.WebGLRenderer)THREE.AnaglyphWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoUpdateScene=!1;var b=this,c=this.setSize,d=this.render,f=new THREE.PerspectiveCamera,g=new THREE.PerspectiveCamera,e=new THREE.Matrix4,h=new THREE.Matrix4,i,j,k,q;f.matrixAutoUpdate=g.matrixAutoUpdate=!1;var a={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},m=new THREE.WebGLRenderTarget(512,512,a),o=new THREE.WebGLRenderTarget(512,512,a),p=new THREE.PerspectiveCamera(53,\r\n\t1,1,1E4);p.position.z=2;var a=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:\"t\",value:0,texture:m},mapRight:{type:\"t\",value:1,texture:o}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\nvUv = vec2( uv.x, 1.0 - uv.y );\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform sampler2D mapLeft;\\nuniform sampler2D mapRight;\\nvarying vec2 vUv;\\nvoid main() {\\nvec4 colorL, colorR;\\nvec2 uv = vUv;\\ncolorL = texture2D( mapLeft, uv );\\ncolorR = texture2D( mapRight, uv );\\ngl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\\n}\"}),\r\n\tn=new THREE.Scene;n.add(new THREE.Mesh(new THREE.PlaneGeometry(2,2),a));n.add(p);this.setSize=function(a,d){c.call(b,a,d);m.width=a;m.height=d;o.width=a;o.height=d};this.render=function(a,c){a.updateMatrixWorld();if(i!==c.aspect||j!==c.near||k!==c.far||q!==c.fov){i=c.aspect;j=c.near;k=c.far;q=c.fov;var t=c.projectionMatrix.clone(),w=0.5*(125/30),u=w*j/125,v=j*Math.tan(q*Math.PI/360),A;e.n14=w;h.n14=-w;w=-v*i+u;A=v*i+u;t.n11=2*j/(A-w);t.n13=(A+w)/(A-w);f.projectionMatrix.copy(t);w=-v*i-u;A=v*i-u;t.n11=\r\n\t2*j/(A-w);t.n13=(A+w)/(A-w);g.projectionMatrix.copy(t)}f.matrixWorld.copy(c.matrixWorld).multiplySelf(h);f.position.copy(c.position);f.near=c.near;f.far=c.far;d.call(b,a,f,m,!0);g.matrixWorld.copy(c.matrixWorld).multiplySelf(e);g.position.copy(c.position);g.near=c.near;g.far=c.far;d.call(b,a,g,o,!0);n.updateMatrixWorld();d.call(b,n,p)}};\r\n\tif(THREE.WebGLRenderer)THREE.CrosseyedWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoClear=!1;var b=this,c=this.setSize,d=this.render,f,g,e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3(0,0,0);var h=new THREE.PerspectiveCamera;h.target=new THREE.Vector3(0,0,0);b.separation=10;if(a&&void 0!==a.separation)b.separation=a.separation;this.setSize=function(a,d){c.call(b,a,d);f=a/2;g=d};this.render=function(a,c){this.clear();e.fov=c.fov;e.aspect=0.5*c.aspect;e.near=c.near;e.far=\r\n\tc.far;e.updateProjectionMatrix();e.position.copy(c.position);e.target.copy(c.target);e.translateX(b.separation);e.lookAt(e.target);h.projectionMatrix=e.projectionMatrix;h.position.copy(c.position);h.target.copy(c.target);h.translateX(-b.separation);h.lookAt(h.target);this.setViewport(0,0,f,g);d.call(b,a,e);this.setViewport(f,0,f,g);d.call(b,a,h,!1)}};\r\n\tTHREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility = (       visibility.r / 9.0 ) *\\n( 1.0 - visibility.g / 9.0 ) *\\n(       visibility.b / 9.0 ) *\\n( 1.0 - visibility.a / 9.0 );\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\r\n\tlensFlare:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}};\r\n\tTHREE.ShaderSprite={sprite:{vertexShader:\"uniform int useScreenCoordinates;\\nuniform int affectedByDistance;\\nuniform vec3 screenPosition;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 alignment;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position + alignment;\\nvec2 rotatedPosition;\\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\\nvec4 finalPosition;\\nif( useScreenCoordinates != 0 ) {\\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\\n} else {\\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\\n}\\ngl_Position = finalPosition;\\n}\",\r\n\tfragmentShader:\"precision mediump float;\\nuniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\n}\"}};\r\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = THREE\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, require) {\n\n\tvar jade = require(1);\n\t\n\tmodule.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\n\tattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\n\tvar buf = [];\n\tvar self = locals || {};\n\tvar interp;\n\tbuf.push('<h1>three.js canvas - camera - orthographic example</h1><div class=\"three-container\"></div><h2>test1/index.js</h2><pre class=\"pre-scrollable\"><code>');\n\tvar __val__ = require(35)\n\tbuf.push(escape(null == __val__ ? \"\" : __val__));\n\tbuf.push('</code></pre><h2>test1/content.jade</h2><pre><code>');\n\tvar __val__ = require(32)\n\tbuf.push(escape(null == __val__ ? \"\" : __val__));\n\tbuf.push('</code></pre>');return buf.join(\"\");\n\t}\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, require) {\n\n\tmodule.exports = \"h1 three.js canvas - camera - orthographic example\\r\\n.three-container\\r\\nh2 test1/index.js\\r\\npre.pre-scrollable: code= require(\\\"!raw!./index.js\\\")\\r\\nh2 test1/content.jade\\r\\npre: code= require(\\\"!raw!./content.jade\\\")\"\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, require) {\n\n\tmodule.exports = \"exports.render = function() {\\r\\n\\treturn require(\\\"./content.jade\\\")();\\r\\n};\\r\\n\\r\\nexports.start = function() {\\r\\n\\tvar THREE = require(\\\"three\\\");\\r\\n\\trequire(\\\"jquery\\\");\\r\\n\\r\\n\\t// three.js canvas - camera - orthographic example\\r\\n\\r\\n\\tvar container, stats;\\r\\n\\tvar camera, scene, renderer;\\r\\n\\r\\n\\tinit();\\r\\n\\tanimate();\\r\\n\\r\\n\\tfunction init() {\\r\\n\\r\\n\\t\\tcamera = new THREE.OrthographicCamera( -400, 400, 400, -400, - 2000, 1000 );\\r\\n\\t\\tcamera.position.x = 200;\\r\\n\\t\\tcamera.position.y = 100;\\r\\n\\t\\tcamera.position.z = 200;\\r\\n\\r\\n\\t\\tscene = new THREE.Scene();\\r\\n\\r\\n\\t\\tscene.add( camera );\\r\\n\\r\\n\\t\\t// Grid\\r\\n\\r\\n\\t\\tvar geometry = new THREE.Geometry();\\r\\n\\t\\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( - 500, 0, 0 ) ) );\\r\\n\\t\\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 500, 0, 0 ) ) );\\r\\n\\r\\n\\t\\tfor ( var i = 0; i <= 20; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\\r\\n\\t\\t\\tline.position.z = ( i * 50 ) - 500;\\r\\n\\t\\t\\tscene.add( line );\\r\\n\\r\\n\\t\\t\\tline = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\\r\\n\\t\\t\\tline.position.x = ( i * 50 ) - 500;\\r\\n\\t\\t\\tline.rotation.y = 90 * Math.PI / 180;\\r\\n\\t\\t\\tscene.add( line );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Cubes\\r\\n\\r\\n\\t\\tgeometry = new THREE.CubeGeometry( 50, 50, 50 );\\r\\n\\t\\tvar material = new THREE.MeshLambertMaterial( { color: 0xffffff, shading: THREE.FlatShading, overdraw: true } );\\r\\n\\r\\n\\t\\tfor ( i = 0; i < 100; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar cube = new THREE.Mesh( geometry, material );\\r\\n\\r\\n\\t\\t\\tcube.scale.y = Math.floor( Math.random() * 2 + 1 );\\r\\n\\r\\n\\t\\t\\tcube.position.x = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\\r\\n\\t\\t\\tcube.position.y = ( cube.scale.y * 50 ) / 2;\\r\\n\\t\\t\\tcube.position.z = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\\r\\n\\r\\n\\t\\t\\tscene.add(cube);\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Lights\\r\\n\\r\\n\\t\\tvar ambientLight = new THREE.AmbientLight( Math.random() * 0x10 );\\r\\n\\t\\tscene.add( ambientLight );\\r\\n\\r\\n\\t\\tvar directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\\r\\n\\t\\tdirectionalLight.position.x = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.y = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.z = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.normalize();\\r\\n\\t\\tscene.add( directionalLight );\\r\\n\\r\\n\\t\\tdirectionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\\r\\n\\t\\tdirectionalLight.position.x = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.y = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.z = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.normalize();\\r\\n\\t\\tscene.add( directionalLight );\\r\\n\\r\\n\\t\\trenderer = new THREE.CanvasRenderer();\\r\\n\\t\\trenderer.setSize( 400, 400 );\\r\\n\\r\\n\\t\\t$(\\\".three-container\\\").append(renderer.domElement);\\r\\n\\t}\\r\\n\\r\\n\\tfunction animate() {\\r\\n\\t\\tif($(\\\".three-container\\\").length > 0) {\\r\\n\\t\\t\\trequestAnimationFrame( animate );\\r\\n\\t\\t\\trender();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction render() {\\r\\n\\t\\tvar timer = new Date().getTime() * 0.0001;\\r\\n\\r\\n\\t\\tcamera.position.x = Math.cos( timer ) * 200;\\r\\n\\t\\tcamera.position.z = Math.sin( timer ) * 200;\\r\\n\\t\\tcamera.lookAt( scene.position );\\r\\n\\r\\n\\t\\trenderer.render( scene, camera );\\r\\n\\t}\\r\\n};\"\n\n/***/ }\n\n}\n)","exports.render = function() {\r\n\treturn require(\"./content.jade\")();\r\n};\r\n\r\nexports.start = function() {\r\n\tvar THREE = require(\"three\");\r\n\trequire(\"jquery\");\r\n\r\n\t// three.js canvas - camera - orthographic example\r\n\r\n\tvar container, stats;\r\n\tvar camera, scene, renderer;\r\n\r\n\tinit();\r\n\tanimate();\r\n\r\n\tfunction init() {\r\n\r\n\t\tcamera = new THREE.OrthographicCamera( -400, 400, 400, -400, - 2000, 1000 );\r\n\t\tcamera.position.x = 200;\r\n\t\tcamera.position.y = 100;\r\n\t\tcamera.position.z = 200;\r\n\r\n\t\tscene = new THREE.Scene();\r\n\r\n\t\tscene.add( camera );\r\n\r\n\t\t// Grid\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( - 500, 0, 0 ) ) );\r\n\t\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 500, 0, 0 ) ) );\r\n\r\n\t\tfor ( var i = 0; i <= 20; i ++ ) {\r\n\r\n\t\t\tvar line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\r\n\t\t\tline.position.z = ( i * 50 ) - 500;\r\n\t\t\tscene.add( line );\r\n\r\n\t\t\tline = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\r\n\t\t\tline.position.x = ( i * 50 ) - 500;\r\n\t\t\tline.rotation.y = 90 * Math.PI / 180;\r\n\t\t\tscene.add( line );\r\n\r\n\t\t}\r\n\r\n\t\t// Cubes\r\n\r\n\t\tgeometry = new THREE.CubeGeometry( 50, 50, 50 );\r\n\t\tvar material = new THREE.MeshLambertMaterial( { color: 0xffffff, shading: THREE.FlatShading, overdraw: true } );\r\n\r\n\t\tfor ( i = 0; i < 100; i ++ ) {\r\n\r\n\t\t\tvar cube = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\tcube.scale.y = Math.floor( Math.random() * 2 + 1 );\r\n\r\n\t\t\tcube.position.x = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\r\n\t\t\tcube.position.y = ( cube.scale.y * 50 ) / 2;\r\n\t\t\tcube.position.z = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\r\n\r\n\t\t\tscene.add(cube);\r\n\r\n\t\t}\r\n\r\n\t\t// Lights\r\n\r\n\t\tvar ambientLight = new THREE.AmbientLight( Math.random() * 0x10 );\r\n\t\tscene.add( ambientLight );\r\n\r\n\t\tvar directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\r\n\t\tdirectionalLight.position.x = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.y = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.z = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.normalize();\r\n\t\tscene.add( directionalLight );\r\n\r\n\t\tdirectionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\r\n\t\tdirectionalLight.position.x = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.y = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.z = Math.random() - 0.5;\r\n\t\tdirectionalLight.position.normalize();\r\n\t\tscene.add( directionalLight );\r\n\r\n\t\trenderer = new THREE.CanvasRenderer();\r\n\t\trenderer.setSize( 400, 400 );\r\n\r\n\t\t$(\".three-container\").append(renderer.domElement);\r\n\t}\r\n\r\n\tfunction animate() {\r\n\t\tif($(\".three-container\").length > 0) {\r\n\t\t\trequestAnimationFrame( animate );\r\n\t\t\trender();\r\n\t\t}\r\n\t}\r\n\tfunction render() {\r\n\t\tvar timer = new Date().getTime() * 0.0001;\r\n\r\n\t\tcamera.position.x = Math.cos( timer ) * 200;\r\n\t\tcamera.position.z = Math.sin( timer ) * 200;\r\n\t\tcamera.lookAt( scene.position );\r\n\r\n\t\trenderer.render( scene, camera );\r\n\t}\r\n};","module.exports = require(\"exports?THREE!./Three.min.js\");","// Three.js - http://github.com/mrdoob/three.js\r\n'use strict';var THREE=THREE||{REVISION:\"48\"};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;\r\n(function(){for(var a=0,b=[\"ms\",\"moz\",\"webkit\",\"o\"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[b[c]+\"CancelAnimationFrame\"]||window[b[c]+\"CancelRequestAnimationFrame\"];if(!window.requestAnimationFrame)window.requestAnimationFrame=function(b){var c=(new Date).getTime(),g=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+g)},g);a=c+g;return e};if(!window.cancelAnimationFrame)window.cancelAnimationFrame=\r\nfunction(a){clearTimeout(a)}})();THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};\r\nTHREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};\r\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);\r\nthis.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,g;if(0===c)this.r=this.g=this.b=0;else switch(d=Math.floor(6*a),f=6*a-d,a=c*(1-b),g=c*(1-b*f),b=c*(1-b*(1-f)),d){case 1:this.r=g;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=g;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=g;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=\r\nMath.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return\"rgb(\"+Math.floor(255*this.r)+\",\"+Math.floor(255*this.g)+\",\"+Math.floor(255*this.b)+\")\"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\r\nTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},\r\ndivideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},\r\nlerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1.0E-4>this.lengthSq()}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\r\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},\r\naddScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},\r\ndivideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},\r\nlerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=\r\na.n14;this.y=a.n24;this.z=a.n34;return this},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1,f=b?b.z:1,g=a.n11/c,e=a.n12/d,c=a.n21/c,d=a.n22/d,h=a.n23/f,i=a.n33/f;this.y=Math.asin(a.n13/f);f=Math.cos(this.y);1.0E-5<Math.abs(f)?(this.x=Math.atan2(-h/f,i/f),this.z=Math.atan2(-e/f,g/f)):(this.x=0,this.z=Math.atan2(c,d));return this},getScaleFromMatrix:function(a){var b=this.set(a.n11,a.n21,a.n31).length(),c=this.set(a.n12,a.n22,a.n32).length(),a=this.set(a.n13,a.n23,a.n33).length();this.x=\r\nb;this.y=c;this.z=a},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1.0E-4>this.lengthSq()}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;\r\nthis.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},\r\nnormalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};\r\nTHREE.Frustum.prototype.setFromMatrix=function(a){var b,c=this.planes;c[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);c[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);c[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);c[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);c[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);c[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;6>a;a++)b=c[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))};\r\nTHREE.Frustum.prototype.contains=function(a){for(var b=this.planes,c=a.matrixWorld,d=THREE.Frustum.__v1.set(c.getColumnX().length(),c.getColumnY().length(),c.getColumnZ().length()),d=-a.geometry.boundingSphere.radius*Math.max(d.x,Math.max(d.y,d.z)),f=0;6>f;f++)if(a=b[f].x*c.n14+b[f].y*c.n24+b[f].z*c.n34+b[f].w,a<=d)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;\r\nTHREE.Ray=function(a,b){function c(a,b,c){p.sub(c,a);s=p.dot(b);t=n.add(a,r.copy(b).multiplyScalar(s));return w=c.distanceTo(t)}function d(a,b,c,d){p.sub(d,b);n.sub(c,b);r.sub(a,b);u=p.dot(p);v=p.dot(n);A=p.dot(r);F=n.dot(n);B=n.dot(r);D=1/(u*F-v*v);H=(F*A-v*B)*D;I=(u*B-v*A)*D;return 0<=H&&0<=I&&1>H+I}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;this.intersectObjects=function(a){var b,c,d=[];for(b=0,c=a.length;b<c;b++)Array.prototype.push.apply(d,this.intersectObject(a[b]));\r\nd.sort(function(a,b){return a.distance-b.distance});return d};var f=1.0E-4;this.setPrecision=function(a){f=a};var g=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,q=new THREE.Vector3,m=new THREE.Vector3,o=new THREE.Vector3;this.intersectObject=function(a){var b,n=[];if(a instanceof THREE.Particle){var p=c(this.origin,this.direction,a.matrixWorld.getPosition());if(p>a.scale.x)return[];b={distance:p,point:a.position,face:null,object:a};\r\nn.push(b)}else if(a instanceof THREE.Mesh){var p=c(this.origin,this.direction,a.matrixWorld.getPosition()),r=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),a.matrixWorld.getColumnZ().length());if(p>a.geometry.boundingSphere.radius*Math.max(r.x,Math.max(r.y,r.z)))return n;var s,l,t=a.geometry,u=t.vertices,E;a.matrixRotationWorld.extractRotation(a.matrixWorld);for(p=0,r=t.faces.length;p<r;p++)if(b=t.faces[p],j.copy(this.origin),k.copy(this.direction),\r\nE=a.matrixWorld,q=E.multiplyVector3(q.copy(b.centroid)).subSelf(j),m=a.matrixRotationWorld.multiplyVector3(m.copy(b.normal)),s=k.dot(m),!(Math.abs(s)<f)&&(l=m.dot(q)/s,!(0>l)&&(a.doubleSided||(a.flipSided?0<s:0>s))))if(o.add(j,k.multiplyScalar(l)),b instanceof THREE.Face3)g=E.multiplyVector3(g.copy(u[b.a].position)),e=E.multiplyVector3(e.copy(u[b.b].position)),h=E.multiplyVector3(h.copy(u[b.c].position)),d(o,g,e,h)&&(b={distance:j.distanceTo(o),point:o.clone(),face:b,object:a},n.push(b));else if(b instanceof\r\nTHREE.Face4&&(g=E.multiplyVector3(g.copy(u[b.a].position)),e=E.multiplyVector3(e.copy(u[b.b].position)),h=E.multiplyVector3(h.copy(u[b.c].position)),i=E.multiplyVector3(i.copy(u[b.d].position)),d(o,g,e,i)||d(o,e,h,i)))b={distance:j.distanceTo(o),point:o.clone(),face:b,object:a},n.push(b)}return n};var p=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3,s,t,w,u,v,A,F,B,D,H,I};\r\nTHREE.Rectangle=function(){function a(){g=d-b;e=f-c}var b,c,d,f,g,e,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return e};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(g,e,k,q){h=!1;b=g;c=e;d=k;f=q;a()};this.addPoint=function(g,e){h?(h=!1,b=g,c=e,d=g,f=e):(b=b<g?b:g,c=c<e?c:e,d=d>g?d:g,f=f>e?f:e);a()};this.add3Points=\r\nfunction(g,e,k,q,m,o){h?(h=!1,b=g<k?g<m?g:m:k<m?k:m,c=e<q?e<o?e:o:q<o?q:o,d=g>k?g>m?g:m:k>m?k:m,f=e>q?e>o?e:o:q>o?q:o):(b=g<k?g<m?g<b?g:b:m<b?m:b:k<m?k<b?k:b:m<b?m:b,c=e<q?e<o?e<c?e:c:o<c?o:c:q<o?q<c?q:c:o<c?o:c,d=g>k?g>m?g>d?g:d:m>d?m:d:k>m?k>d?k:d:m>d?m:d,f=e>q?e>o?e>f?e:f:o>f?o:f:q>o?q>f?q:f:o>f?o:f);a()};this.addRectangle=function(g){h?(h=!1,b=g.getLeft(),c=g.getTop(),d=g.getRight(),f=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),c=c<g.getTop()?c:g.getTop(),d=d>g.getRight()?d:g.getRight(),f=f>\r\ng.getBottom()?f:g.getBottom());a()};this.inflate=function(g){b-=g;c-=g;d+=g;f+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();c=c>g.getTop()?c:g.getTop();d=d<g.getRight()?d:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;f=d=c=b=0;a()};this.isEmpty=function(){return h}};\r\nTHREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};THREE.Matrix3=function(){this.m=[]};\r\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,g,e,h,i,j,k,q,m,o,p,n){this.set(void 0!==a?a:1,b||0,c||0,d||0,f||0,void 0!==g?g:1,e||0,h||0,i||0,j||0,void 0!==k?k:1,q||0,m||0,o||0,p||0,void 0!==n?n:1);this.m33=new THREE.Matrix3};\r\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,g,e,h,i,j,k,q,m,o,p,n){this.n11=a;this.n12=b;this.n13=c;this.n14=d;this.n21=f;this.n22=g;this.n23=e;this.n24=h;this.n31=i;this.n32=j;this.n33=k;this.n34=q;this.n41=m;this.n42=o;this.n43=p;this.n44=n;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,\r\nb,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(0===g.length())g.z=1;d.cross(c,g).normalize();0===d.length()&&(g.x+=1.0E-4,d.cross(c,g).normalize());f.cross(g,d);this.n11=d.x;this.n12=f.x;this.n13=g.x;this.n21=d.y;this.n22=f.y;this.n23=g.y;this.n31=d.z;this.n32=f.z;this.n33=g.z;return this},multiply:function(a,b){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,e=a.n21,h=a.n22,i=a.n23,j=a.n24,k=a.n31,q=a.n32,m=a.n33,o=a.n34,p=a.n41,n=a.n42,r=a.n43,s=a.n44,t=b.n11,\r\nw=b.n12,u=b.n13,v=b.n14,A=b.n21,F=b.n22,B=b.n23,D=b.n24,H=b.n31,I=b.n32,Q=b.n33,P=b.n34,L=b.n41,K=b.n42,O=b.n43,y=b.n44;this.n11=c*t+d*A+f*H+g*L;this.n12=c*w+d*F+f*I+g*K;this.n13=c*u+d*B+f*Q+g*O;this.n14=c*v+d*D+f*P+g*y;this.n21=e*t+h*A+i*H+j*L;this.n22=e*w+h*F+i*I+j*K;this.n23=e*u+h*B+i*Q+j*O;this.n24=e*v+h*D+i*P+j*y;this.n31=k*t+q*A+m*H+o*L;this.n32=k*w+q*F+m*I+o*K;this.n33=k*u+q*B+m*Q+o*O;this.n34=k*v+q*D+m*P+o*y;this.n41=p*t+n*A+r*H+s*L;this.n42=p*w+n*F+r*I+s*K;this.n43=p*u+n*B+r*Q+s*O;this.n44=\r\np*v+n*D+r*P+s*y;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;\r\nthis.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,d=a.z,f=1/(this.n41*b+this.n42*c+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*d+this.n14)*f;a.y=(this.n21*b+this.n22*c+this.n23*d+this.n24)*f;a.z=(this.n31*b+this.n32*c+this.n33*d+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,c=a.y,d=a.z,f=a.w;a.x=this.n11*b+this.n12*c+this.n13*d+this.n14*f;a.y=this.n21*b+this.n22*c+this.n23*\r\nd+this.n24*f;a.z=this.n31*b+this.n32*c+this.n33*d+this.n34*f;a.w=this.n41*b+this.n42*c+this.n43*d+this.n44*f;return a},rotateAxis:function(a){var b=a.x,c=a.y,d=a.z;a.x=b*this.n11+c*this.n12+d*this.n13;a.y=b*this.n21+c*this.n22+d*this.n23;a.z=b*this.n31+c*this.n32+d*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+\r\nthis.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,d=this.n14,f=this.n21,g=this.n22,e=this.n23,h=this.n24,i=this.n31,j=this.n32,k=this.n33,q=this.n34,m=this.n41,o=this.n42,p=this.n43,n=this.n44;return d*e*j*m-c*h*j*m-d*g*k*m+b*h*k*m+c*g*q*m-b*e*q*m-d*e*i*o+c*h*i*o+d*f*k*o-a*h*k*o-c*f*q*o+a*e*q*o+d*g*i*p-b*h*i*p-d*f*j*p+a*h*j*p+b*f*q*p-a*g*q*p-c*g*i*n+b*e*i*n+c*f*j*n-a*e*j*n-b*f*k*n+a*g*k*n},transpose:function(){var a;\r\na=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n34=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;\r\na.n43=this.n43;a.n44=this.n44;return a},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+\r\n10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=\r\nMath.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,g=a.x,e=a.y,h=a.z,i=f*g,j=f*e;this.set(i*g+c,i*e-d*h,i*h+d*e,0,i*e+d*h,j*e+c,j*h-d*g,0,i*h-d*e,j*h+d*g,f*h*h+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,\r\nthis.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,d=a.n13,f=a.n14,g=a.n21,e=a.n22,h=a.n23,i=a.n24,j=a.n31,k=a.n32,q=a.n33,m=a.n34,o=a.n41,p=a.n42,n=a.n43,r=a.n44;this.n11=h*m*p-i*q*p+i*k*n-e*m*n-h*k*r+e*q*r;this.n12=f*q*p-d*m*p-f*k*n+c*m*n+d*k*r-c*q*r;this.n13=d*i*p-f*h*p+f*e*n-c*i*n-d*e*r+c*h*r;this.n14=f*h*k-d*i*k-f*e*q+c*\r\ni*q+d*e*m-c*h*m;this.n21=i*q*o-h*m*o-i*j*n+g*m*n+h*j*r-g*q*r;this.n22=d*m*o-f*q*o+f*j*n-b*m*n-d*j*r+b*q*r;this.n23=f*h*o-d*i*o-f*g*n+b*i*n+d*g*r-b*h*r;this.n24=d*i*j-f*h*j+f*g*q-b*i*q-d*g*m+b*h*m;this.n31=e*m*o-i*k*o+i*j*p-g*m*p-e*j*r+g*k*r;this.n32=f*k*o-c*m*o-f*j*p+b*m*p+c*j*r-b*k*r;this.n33=c*i*o-f*e*o+f*g*p-b*i*p-c*g*r+b*e*r;this.n34=f*e*j-c*i*j-f*g*k+b*i*k+c*g*m-b*e*m;this.n41=h*k*o-e*q*o-h*j*p+g*q*p+e*j*n-g*k*n;this.n42=c*q*o-d*k*o+d*j*p-b*q*p-c*j*n+b*k*n;this.n43=d*e*o-c*h*o-d*g*p+b*h*p+c*\r\ng*n-b*e*n;this.n44=c*h*j-d*e*j+d*g*k-b*h*k-c*g*q+b*e*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=a.x,d=a.y,f=a.z,g=Math.cos(c),c=Math.sin(c),e=Math.cos(d),d=Math.sin(d),h=Math.cos(f),f=Math.sin(f);switch(b){case \"YXZ\":var i=e*h,j=e*f,k=d*h,q=d*f;this.n11=i+q*c;this.n12=k*c-j;this.n13=g*d;this.n21=g*f;this.n22=g*h;this.n23=-c;this.n31=j*c-k;this.n32=q+i*c;this.n33=g*e;break;case \"ZXY\":i=e*h;j=e*f;k=d*h;q=d*f;this.n11=i-q*c;this.n12=-g*f;this.n13=k+\r\nj*c;this.n21=j+k*c;this.n22=g*h;this.n23=q-i*c;this.n31=-g*d;this.n32=c;this.n33=g*e;break;case \"ZYX\":i=g*h;j=g*f;k=c*h;q=c*f;this.n11=e*h;this.n12=k*d-j;this.n13=i*d+q;this.n21=e*f;this.n22=q*d+i;this.n23=j*d-k;this.n31=-d;this.n32=c*e;this.n33=g*e;break;case \"YZX\":i=g*e;j=g*d;k=c*e;q=c*d;this.n11=e*h;this.n12=q-i*f;this.n13=k*f+j;this.n21=f;this.n22=g*h;this.n23=-c*h;this.n31=-d*h;this.n32=j*f+k;this.n33=i-q*f;break;case \"XZY\":i=g*e;j=g*d;k=c*e;q=c*d;this.n11=e*h;this.n12=-f;this.n13=d*h;this.n21=\r\ni*f+q;this.n22=g*h;this.n23=j*f-k;this.n31=k*f-j;this.n32=c*h;this.n33=q*f+i;break;default:i=g*h,j=g*f,k=c*h,q=c*f,this.n11=e*h,this.n12=-e*f,this.n13=d,this.n21=j+k*d,this.n22=i-q*d,this.n23=-c*e,this.n31=q-i*d,this.n32=k+j*d,this.n33=g*e}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,d=a.z,f=a.w,g=b+b,e=c+c,h=d+d,a=b*g,i=b*e,b=b*h,j=c*e,c=c*h,d=d*h,g=f*g,e=f*e,f=f*h;this.n11=1-(j+d);this.n12=i-f;this.n13=b+e;this.n21=i+f;this.n22=1-(a+d);this.n23=c-g;this.n31=b-e;this.n32=c+\r\ng;this.n33=1-(a+j);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var d=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;d.identity();d.setRotationFromQuaternion(b);f.setScale(c.x,c.y,c.z);this.multiply(d,f);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,\r\ng=THREE.Matrix4.__v3;d.set(this.n11,this.n21,this.n31);f.set(this.n12,this.n22,this.n32);g.set(this.n13,this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=d.length();c.y=f.length();c.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;d=THREE.Matrix4.__m1;d.copy(this);d.n11/=c.x;d.n21/=c.x;d.n31/=c.x;d.n12/=c.y;d.n22/=c.y;d.n32/=c.y;d.n13/=c.z;d.n23/=c.z;d.n33/=c.z;b.setFromRotationMatrix(d);\r\nreturn[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),d=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*d;this.n22=a.n22*d;this.n32=a.n32*d;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this},rotateByAxis:function(a,b){if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);\r\nif(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var c=a.x,d=a.y,f=a.z,g=Math.sqrt(c*c+d*d+f*f),c=c/g,d=d/g,f=f/g,g=c*c,e=d*d,h=f*f,i=Math.cos(b),j=Math.sin(b),k=1-i,q=c*d*k,m=c*f*k,k=d*f*k,c=c*j,o=d*j,j=f*j,f=g+(1-g)*i,g=q+j,d=m-o,q=q-j,e=e+(1-e)*i,j=k+c,m=m+o,k=k-c,h=h+(1-h)*i,i=this.n11,c=this.n21,o=this.n31,p=this.n41,n=this.n12,r=this.n22,s=this.n32,t=this.n42,w=this.n13,u=this.n23,v=this.n33,A=this.n43;this.n11=f*i+g*n+d*w;this.n21=f*c+\r\ng*r+d*u;this.n31=f*o+g*s+d*v;this.n41=f*p+g*t+d*A;this.n12=q*i+e*n+j*w;this.n22=q*c+e*r+j*u;this.n32=q*o+e*s+j*v;this.n42=q*p+e*t+j*A;this.n13=m*i+k*n+h*w;this.n23=m*c+k*r+h*u;this.n33=m*o+k*s+h*v;this.n43=m*p+k*t+h*A;return this},rotateX:function(a){var b=this.n12,c=this.n22,d=this.n32,f=this.n42,g=this.n13,e=this.n23,h=this.n33,i=this.n43,j=Math.cos(a),a=Math.sin(a);this.n12=j*b+a*g;this.n22=j*c+a*e;this.n32=j*d+a*h;this.n42=j*f+a*i;this.n13=j*g-a*b;this.n23=j*e-a*c;this.n33=j*h-a*d;this.n43=j*\r\ni-a*f;return this},rotateY:function(a){var b=this.n11,c=this.n21,d=this.n31,f=this.n41,g=this.n13,e=this.n23,h=this.n33,i=this.n43,j=Math.cos(a),a=Math.sin(a);this.n11=j*b-a*g;this.n21=j*c-a*e;this.n31=j*d-a*h;this.n41=j*f-a*i;this.n13=j*g+a*b;this.n23=j*e+a*c;this.n33=j*h+a*d;this.n43=j*i+a*f;return this},rotateZ:function(a){var b=this.n11,c=this.n21,d=this.n31,f=this.n41,g=this.n12,e=this.n22,h=this.n32,i=this.n42,j=Math.cos(a),a=Math.sin(a);this.n11=j*b+a*g;this.n21=j*c+a*e;this.n31=j*d+a*h;this.n41=\r\nj*f+a*i;this.n12=j*g-a*b;this.n22=j*e-a*c;this.n32=j*h-a*d;this.n42=j*i-a*f;return this},translate:function(a){var b=a.x,c=a.y,a=a.z;this.n14=this.n11*b+this.n12*c+this.n13*a+this.n14;this.n24=this.n21*b+this.n22*c+this.n23*a+this.n24;this.n34=this.n31*b+this.n32*c+this.n33*a+this.n34;this.n44=this.n41*b+this.n42*c+this.n43*a+this.n44;return this}};\r\nTHREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,d=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,e=-a.n33*a.n12+a.n32*a.n13,h=a.n33*a.n11-a.n31*a.n13,i=-a.n32*a.n11+a.n31*a.n12,j=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,q=a.n22*a.n11-a.n21*a.n12,a=a.n11*d+a.n21*e+a.n31*j;if(0===a)return null;a=1/a;c[0]=a*d;c[1]=a*f;c[2]=a*g;c[3]=a*e;c[4]=a*h;c[5]=a*i;c[6]=a*j;c[7]=a*k;c[8]=a*q;return b};\r\nTHREE.Matrix4.makeFrustum=function(a,b,c,d,f,g){var e;e=new THREE.Matrix4;e.n11=2*f/(b-a);e.n12=0;e.n13=(b+a)/(b-a);e.n14=0;e.n21=0;e.n22=2*f/(d-c);e.n23=(d+c)/(d-c);e.n24=0;e.n31=0;e.n32=0;e.n33=-(g+f)/(g-f);e.n34=-2*g*f/(g-f);e.n41=0;e.n42=0;e.n43=-1;e.n44=0;return e};THREE.Matrix4.makePerspective=function(a,b,c,d){var f,a=c*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,c,d)};\r\nTHREE.Matrix4.makeOrtho=function(a,b,c,d,f,g){var e,h,i,j;e=new THREE.Matrix4;h=b-a;i=c-d;j=g-f;e.n11=2/h;e.n12=0;e.n13=0;e.n14=-((b+a)/h);e.n21=0;e.n22=2/i;e.n23=0;e.n24=-((c+d)/i);e.n31=0;e.n32=0;e.n33=-2/j;e.n34=-((g+f)/j);e.n41=0;e.n42=0;e.n43=0;e.n44=1;return e};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;\r\nTHREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name=\"\";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=\"XYZ\";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=\r\n!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};\r\nTHREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);this.rotation.getRotationFromMatrix(this.matrix,this.scale);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,\r\nthis._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn(\"THREE.Object3D.add: An object can't be added as a child of itself.\");else if(-1===this.children.indexOf(a)){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=\r\nthis.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,f;for(c=0,d=this.children.length;c<d;c++){f=this.children[c];if(f.name===a||b&&(f=f.getChildByName(a,b),void 0!==f))return f}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,\r\nthis.eulerOrder);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<\r\nc;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;\r\nTHREE.Projector=function(){function a(){var a=e[g]=e[g]||new THREE.RenderableObject;g++;return a}function b(){var a=j[i]=j[i]||new THREE.RenderableVertex;i++;return a}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,g=b.z+b.w,e=-a.z+a.w,h=-b.z+b.w;if(0<=f&&0<=g&&0<=e&&0<=h)return!0;if(0>f&&0>g||0>e&&0>h)return!1;0>f?c=Math.max(c,f/(f-g)):0>g&&(d=Math.min(d,f/(f-g)));0>e?c=Math.max(c,e/(e-h)):0>h&&(d=Math.min(d,e/(e-h)));if(d<c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}\r\nvar f,g,e=[],h,i,j=[],k,q,m=[],o,p=[],n,r,s=[],t,w,u=[],v={objects:[],sprites:[],lights:[],elements:[]},A=new THREE.Vector3,F=new THREE.Vector4,B=new THREE.Matrix4,D=new THREE.Matrix4,H=new THREE.Frustum,I=new THREE.Vector4,Q=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);B.multiply(b.projectionMatrix,b.matrixWorldInverse);B.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);B.multiply(b.matrixWorld,\r\nb.projectionMatrixInverse);B.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,d){g=0;v.objects.length=0;v.sprites.length=0;v.lights.length=0;var e=function(b){if(!1!==b.visible){(b instanceof THREE.Mesh||b instanceof THREE.Line)&&(!1===b.frustumCulled||H.contains(b))?(B.multiplyVector3(A.copy(b.position)),f=a(),f.object=\r\nb,f.z=A.z,v.objects.push(f)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(B.multiplyVector3(A.copy(b.position)),f=a(),f.object=b,f.z=A.z,v.sprites.push(f)):b instanceof THREE.Light&&v.lights.push(b);for(var c=0,d=b.children.length;c<d;c++)e(b.children[c])}};e(b);d&&v.objects.sort(c);return v};this.projectScene=function(a,f,g){var e=f.near,y=f.far,l=!1,A,C,E,S,R,ca,ka,ia,N,aa,U,ba,ea,Ta,Ja;w=r=o=q=0;v.elements.length=0;void 0===f.parent&&(console.warn(\"DEPRECATED: Camera hasn't been added to a Scene. Adding it...\"),\r\na.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);B.multiply(f.projectionMatrix,f.matrixWorldInverse);H.setFromMatrix(B);v=this.projectGraph(a,!1);for(a=0,A=v.objects.length;a<A;a++)if(N=v.objects[a].object,aa=N.matrixWorld,i=0,N instanceof THREE.Mesh){U=N.geometry;ba=N.geometry.materials;S=U.vertices;ea=U.faces;Ta=U.faceVertexUvs;U=N.matrixRotationWorld.extractRotation(aa);for(C=0,E=S.length;C<E;C++)h=b(),h.positionWorld.copy(S[C].position),aa.multiplyVector3(h.positionWorld),\r\nh.positionScreen.copy(h.positionWorld),B.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>e&&h.positionScreen.z<y;for(S=0,C=ea.length;S<C;S++){E=ea[S];if(E instanceof THREE.Face3)if(R=j[E.a],ca=j[E.b],ka=j[E.c],R.visible&&ca.visible&&ka.visible)if(l=0>(ka.positionScreen.x-R.positionScreen.x)*(ca.positionScreen.y-R.positionScreen.y)-(ka.positionScreen.y-R.positionScreen.y)*(ca.positionScreen.x-R.positionScreen.x),\r\nN.doubleSided||l!=N.flipSided)ia=m[q]=m[q]||new THREE.RenderableFace3,q++,k=ia,k.v1.copy(R),k.v2.copy(ca),k.v3.copy(ka);else continue;else continue;else if(E instanceof THREE.Face4)if(R=j[E.a],ca=j[E.b],ka=j[E.c],ia=j[E.d],R.visible&&ca.visible&&ka.visible&&ia.visible)if(l=0>(ia.positionScreen.x-R.positionScreen.x)*(ca.positionScreen.y-R.positionScreen.y)-(ia.positionScreen.y-R.positionScreen.y)*(ca.positionScreen.x-R.positionScreen.x)||0>(ca.positionScreen.x-ka.positionScreen.x)*(ia.positionScreen.y-\r\nka.positionScreen.y)-(ca.positionScreen.y-ka.positionScreen.y)*(ia.positionScreen.x-ka.positionScreen.x),N.doubleSided||l!=N.flipSided)Ja=p[o]=p[o]||new THREE.RenderableFace4,o++,k=Ja,k.v1.copy(R),k.v2.copy(ca),k.v3.copy(ka),k.v4.copy(ia);else continue;else continue;k.normalWorld.copy(E.normal);!l&&(N.flipSided||N.doubleSided)&&k.normalWorld.negate();U.multiplyVector3(k.normalWorld);k.centroidWorld.copy(E.centroid);aa.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);B.multiplyVector3(k.centroidScreen);\r\nka=E.vertexNormals;for(R=0,ca=ka.length;R<ca;R++)ia=k.vertexNormalsWorld[R],ia.copy(ka[R]),!l&&(N.flipSided||N.doubleSided)&&ia.negate(),U.multiplyVector3(ia);for(R=0,ca=Ta.length;R<ca;R++)if(Ja=Ta[R][S])for(ka=0,ia=Ja.length;ka<ia;ka++)k.uvs[R][ka]=Ja[ka];k.material=N.material;k.faceMaterial=null!==E.materialIndex?ba[E.materialIndex]:null;k.z=k.centroidScreen.z;v.elements.push(k)}}else if(N instanceof THREE.Line){D.multiply(B,aa);S=N.geometry.vertices;R=b();R.positionScreen.copy(S[0].position);D.multiplyVector4(R.positionScreen);\r\nfor(C=1,E=S.length;C<E;C++)if(R=b(),R.positionScreen.copy(S[C].position),D.multiplyVector4(R.positionScreen),ca=j[i-2],I.copy(R.positionScreen),Q.copy(ca.positionScreen),d(I,Q))I.multiplyScalar(1/I.w),Q.multiplyScalar(1/Q.w),aa=s[r]=s[r]||new THREE.RenderableLine,r++,n=aa,n.v1.positionScreen.copy(I),n.v2.positionScreen.copy(Q),n.z=Math.max(I.z,Q.z),n.material=N.material,v.elements.push(n)}for(a=0,A=v.sprites.length;a<A;a++)if(N=v.sprites[a].object,aa=N.matrixWorld,N instanceof THREE.Particle&&(F.set(aa.n14,\r\naa.n24,aa.n34,1),B.multiplyVector4(F),F.z/=F.w,0<F.z&&1>F.z))e=u[w]=u[w]||new THREE.RenderableParticle,w++,t=e,t.x=F.x/F.w,t.y=F.y/F.w,t.z=F.z,t.rotation=N.rotation.z,t.scale.x=N.scale.x*Math.abs(t.x-(F.x+f.projectionMatrix.n11)/(F.w+f.projectionMatrix.n14)),t.scale.y=N.scale.y*Math.abs(t.y-(F.y+f.projectionMatrix.n22)/(F.w+f.projectionMatrix.n24)),t.material=N.material,v.elements.push(t);g&&v.elements.sort(c);return v}};\r\nTHREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,f=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-f),f=Math.sin(-f),g=Math.cos(c),c=Math.sin(c),e=a*b,h=d*f;this.w=e*g-h*c;this.x=e*c+h*g;this.y=d*b*g+a*f*c;this.z=a*f*\r\ng-d*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=0>a.n32-a.n23?-Math.abs(this.x):Math.abs(this.x);this.y=0>a.n13-a.n31?\r\n-Math.abs(this.y):Math.abs(this.y);this.z=0>a.n21-a.n12?-Math.abs(this.z):Math.abs(this.z);this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=\r\nthis.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,g=a.x,e=a.y,h=a.z,a=a.w;this.x=b*a+f*g+c*h-d*e;this.y=c*a+f*e+d*g-b*h;this.z=d*a+f*h+b*e-c*g;this.w=f*a-b*g-c*e-d*h;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=\r\na);var c=a.x,d=a.y,f=a.z,g=this.x,e=this.y,h=this.z,i=this.w,j=i*c+e*f-h*d,k=i*d+h*c-g*f,q=i*f+g*d-e*c,c=-g*c-e*d-h*f;b.x=j*i+c*-g+k*-h-q*-e;b.y=k*i+c*-e+q*-g-j*-h;b.z=q*i+c*-h+j*-e-k*-g;return b}};\r\nTHREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>f?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(1<=Math.abs(f))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var g=Math.acos(f),f=Math.sqrt(1-f*f);if(0.001>Math.abs(f))return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-d)*g)/f;d=Math.sin(d*g)/f;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};\r\nTHREE.Vertex.prototype={constructor:THREE.Vertex,clone:function(){return new THREE.Vertex(this.position.clone())}};THREE.Face3=function(a,b,c,d,f,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};\r\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\nreturn a}};THREE.Face4=function(a,b,c,d,f,g,e){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};\r\nTHREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\nreturn a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};\r\nTHREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};\r\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var g=0,e=f.vertexNormals.length;g<e;g++)b.multiplyVector3(f.vertexNormals[g]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,\r\n0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,f,g,e=new THREE.Vector3,\r\nh=new THREE.Vector3;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],e.sub(g.position,f.position),h.sub(d.position,f.position),e.crossSelf(h),e.isZero()||e.normalize(),c.normal.copy(e)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);for(a=0,b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;for(a=0,b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof\r\nTHREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{d=this.__tmpVertices;for(a=0,b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),\r\nd[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));for(a=0,b=this.vertices.length;a<b;a++)d[a].normalize();for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,f;for(c=0,d=this.faces.length;c<\r\nd;c++){f=this.faces[c];f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone();if(!f.__originalVertexNormals)f.__originalVertexNormals=[];for(a=0,b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var g=new THREE.Geometry;g.faces=this.faces;for(a=0,b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};\r\nthis.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var e=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,j;for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],i=new THREE.Vector3,j=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},e.push(i),h.push(j)}e=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;g.computeFaceNormals();\r\ng.computeVertexNormals();for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],i=e.faceNormals[c],j=e.vertexNormals[c],i.copy(f.normal),f instanceof THREE.Face3?(j.a.copy(f.vertexNormals[0]),j.b.copy(f.vertexNormals[1]),j.c.copy(f.vertexNormals[2])):(j.a.copy(f.vertexNormals[0]),j.b.copy(f.vertexNormals[1]),j.c.copy(f.vertexNormals[2]),j.d.copy(f.vertexNormals[3]))}for(c=0,d=this.faces.length;c<d;c++)f=this.faces[c],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function a(a,\r\nb,c,d,f,g,R){h=a.vertices[b].position;i=a.vertices[c].position;j=a.vertices[d].position;k=e[f];q=e[g];m=e[R];o=i.x-h.x;p=j.x-h.x;n=i.y-h.y;r=j.y-h.y;s=i.z-h.z;t=j.z-h.z;w=q.u-k.u;u=m.u-k.u;v=q.v-k.v;A=m.v-k.v;F=1/(w*A-u*v);I.set((A*o-v*p)*F,(A*n-v*r)*F,(A*s-v*t)*F);Q.set((w*p-u*o)*F,(w*r-u*n)*F,(w*t-u*s)*F);D[b].addSelf(I);D[c].addSelf(I);D[d].addSelf(I);H[b].addSelf(Q);H[c].addSelf(Q);H[d].addSelf(Q)}var b,c,d,f,g,e,h,i,j,k,q,m,o,p,n,r,s,t,w,u,v,A,F,B,D=[],H=[],I=new THREE.Vector3,Q=new THREE.Vector3,\r\nP=new THREE.Vector3,L=new THREE.Vector3,K=new THREE.Vector3;for(b=0,c=this.vertices.length;b<c;b++)D[b]=new THREE.Vector3,H[b]=new THREE.Vector3;for(b=0,c=this.faces.length;b<c;b++)g=this.faces[b],e=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,g.b,g.d,0,1,3));var O=[\"a\",\"b\",\"c\",\"d\"];for(b=0,c=this.faces.length;b<c;b++){g=this.faces[b];for(d=0;d<g.vertexNormals.length;d++)K.copy(g.vertexNormals[d]),f=g[O[d]],\r\nB=D[f],P.copy(B),P.subSelf(K.multiplyScalar(K.dot(B))).normalize(),L.cross(g.vertexNormals[d],B),f=L.dot(H[f]),f=0>f?-1:1,g.vertexTangents[d]=new THREE.Vector4(P.x,P.y,P.z,f)}this.hasTangents=!0},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3};if(0<this.vertices.length){var a;a=this.vertices[0].position;this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<\r\nf;d++){a=this.vertices[d].position;if(a.x<b.x)b.x=a.x;else if(a.x>c.x)c.x=a.x;if(a.y<b.y)b.y=a.y;else if(a.y>c.y)c.y=a.y;if(a.z<b.z)b.z=a.z;else if(a.z>c.z)c.z=a.z}}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){if(!this.boundingSphere)this.boundingSphere={radius:0};for(var a,b=0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c].position.length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,\r\n4),g,e;for(g=0,e=this.vertices.length;g<e;g++)d=this.vertices[g].position,d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join(\"_\"),void 0===a[d]?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];for(g=0,e=this.faces.length;g<e;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;\r\nTHREE.Spline=function(a){function b(a,b,c,d,f,g,e){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*e+(-3*(b-c)-2*a-d)*g+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,g,e,h,i,j,k,q,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);e=f-g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>this.points.length-2?g:g+1;c[3]=g>this.points.length-3?g:g+2;j=this.points[c[0]];k=this.points[c[1]];\r\nq=this.points[c[2]];m=this.points[c[3]];h=e*e;i=e*h;d.x=b(j.x,k.x,q.x,m.x,e,h,i);d.y=b(j.y,k.y,q.y,m.y,e,h,i);d.z=b(j.z,k.z,q.z,m.z,e,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=b=b=0,g=new THREE.Vector3,e=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,d=this.getPoint(b),e.copy(d),i+=e.distanceTo(g),\r\ng.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(h[b]=i,f=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,f,g,e,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];e=Math.ceil(a*c/j.total);f=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<e-1;c++)d=f+c*(1/e)*(g-f),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=\r\nh}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)};\r\nTHREE.OrthographicCamera=function(a,b,c,d,f,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==g?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};\r\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};\r\nTHREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=g;this.updateProjectionMatrix()};\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,\r\nthis.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;\r\nTHREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=\r\n!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\r\nTHREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;\r\nTHREE.SpotLight=function(a,b,c,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.castShadow=void 0!==d?d:!1;this.onlyShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};\r\nTHREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;\r\nTHREE.Material=function(a){a=a||{};this.id=THREE.MaterialCount++;this.name=\"\";this.opacity=void 0!==a.opacity?a.opacity:1;this.transparent=void 0!==a.transparent?a.transparent:!1;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.depthTest=void 0!==a.depthTest?a.depthTest:!0;this.depthWrite=void 0!==a.depthWrite?a.depthWrite:!0;this.polygonOffset=void 0!==a.polygonOffset?a.polygonOffset:!1;this.polygonOffsetFactor=void 0!==a.polygonOffsetFactor?a.polygonOffsetFactor:0;this.polygonOffsetUnits=\r\nvoid 0!==a.polygonOffsetUnits?a.polygonOffsetUnits:0;this.alphaTest=void 0!==a.alphaTest?a.alphaTest:0;this.overdraw=void 0!==a.overdraw?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.AdditiveAlphaBlending=5;\r\nTHREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=void 0!==a.linewidth?a.linewidth:1;this.linecap=void 0!==a.linecap?a.linecap:\"round\";this.linejoin=void 0!==a.linejoin?a.linejoin:\"round\";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\r\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:\r\n!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:\r\n!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\r\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:\r\nTHREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?\r\na.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\r\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.specular=void 0!==a.specular?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=void 0!==a.shininess?a.shininess:30;this.metal=void 0!==a.metal?a.metal:!1;this.perPixel=void 0!==a.perPixel?a.perPixel:!1;this.wrapAround=void 0!==a.wrapAround?a.wrapAround:\r\n!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:\r\n!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:\"round\";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:\"round\";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;\r\nTHREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\r\nTHREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};\r\nTHREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.size=void 0!==a.size?a.size:1;this.sizeAttenuation=void 0!==a.sizeAttenuation?a.sizeAttenuation:!0;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;\r\nTHREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.program=void 0!==a.program?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};\r\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=void 0!==a.fragmentShader?a.fragmentShader:\"void main() {}\";this.vertexShader=void 0!==a.vertexShader?a.vertexShader:\"void main() {}\";this.uniforms=void 0!==a.uniforms?a.uniforms:{};this.attributes=a.attributes;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.fog=void 0!==\r\na.fog?a.fog:!1;this.lights=void 0!==a.lights?a.lights:!1;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\r\nTHREE.Texture=function(a,b,c,d,f,g,e,h){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==g?g:THREE.LinearMipMapLinearFilter;this.format=void 0!==e?e:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=\r\n!0;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};\r\nTHREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;\r\nTHREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,f,g,e,h,i,j){THREE.Texture.call(this,null,g,e,h,i,j,d,f);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;\r\nTHREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;\r\nTHREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;if(this.geometry)this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius;this.frustumCulled=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;\r\nTHREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;\r\nTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),\r\nthis.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\r\nTHREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;\r\nTHREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};\r\nTHREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,d,f,g,e,h;if(void 0!==this.geometry.bones){for(c=0;c<this.geometry.bones.length;c++)f=this.geometry.bones[c],g=f.pos,e=f.rotq,h=f.scl,d=this.addBone(),d.name=f.name,d.position.set(g[0],g[1],g[2]),d.quaternion.set(e[0],e[1],e[2],e[3]),d.useQuaternion=!0,void 0!==h?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)f=this.geometry.bones[c],\r\nd=this.bones[c],-1===f.parent?this.add(d):this.bones[f.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,d=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,\r\n16*a)};\r\nTHREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*c)}if(void 0===this.geometry.skinVerticesA){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,d=\r\nnew THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(d));1!==this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y&&(c=0.5*(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y)),this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};\r\nTHREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;\r\nTHREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\r\nTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;if(!a.animations)a.animations={};for(var b,c=a.animations,d=/([a-z]+)(\\d+)/,f=0,g=a.morphTargets.length;f<g;f++){var e=a.morphTargets[f].name.match(d);if(e&&1<e.length){e=e[1];c[e]||(c[e]={start:Infinity,end:-Infinity});var h=c[e];if(f<h.start)h.start=f;if(f>h.end)h.end=f;b||(b=e)}}a.firstAnimation=b};\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn(\"animation[\"+a+\"] undefined\")};\r\nTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1;if(this.time>this.duration)this.time=this.duration,this.directionBackwards=!0;if(0>this.time)this.time=0,this.directionBackwards=!1}}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);if(a!==this.currentKeyframe)this.morphTargetInfluences[this.lastKeyframe]=\r\n0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a;b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;\r\nTHREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};\r\nTHREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.matrixWorld.n14+a.n32*this.matrixWorld.n24+a.n33*this.matrixWorld.n34+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};\r\nTHREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;\r\nthis.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;\r\nTHREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);\r\nTHREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);\r\nTHREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;\r\nTHREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};\r\nTHREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};\r\nTHREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};\r\nTHREE.DOMRenderer=function(){var a,b,c=new THREE.Projector,d,f,g,e;this.domElement=document.createElement(\"div\");this.setSize=function(a,b){d=a;f=b;g=d/2;e=f/2};this.render=function(d,f){var j,k,q,m,o;a=c.projectScene(d,f);b=a.elements;for(j=0,k=b.length;j<k;j++)if(q=b[j],q instanceof THREE.RenderableParticle&&(m=q.x*g+g,o=q.y*e+e,q=q.material,q instanceof THREE.ParticleDOMMaterial))q=q.domElement,q.style.left=m+\"px\",q.style.top=o+\"px\"}};\r\nTHREE.CanvasRenderer=function(a){function b(a){if(t!=a)n.globalAlpha=t=a}function c(a){if(w!=a){switch(a){case THREE.NormalBlending:n.globalCompositeOperation=\"source-over\";break;case THREE.AdditiveBlending:n.globalCompositeOperation=\"lighter\";break;case THREE.SubtractiveBlending:n.globalCompositeOperation=\"darker\"}w=a}}function d(a){if(u!=a)n.strokeStyle=u=a}function f(a){if(v!=a)n.fillStyle=v=a}var a=a||{},g=this,e,h,i,j=new THREE.Projector,k=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),\r\nq,m,o,p,n=k.getContext(\"2d\"),r=new THREE.Color(0),s=0,t=1,w=0,u=null,v=null,A=null,F=null,B=null,D,H,I,Q,P=new THREE.RenderableVertex,L=new THREE.RenderableVertex,K,O,y,l,$,C,E,S,R,ca,ka,ia,N=new THREE.Color,aa=new THREE.Color,U=new THREE.Color,ba=new THREE.Color,ea=new THREE.Color,Ta=[],Ja=[],Ka,Ga,qa,ha,ib,db,lb,cb,Za,Sa,La=new THREE.Rectangle,sa=new THREE.Rectangle,za=new THREE.Rectangle,Ea=!1,Fa=new THREE.Color,Wa=new THREE.Color,mb=new THREE.Color,Z=new THREE.Vector3,T,Fb,Uc,eb,pc,Cc,a=16;T=\r\ndocument.createElement(\"canvas\");T.width=T.height=2;Fb=T.getContext(\"2d\");Fb.fillStyle=\"rgba(0,0,0,1)\";Fb.fillRect(0,0,2,2);Uc=Fb.getImageData(0,0,2,2);eb=Uc.data;pc=document.createElement(\"canvas\");pc.width=pc.height=a;Cc=pc.getContext(\"2d\");Cc.translate(-a/2,-a/2);Cc.scale(a,a);a--;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){q=a;m=b;o=Math.floor(q/2);p=Math.floor(m/2);k.width=q;k.height=m;La.set(-o,-p,\r\no,p);sa.set(-o,-p,o,p);t=1;w=0;B=F=A=v=u=null};this.setClearColor=function(a,b){r.copy(a);s=b;sa.set(-o,-p,o,p)};this.setClearColorHex=function(a,b){r.setHex(a);s=b;sa.set(-o,-p,o,p)};this.clear=function(){n.setTransform(1,0,0,-1,o,p);sa.isEmpty()||(sa.minSelf(La),sa.inflate(2),1>s&&n.clearRect(Math.floor(sa.getX()),Math.floor(sa.getY()),Math.floor(sa.getWidth()),Math.floor(sa.getHeight())),0<s&&(c(THREE.NormalBlending),b(1),f(\"rgba(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*\r\nr.b)+\",\"+s+\")\"),n.fillRect(Math.floor(sa.getX()),Math.floor(sa.getY()),Math.floor(sa.getWidth()),Math.floor(sa.getHeight()))),sa.empty())};this.render=function(a,k){function m(a){var b,c,d,f;Fa.setRGB(0,0,0);Wa.setRGB(0,0,0);mb.setRGB(0,0,0);for(b=0,c=a.length;b<c;b++)d=a[b],f=d.color,d instanceof THREE.AmbientLight?(Fa.r+=f.r,Fa.g+=f.g,Fa.b+=f.b):d instanceof THREE.DirectionalLight?(Wa.r+=f.r,Wa.g+=f.g,Wa.b+=f.b):d instanceof THREE.PointLight&&(mb.r+=f.r,mb.g+=f.g,mb.b+=f.b)}function q(a,b,c,d){var f,\r\ng,e,h,l,i;for(f=0,g=a.length;f<g;f++)e=a[f],h=e.color,e instanceof THREE.DirectionalLight?(l=e.matrixWorld.getPosition(),i=c.dot(l),0>=i||(i*=e.intensity,d.r+=h.r*i,d.g+=h.g*i,d.b+=h.b*i)):e instanceof THREE.PointLight&&(l=e.matrixWorld.getPosition(),i=c.dot(Z.sub(l,b).normalize()),0>=i||(i*=0==e.distance?1:1-Math.min(b.distanceTo(l)/e.distance,1),0!=i&&(i*=e.intensity,d.r+=h.r*i,d.g+=h.g*i,d.b+=h.b*i)))}function r(a,g,e){b(e.opacity);c(e.blending);var Z,h,l,i,k,j;if(e instanceof THREE.ParticleBasicMaterial){if(e.map)i=\r\ne.map.image,k=i.width>>1,j=i.height>>1,e=g.scale.x*o,l=g.scale.y*p,Z=e*k,h=l*j,za.set(a.x-Z,a.y-h,a.x+Z,a.y+h),La.intersects(za)&&(n.save(),n.translate(a.x,a.y),n.rotate(-g.rotation),n.scale(e,-l),n.translate(-k,-j),n.drawImage(i,0,0),n.restore())}else e instanceof THREE.ParticleCanvasMaterial&&(Z=g.scale.x*o,h=g.scale.y*p,za.set(a.x-Z,a.y-h,a.x+Z,a.y+h),La.intersects(za)&&(d(e.color.getContextStyle()),f(e.color.getContextStyle()),n.save(),n.translate(a.x,a.y),n.rotate(-g.rotation),n.scale(Z,h),e.program(n),\r\nn.restore()))}function s(a,f,g,e){b(e.opacity);c(e.blending);n.beginPath();n.moveTo(a.positionScreen.x,a.positionScreen.y);n.lineTo(f.positionScreen.x,f.positionScreen.y);n.closePath();if(e instanceof THREE.LineBasicMaterial){a=e.linewidth;if(A!=a)n.lineWidth=A=a;a=e.linecap;if(F!=a)n.lineCap=F=a;a=e.linejoin;if(B!=a)n.lineJoin=B=a;d(e.color.getContextStyle());n.stroke();za.inflate(2*e.linewidth)}}function t(a,d,f,e,h,j,n,T){g.info.render.vertices+=3;g.info.render.faces++;b(T.opacity);c(T.blending);\r\nK=a.positionScreen.x;O=a.positionScreen.y;y=d.positionScreen.x;l=d.positionScreen.y;$=f.positionScreen.x;C=f.positionScreen.y;v(K,O,y,l,$,C);if(T instanceof THREE.MeshBasicMaterial)if(T.map)T.map.mapping instanceof THREE.UVMapping&&(ha=n.uvs[0],Vc(K,O,y,l,$,C,ha[e].u,ha[e].v,ha[h].u,ha[h].v,ha[j].u,ha[j].v,T.map));else if(T.envMap){if(T.envMap.mapping instanceof THREE.SphericalReflectionMapping)a=k.matrixWorldInverse,Z.copy(n.vertexNormalsWorld[e]),ib=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,db=0.5*\r\n-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Z.copy(n.vertexNormalsWorld[h]),lb=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,cb=0.5*-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Z.copy(n.vertexNormalsWorld[j]),Za=0.5*(Z.x*a.n11+Z.y*a.n12+Z.z*a.n13)+0.5,Sa=0.5*-(Z.x*a.n21+Z.y*a.n22+Z.z*a.n23)+0.5,Vc(K,O,y,l,$,C,ib,db,lb,cb,Za,Sa,T.envMap)}else T.wireframe?Mb(T.color,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(T.color);else if(T instanceof THREE.MeshLambertMaterial)T.map&&!T.wireframe&&(T.map.mapping instanceof\r\nTHREE.UVMapping&&(ha=n.uvs[0],Vc(K,O,y,l,$,C,ha[e].u,ha[e].v,ha[h].u,ha[h].v,ha[j].u,ha[j].v,T.map)),c(THREE.SubtractiveBlending)),Ea?!T.wireframe&&T.shading==THREE.SmoothShading&&3==n.vertexNormalsWorld.length?(aa.r=U.r=ba.r=Fa.r,aa.g=U.g=ba.g=Fa.g,aa.b=U.b=ba.b=Fa.b,q(i,n.v1.positionWorld,n.vertexNormalsWorld[0],aa),q(i,n.v2.positionWorld,n.vertexNormalsWorld[1],U),q(i,n.v3.positionWorld,n.vertexNormalsWorld[2],ba),aa.r=Math.max(0,Math.min(T.color.r*aa.r,1)),aa.g=Math.max(0,Math.min(T.color.g*aa.g,\r\n1)),aa.b=Math.max(0,Math.min(T.color.b*aa.b,1)),U.r=Math.max(0,Math.min(T.color.r*U.r,1)),U.g=Math.max(0,Math.min(T.color.g*U.g,1)),U.b=Math.max(0,Math.min(T.color.b*U.b,1)),ba.r=Math.max(0,Math.min(T.color.r*ba.r,1)),ba.g=Math.max(0,Math.min(T.color.g*ba.g,1)),ba.b=Math.max(0,Math.min(T.color.b*ba.b,1)),ea.r=0.5*(U.r+ba.r),ea.g=0.5*(U.g+ba.g),ea.b=0.5*(U.b+ba.b),qa=Dc(aa,U,ba,ea),gc(K,O,y,l,$,C,0,0,1,0,0,1,qa)):(N.r=Fa.r,N.g=Fa.g,N.b=Fa.b,q(i,n.centroidWorld,n.normalWorld,N),N.r=Math.max(0,Math.min(T.color.r*\r\nN.r,1)),N.g=Math.max(0,Math.min(T.color.g*N.g,1)),N.b=Math.max(0,Math.min(T.color.b*N.b,1)),T.wireframe?Mb(N,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(N)):T.wireframe?Mb(T.color,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(T.color);else if(T instanceof THREE.MeshDepthMaterial)Ka=k.near,Ga=k.far,aa.r=aa.g=aa.b=1-ac(a.positionScreen.z,Ka,Ga),U.r=U.g=U.b=1-ac(d.positionScreen.z,Ka,Ga),ba.r=ba.g=ba.b=1-ac(f.positionScreen.z,Ka,Ga),ea.r=0.5*(U.r+ba.r),ea.g=0.5*\r\n(U.g+ba.g),ea.b=0.5*(U.b+ba.b),qa=Dc(aa,U,ba,ea),gc(K,O,y,l,$,C,0,0,1,0,0,1,qa);else if(T instanceof THREE.MeshNormalMaterial)N.r=hc(n.normalWorld.x),N.g=hc(n.normalWorld.y),N.b=hc(n.normalWorld.z),T.wireframe?Mb(N,T.wireframeLinewidth,T.wireframeLinecap,T.wireframeLinejoin):Gb(N)}function u(a,d,f,e,Z,h,T,j,n){g.info.render.vertices+=4;g.info.render.faces++;b(j.opacity);c(j.blending);if(j.map||j.envMap)t(a,d,e,0,1,3,T,j,n),t(Z,f,h,1,2,3,T,j,n);else if(K=a.positionScreen.x,O=a.positionScreen.y,y=d.positionScreen.x,\r\nl=d.positionScreen.y,$=f.positionScreen.x,C=f.positionScreen.y,E=e.positionScreen.x,S=e.positionScreen.y,R=Z.positionScreen.x,ca=Z.positionScreen.y,ka=h.positionScreen.x,ia=h.positionScreen.y,j instanceof THREE.MeshBasicMaterial)w(K,O,y,l,$,C,E,S),j.wireframe?Mb(j.color,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(j.color);else if(j instanceof THREE.MeshLambertMaterial)Ea?!j.wireframe&&j.shading==THREE.SmoothShading&&4==T.vertexNormalsWorld.length?(aa.r=U.r=ba.r=ea.r=Fa.r,aa.g=\r\nU.g=ba.g=ea.g=Fa.g,aa.b=U.b=ba.b=ea.b=Fa.b,q(i,T.v1.positionWorld,T.vertexNormalsWorld[0],aa),q(i,T.v2.positionWorld,T.vertexNormalsWorld[1],U),q(i,T.v4.positionWorld,T.vertexNormalsWorld[3],ba),q(i,T.v3.positionWorld,T.vertexNormalsWorld[2],ea),aa.r=Math.max(0,Math.min(j.color.r*aa.r,1)),aa.g=Math.max(0,Math.min(j.color.g*aa.g,1)),aa.b=Math.max(0,Math.min(j.color.b*aa.b,1)),U.r=Math.max(0,Math.min(j.color.r*U.r,1)),U.g=Math.max(0,Math.min(j.color.g*U.g,1)),U.b=Math.max(0,Math.min(j.color.b*U.b,1)),\r\nba.r=Math.max(0,Math.min(j.color.r*ba.r,1)),ba.g=Math.max(0,Math.min(j.color.g*ba.g,1)),ba.b=Math.max(0,Math.min(j.color.b*ba.b,1)),ea.r=Math.max(0,Math.min(j.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(j.color.g*ea.g,1)),ea.b=Math.max(0,Math.min(j.color.b*ea.b,1)),qa=Dc(aa,U,ba,ea),v(K,O,y,l,E,S),gc(K,O,y,l,E,S,0,0,1,0,0,1,qa),v(R,ca,$,C,ka,ia),gc(R,ca,$,C,ka,ia,1,0,1,1,0,1,qa)):(N.r=Fa.r,N.g=Fa.g,N.b=Fa.b,q(i,T.centroidWorld,T.normalWorld,N),N.r=Math.max(0,Math.min(j.color.r*N.r,1)),N.g=Math.max(0,\r\nMath.min(j.color.g*N.g,1)),N.b=Math.max(0,Math.min(j.color.b*N.b,1)),w(K,O,y,l,$,C,E,S),j.wireframe?Mb(N,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(N)):(w(K,O,y,l,$,C,E,S),j.wireframe?Mb(j.color,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):Gb(j.color));else if(j instanceof THREE.MeshNormalMaterial)N.r=hc(T.normalWorld.x),N.g=hc(T.normalWorld.y),N.b=hc(T.normalWorld.z),w(K,O,y,l,$,C,E,S),j.wireframe?Mb(N,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):\r\nGb(N);else if(j instanceof THREE.MeshDepthMaterial)Ka=k.near,Ga=k.far,aa.r=aa.g=aa.b=1-ac(a.positionScreen.z,Ka,Ga),U.r=U.g=U.b=1-ac(d.positionScreen.z,Ka,Ga),ba.r=ba.g=ba.b=1-ac(e.positionScreen.z,Ka,Ga),ea.r=ea.g=ea.b=1-ac(f.positionScreen.z,Ka,Ga),qa=Dc(aa,U,ba,ea),v(K,O,y,l,E,S),gc(K,O,y,l,E,S,0,0,1,0,0,1,qa),v(R,ca,$,C,ka,ia),gc(R,ca,$,C,ka,ia,1,0,1,1,0,1,qa)}function v(a,b,c,d,f,e){n.beginPath();n.moveTo(a,b);n.lineTo(c,d);n.lineTo(f,e);n.lineTo(a,b);n.closePath()}function w(a,b,c,d,f,e,g,Z){n.beginPath();\r\nn.moveTo(a,b);n.lineTo(c,d);n.lineTo(f,e);n.lineTo(g,Z);n.lineTo(a,b);n.closePath()}function Mb(a,b,c,f){if(A!=b)n.lineWidth=A=b;if(F!=c)n.lineCap=F=c;if(B!=f)n.lineJoin=B=f;d(a.getContextStyle());n.stroke();za.inflate(2*b)}function Gb(a){f(a.getContextStyle());n.fill()}function Vc(a,b,c,d,e,g,Z,h,l,i,j,T,k){if(0!=k.image.width){if(!0==k.needsUpdate||void 0==Ta[k.id]){var m=k.wrapS==THREE.RepeatWrapping,o=k.wrapT==THREE.RepeatWrapping;Ta[k.id]=n.createPattern(k.image,m&&o?\"repeat\":m&&!o?\"repeat-x\":\r\n!m&&o?\"repeat-y\":\"no-repeat\");k.needsUpdate=!1}f(Ta[k.id]);var m=k.offset.x/k.repeat.x,o=k.offset.y/k.repeat.y,p=k.image.width*k.repeat.x,Fb=k.image.height*k.repeat.y,Z=(Z+m)*p,h=(h+o)*Fb,c=c-a,d=d-b,e=e-a,g=g-b,l=(l+m)*p-Z,i=(i+o)*Fb-h,j=(j+m)*p-Z,T=(T+o)*Fb-h,m=l*T-j*i;if(0==m){if(void 0===Ja[k.id])b=document.createElement(\"canvas\"),b.width=k.image.width,b.height=k.image.height,b=b.getContext(\"2d\"),b.drawImage(k.image,0,0),Ja[k.id]=b.getImageData(0,0,k.image.width,k.image.height).data;b=Ja[k.id];\r\nZ=4*(Math.floor(Z)+Math.floor(h)*k.image.width);N.setRGB(b[Z]/255,b[Z+1]/255,b[Z+2]/255);Gb(N)}else m=1/m,k=(T*c-i*e)*m,i=(T*d-i*g)*m,c=(l*e-j*c)*m,d=(l*g-j*d)*m,a=a-k*Z-c*h,Z=b-i*Z-d*h,n.save(),n.transform(k,i,c,d,a,Z),n.fill(),n.restore()}}function gc(a,b,c,d,f,e,g,Z,h,l,i,j,T){var k,m;k=T.width-1;m=T.height-1;g*=k;Z*=m;c-=a;d-=b;f-=a;e-=b;h=h*k-g;l=l*m-Z;i=i*k-g;j=j*m-Z;m=1/(h*j-i*l);k=(j*c-l*f)*m;l=(j*d-l*e)*m;c=(h*f-i*c)*m;d=(h*e-i*d)*m;a=a-k*g-c*Z;b=b-l*g-d*Z;n.save();n.transform(k,l,c,d,a,\r\nb);n.clip();n.drawImage(T,0,0);n.restore()}function Dc(a,b,c,d){var f=~~(255*a.r),e=~~(255*a.g),a=~~(255*a.b),g=~~(255*b.r),Z=~~(255*b.g),b=~~(255*b.b),h=~~(255*c.r),l=~~(255*c.g),c=~~(255*c.b),i=~~(255*d.r),j=~~(255*d.g),d=~~(255*d.b);eb[0]=0>f?0:255<f?255:f;eb[1]=0>e?0:255<e?255:e;eb[2]=0>a?0:255<a?255:a;eb[4]=0>g?0:255<g?255:g;eb[5]=0>Z?0:255<Z?255:Z;eb[6]=0>b?0:255<b?255:b;eb[8]=0>h?0:255<h?255:h;eb[9]=0>l?0:255<l?255:l;eb[10]=0>c?0:255<c?255:c;eb[12]=0>i?0:255<i?255:i;eb[13]=0>j?0:255<j?255:\r\nj;eb[14]=0>d?0:255<d?255:d;Fb.putImageData(Uc,0,0);Cc.drawImage(T,0,0);return pc}function ac(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function hc(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Nb(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;0!=f&&(f=1/Math.sqrt(f),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}var Ec,fd,Pa,jb;this.autoClear?this.clear():n.setTransform(1,0,0,-1,o,p);g.info.render.vertices=0;g.info.render.faces=0;e=j.projectScene(a,k,this.sortElements);h=e.elements;i=e.lights;(Ea=0<i.length)&&m(i);\r\nfor(Ec=0,fd=h.length;Ec<fd;Ec++)if(Pa=h[Ec],jb=Pa.material,jb=jb instanceof THREE.MeshFaceMaterial?Pa.faceMaterial:jb,!(null==jb||0==jb.opacity)){za.empty();if(Pa instanceof THREE.RenderableParticle)D=Pa,D.x*=o,D.y*=p,r(D,Pa,jb,a);else if(Pa instanceof THREE.RenderableLine)D=Pa.v1,H=Pa.v2,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,za.addPoint(D.positionScreen.x,D.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),La.intersects(za)&&s(D,\r\nH,Pa,jb,a);else if(Pa instanceof THREE.RenderableFace3)D=Pa.v1,H=Pa.v2,I=Pa.v3,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,I.positionScreen.x*=o,I.positionScreen.y*=p,jb.overdraw&&(Nb(D.positionScreen,H.positionScreen),Nb(H.positionScreen,I.positionScreen),Nb(I.positionScreen,D.positionScreen)),za.add3Points(D.positionScreen.x,D.positionScreen.y,H.positionScreen.x,H.positionScreen.y,I.positionScreen.x,I.positionScreen.y),La.intersects(za)&&t(D,H,I,0,1,2,\r\nPa,jb,a);else if(Pa instanceof THREE.RenderableFace4)D=Pa.v1,H=Pa.v2,I=Pa.v3,Q=Pa.v4,D.positionScreen.x*=o,D.positionScreen.y*=p,H.positionScreen.x*=o,H.positionScreen.y*=p,I.positionScreen.x*=o,I.positionScreen.y*=p,Q.positionScreen.x*=o,Q.positionScreen.y*=p,P.positionScreen.copy(H.positionScreen),L.positionScreen.copy(Q.positionScreen),jb.overdraw&&(Nb(D.positionScreen,H.positionScreen),Nb(H.positionScreen,Q.positionScreen),Nb(Q.positionScreen,D.positionScreen),Nb(I.positionScreen,P.positionScreen),\r\nNb(I.positionScreen,L.positionScreen)),za.addPoint(D.positionScreen.x,D.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),za.addPoint(I.positionScreen.x,I.positionScreen.y),za.addPoint(Q.positionScreen.x,Q.positionScreen.y),La.intersects(za)&&u(D,H,I,Q,P,L,Pa,jb,a);sa.addRectangle(za)}n.setTransform(1,0,0,1,0,0)}};\r\nTHREE.SVGRenderer=function(){function a(a,b,c,d){var f,e,g,h,i,j;for(f=0,e=a.length;f<e;f++)g=a[f],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition(),j=c.dot(i),0>=j||(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(D.sub(i,b).normalize()),0>=j||(j*=0==g.distance?1:1-Math.min(b.distanceTo(i)/g.distance,1),0!=j&&(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)))}function b(a){null==H[a]&&(H[a]=document.createElementNS(\"http://www.w3.org/2000/svg\",\r\n\"path\"),0==K&&H[a].setAttribute(\"shape-rendering\",\"crispEdges\"));return H[a]}function c(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}var d=this,f,g,e,h=new THREE.Projector,i=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),j,k,q,m,o,p,n,r,s=new THREE.Rectangle,t=new THREE.Rectangle,w=!1,u=new THREE.Color,v=new THREE.Color,A=new THREE.Color,F=new THREE.Color,B,D=new THREE.Vector3,H=[],I=[],Q,P,L,K=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,\r\nfaces:0}};this.setQuality=function(a){switch(a){case \"high\":K=1;break;case \"low\":K=0}};this.setSize=function(a,b){j=a;k=b;q=j/2;m=k/2;i.setAttribute(\"viewBox\",-q+\" \"+-m+\" \"+j+\" \"+k);i.setAttribute(\"width\",j);i.setAttribute(\"height\",k);s.set(-q,-m,q,m)};this.clear=function(){for(;0<i.childNodes.length;)i.removeChild(i.childNodes[0])};this.render=function(j,k){var l,D,C,E;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;f=h.projectScene(j,k,this.sortElements);g=f.elements;\r\ne=f.lights;L=P=0;if(w=0<e.length){v.setRGB(0,0,0);A.setRGB(0,0,0);F.setRGB(0,0,0);for(l=0,D=e.length;l<D;l++)E=e[l],C=E.color,E instanceof THREE.AmbientLight?(v.r+=C.r,v.g+=C.g,v.b+=C.b):E instanceof THREE.DirectionalLight?(A.r+=C.r,A.g+=C.g,A.b+=C.b):E instanceof THREE.PointLight&&(F.r+=C.r,F.g+=C.g,F.b+=C.b)}for(l=0,D=g.length;l<D;l++)if(C=g[l],E=C.material,E=E instanceof THREE.MeshFaceMaterial?C.faceMaterial:E,!(null==E||0==E.opacity))if(t.empty(),C instanceof THREE.RenderableParticle)o=C,o.x*=\r\nq,o.y*=-m;else if(C instanceof THREE.RenderableLine){if(o=C.v1,p=C.v2,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,o.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),s.intersects(t)){C=o;var S=p,R=L++;null==I[R]&&(I[R]=document.createElementNS(\"http://www.w3.org/2000/svg\",\"line\"),0==K&&I[R].setAttribute(\"shape-rendering\",\"crispEdges\"));Q=I[R];Q.setAttribute(\"x1\",C.positionScreen.x);Q.setAttribute(\"y1\",C.positionScreen.y);\r\nQ.setAttribute(\"x2\",S.positionScreen.x);Q.setAttribute(\"y2\",S.positionScreen.y);E instanceof THREE.LineBasicMaterial&&(Q.setAttribute(\"style\",\"fill: none; stroke: \"+E.color.getContextStyle()+\"; stroke-width: \"+E.linewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.linecap+\"; stroke-linejoin: \"+E.linejoin),i.appendChild(Q))}}else if(C instanceof THREE.RenderableFace3){if(o=C.v1,p=C.v2,n=C.v3,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,n.positionScreen.x*=\r\nq,n.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,o.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),t.addPoint(n.positionScreen.x,n.positionScreen.y),s.intersects(t)){var S=o,R=p,H=n;d.info.render.vertices+=3;d.info.render.faces++;Q=b(P++);Q.setAttribute(\"d\",\"M \"+S.positionScreen.x+\" \"+S.positionScreen.y+\" L \"+R.positionScreen.x+\" \"+R.positionScreen.y+\" L \"+H.positionScreen.x+\",\"+H.positionScreen.y+\"z\");E instanceof THREE.MeshBasicMaterial?u.copy(E.color):E instanceof THREE.MeshLambertMaterial?\r\nw?(u.r=v.r,u.g=v.g,u.b=v.b,a(e,C.centroidWorld,C.normalWorld,u),u.r=Math.max(0,Math.min(E.color.r*u.r,1)),u.g=Math.max(0,Math.min(E.color.g*u.g,1)),u.b=Math.max(0,Math.min(E.color.b*u.b,1))):u.copy(E.color):E instanceof THREE.MeshDepthMaterial?(B=1-E.__2near/(E.__farPlusNear-C.z*E.__farMinusNear),u.setRGB(B,B,B)):E instanceof THREE.MeshNormalMaterial&&u.setRGB(c(C.normalWorld.x),c(C.normalWorld.y),c(C.normalWorld.z));E.wireframe?Q.setAttribute(\"style\",\"fill: none; stroke: \"+u.getContextStyle()+\"; stroke-width: \"+\r\nE.wireframeLinewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.wireframeLinecap+\"; stroke-linejoin: \"+E.wireframeLinejoin):Q.setAttribute(\"style\",\"fill: \"+u.getContextStyle()+\"; fill-opacity: \"+E.opacity);i.appendChild(Q)}}else if(C instanceof THREE.RenderableFace4&&(o=C.v1,p=C.v2,n=C.v3,r=C.v4,o.positionScreen.x*=q,o.positionScreen.y*=-m,p.positionScreen.x*=q,p.positionScreen.y*=-m,n.positionScreen.x*=q,n.positionScreen.y*=-m,r.positionScreen.x*=q,r.positionScreen.y*=-m,t.addPoint(o.positionScreen.x,\r\no.positionScreen.y),t.addPoint(p.positionScreen.x,p.positionScreen.y),t.addPoint(n.positionScreen.x,n.positionScreen.y),t.addPoint(r.positionScreen.x,r.positionScreen.y),s.intersects(t))){var S=o,R=p,H=n,ka=r;d.info.render.vertices+=4;d.info.render.faces++;Q=b(P++);Q.setAttribute(\"d\",\"M \"+S.positionScreen.x+\" \"+S.positionScreen.y+\" L \"+R.positionScreen.x+\" \"+R.positionScreen.y+\" L \"+H.positionScreen.x+\",\"+H.positionScreen.y+\" L \"+ka.positionScreen.x+\",\"+ka.positionScreen.y+\"z\");E instanceof THREE.MeshBasicMaterial?\r\nu.copy(E.color):E instanceof THREE.MeshLambertMaterial?w?(u.r=v.r,u.g=v.g,u.b=v.b,a(e,C.centroidWorld,C.normalWorld,u),u.r=Math.max(0,Math.min(E.color.r*u.r,1)),u.g=Math.max(0,Math.min(E.color.g*u.g,1)),u.b=Math.max(0,Math.min(E.color.b*u.b,1))):u.copy(E.color):E instanceof THREE.MeshDepthMaterial?(B=1-E.__2near/(E.__farPlusNear-C.z*E.__farMinusNear),u.setRGB(B,B,B)):E instanceof THREE.MeshNormalMaterial&&u.setRGB(c(C.normalWorld.x),c(C.normalWorld.y),c(C.normalWorld.z));E.wireframe?Q.setAttribute(\"style\",\r\n\"fill: none; stroke: \"+u.getContextStyle()+\"; stroke-width: \"+E.wireframeLinewidth+\"; stroke-opacity: \"+E.opacity+\"; stroke-linecap: \"+E.wireframeLinecap+\"; stroke-linejoin: \"+E.wireframeLinejoin):Q.setAttribute(\"style\",\"fill: \"+u.getContextStyle()+\"; fill-opacity: \"+E.opacity);i.appendChild(Q)}}};\r\nTHREE.ShaderChunk={fog_pars_fragment:\"#ifdef USE_FOG\\nuniform vec3 fogColor;\\n#ifdef FOG_EXP2\\nuniform float fogDensity;\\n#else\\nuniform float fogNear;\\nuniform float fogFar;\\n#endif\\n#endif\",fog_fragment:\"#ifdef USE_FOG\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n#ifdef FOG_EXP2\\nconst float LOG2 = 1.442695;\\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n#else\\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n#endif\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n#endif\",envmap_pars_fragment:\"#ifdef USE_ENVMAP\\nvarying vec3 vReflect;\\nuniform float reflectivity;\\nuniform samplerCube envMap;\\nuniform float flipEnvMap;\\nuniform int combine;\\n#endif\",\r\nenvmap_fragment:\"#ifdef USE_ENVMAP\\n#ifdef DOUBLE_SIDED\\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\\n#else\\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\\n#endif\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\nif ( combine == 1 ) {\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\\n} else {\\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\\n}\\n#endif\",\r\nenvmap_pars_vertex:\"#ifdef USE_ENVMAP\\nvarying vec3 vReflect;\\nuniform float refractionRatio;\\nuniform bool useRefract;\\n#endif\",envmap_vertex:\"#ifdef USE_ENVMAP\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\\nif ( useRefract ) {\\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\\n} else {\\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\\n}\\n#endif\",\r\nmap_particle_pars_fragment:\"#ifdef USE_MAP\\nuniform sampler2D map;\\n#endif\",map_particle_fragment:\"#ifdef USE_MAP\\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\\n#endif\",map_pars_vertex:\"#ifdef USE_MAP\\nvarying vec2 vUv;\\nuniform vec4 offsetRepeat;\\n#endif\",map_pars_fragment:\"#ifdef USE_MAP\\nvarying vec2 vUv;\\nuniform sampler2D map;\\n#endif\",map_vertex:\"#ifdef USE_MAP\\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\",map_fragment:\"#ifdef USE_MAP\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( map, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\\n#endif\\n#endif\",\r\nlightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\nuniform sampler2D lightMap;\\n#endif\",lightmap_pars_vertex:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\n#endif\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n#endif\",lightmap_vertex:\"#ifdef USE_LIGHTMAP\\nvUv2 = uv2;\\n#endif\",lights_lambert_pars_vertex:\"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\",\r\nlights_lambert_vertex:\"vLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\nvLightBack = vec3( 0.0 );\\n#endif\\ntransformedNormal = normalize( transformedNormal );\\n#if MAX_DIR_LIGHTS > 0\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( transformedNormal, dirVector );\\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n#ifdef DOUBLE_SIDED\\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n#endif\\n}\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\nfloat dotProduct = dot( transformedNormal, lVector );\\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n#ifdef DOUBLE_SIDED\\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n#endif\\n}\\n#endif\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor;\\n#ifdef DOUBLE_SIDED\\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor;\\n#endif\",\r\nlights_phong_pars_vertex:\"#if MAX_POINT_LIGHTS > 0\\n#ifndef PHONG_PER_PIXEL\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#endif\",lights_phong_vertex:\"#if MAX_POINT_LIGHTS > 0\\n#ifndef PHONG_PER_PIXEL\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nvPointLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#endif\",\r\nlights_phong_pars_fragment:\"uniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n#ifdef PHONG_PER_PIXEL\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#else\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\",\r\nlights_phong_fragment:\"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#ifdef DOUBLE_SIDED\\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse  = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n#ifdef PHONG_PER_PIXEL\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\n#else\\nvec3 lVector = normalize( vPointLight[ i ].xyz );\\nfloat lDistance = vPointLight[ i ].w;\\n#endif\\nfloat dotProduct = dot( normal, lVector );\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\nvec3 pointHalfVector = normalize( lVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\\n#else\\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\\n#endif\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse  = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( normal, dirVector );\\n#ifdef WRAP_AROUND\\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\\n#else\\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\\n#endif\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\n#ifdef METAL\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n#endif\",\r\ncolor_pars_fragment:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_fragment:\"#ifdef USE_COLOR\\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\\n#endif\",color_pars_vertex:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n#ifdef GAMMA_INPUT\\nvColor = color * color;\\n#else\\nvColor = color;\\n#endif\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n#endif\",skinning_vertex:\"#ifdef USE_SKINNING\\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\\n#endif\",\r\nmorphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n#ifndef USE_MORPHNORMALS\\nuniform float morphTargetInfluences[ 8 ];\\n#else\\nuniform float morphTargetInfluences[ 4 ];\\n#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\nvec3 morphed = vec3( 0.0 );\\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n#ifndef USE_MORPHNORMALS\\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n#endif\\nmorphed += position;\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\\n#endif\",\r\ndefault_vertex:\"#ifndef USE_MORPHTARGETS\\n#ifndef USE_SKINNING\\ngl_Position = projectionMatrix * mvPosition;\\n#endif\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\nvec3 morphedNormal = vec3( 0.0 );\\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\nmorphedNormal += normal;\\nvec3 transformedNormal = normalMatrix * morphedNormal;\\n#else\\nvec3 transformedNormal = normalMatrix * normal;\\n#endif\",\r\nshadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\nuniform float shadowDarkness[ MAX_SHADOWS ];\\nuniform float shadowBias[ MAX_SHADOWS ];\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nfloat unpackDepth( const in vec4 rgba_depth ) {\\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\nfloat depth = dot( rgba_depth, bit_shift );\\nreturn depth;\\n}\\n#endif\",shadowmap_fragment:\"#ifdef USE_SHADOWMAP\\n#ifdef SHADOWMAP_DEBUG\\nvec3 frustumColors[3];\\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n#endif\\n#ifdef SHADOWMAP_CASCADE\\nint inFrustumCount = 0;\\n#endif\\nfloat fDepth;\\nvec3 shadowColor = vec3( 1.0 );\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\nbool inFrustum = all( inFrustumVec );\\n#ifdef SHADOWMAP_CASCADE\\ninFrustumCount += int( inFrustum );\\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n#else\\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n#endif\\nbool frustumTest = all( frustumTestVec );\\nif ( frustumTest ) {\\nshadowCoord.z += shadowBias[ i ];\\n#ifdef SHADOWMAP_SOFT\\nfloat shadow = 0.0;\\nconst float shadowDelta = 1.0 / 9.0;\\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\nfloat dx0 = -1.25 * xPixelOffset;\\nfloat dy0 = -1.25 * yPixelOffset;\\nfloat dx1 = 1.25 * xPixelOffset;\\nfloat dy1 = 1.25 * yPixelOffset;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n#else\\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\nfloat fDepth = unpackDepth( rgbaDepth );\\nif ( fDepth < shadowCoord.z )\\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n#endif\\n}\\n#ifdef SHADOWMAP_DEBUG\\n#ifdef SHADOWMAP_CASCADE\\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n#else\\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n#endif\\n#endif\\n}\\n#ifdef GAMMA_OUTPUT\\nshadowColor *= shadowColor;\\n#endif\\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n#endif\",\r\nshadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n#endif\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n#ifdef USE_MORPHTARGETS\\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\\n#else\\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\\n#endif\\n}\\n#endif\",alphatest_fragment:\"#ifdef ALPHATEST\\nif ( gl_FragColor.a < ALPHATEST ) discard;\\n#endif\",\r\nlinear_to_gamma_fragment:\"#ifdef GAMMA_OUTPUT\\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n#endif\"};\r\nTHREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};\r\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:0,texture:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:\"t\",value:2,texture:null},envMap:{type:\"t\",value:1,texture:null},flipEnvMap:{type:\"f\",value:-1},useRefract:{type:\"i\",value:0},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:0.98},combine:{type:\"i\",value:0},morphTargetInfluences:{type:\"f\",value:0}},fog:{fogDensity:{type:\"f\",\r\nvalue:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]}},particle:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},size:{type:\"f\",value:1},scale:{type:\"f\",\r\nvalue:1},map:{type:\"t\",value:0,texture:null},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:6,texture:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\r\nTHREE.ShaderLib={depth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:\"void main() {\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\\nvoid main() {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\ngl_FragColor = vec4( vec3( color ), opacity );\\n}\"},normal:{uniforms:{opacity:{type:\"f\",\r\nvalue:1}},vertexShader:\"varying vec3 vNormal;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvNormal = normalize( normalMatrix * normal );\\ngl_Position = projectionMatrix * mvPosition;\\n}\",fragmentShader:\"uniform float opacity;\\nvarying vec3 vNormal;\\nvoid main() {\\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\\n}\"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,\r\nTHREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,\r\nTHREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,\r\nTHREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(328965)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"varying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",\r\nTHREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,\r\nTHREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,\r\nTHREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,\"#ifdef DOUBLE_SIDED\\nif ( gl_FrontFacing )\\ngl_FragColor.xyz *= vLightFront;\\nelse\\ngl_FragColor.xyz *= vLightBack;\\n#else\\ngl_FragColor.xyz *= vLightFront;\\n#endif\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,\r\nTHREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(328965)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"varying vec3 vViewPosition;\\nvarying vec3 vNormal;\",THREE.ShaderChunk.map_pars_vertex,\r\nTHREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,\"#ifndef USE_ENVMAP\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\n#endif\\nvViewPosition = -mvPosition.xyz;\",\r\nTHREE.ShaderChunk.morphnormal_vertex,\"vNormal = transformedNormal;\",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform vec3 ambient;\\nuniform vec3 specular;\\nuniform float shininess;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,\r\nTHREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,\r\nTHREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n#ifdef USE_SIZEATTENUATION\\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n#else\\ngl_PointSize = size;\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\",\r\nTHREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( psColor, opacity );\",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\r\n\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,\"}\"].join(\"\\n\"),fragmentShader:\"vec4 pack_depth( const in float depth ) {\\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\nvec4 res = fract( depth * bit_shift );\\nres -= res.xxyz * bit_mask;\\nreturn res;\\n}\\nvoid main() {\\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n}\"}};\r\nTHREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(void 0===a.__webglCustomAttributesList)a.__webglCustomAttributesList=[];for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;\"v2\"===e.type?g=2:\"v3\"===e.type?g=3:\"v4\"===e.type?g=4:\"c\"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}\r\nfunction c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a,b,c){var d,f,e,g,h=a.vertices;g=h.length;\r\nvar i=a.colors,j=i.length,k=a.__vertexArray,n=a.__colorArray,m=a.__sortArray,o=a.__dirtyVertices,p=a.__dirtyColors,q=a.__webglCustomAttributesList;if(c.sortParticles){Za.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)f=h[d].position,Sa.copy(f),Za.multiplyVector3(Sa),m[d]=[Sa.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)f=h[m[d][1]].position,e=3*d,k[e]=f.x,k[e+1]=f.y,k[e+2]=f.z;for(d=0;d<j;d++)e=3*d,f=i[m[d][1]],n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],\r\nvoid 0===h.boundTo||\"vertices\"===h.boundTo)if(e=0,f=h.value.length,1===h.size)for(d=0;d<f;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if(\"c\"===h.type)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=m[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=m[d][1],g=h.value[g],\r\nh.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}else{if(o)for(d=0;d<g;d++)f=h[d].position,e=3*d,k[e]=f.x,k[e+1]=f.y,k[e+2]=f.z;if(p)for(d=0;d<j;d++)f=i[d],e=3*d,n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],h.needsUpdate&&(void 0===h.boundTo||\"vertices\"===h.boundTo))if(f=h.value.length,e=0,1===h.size)for(d=0;d<f;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if(\"c\"===\r\nh.type)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}if(o||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,k,b);if(p||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,\r\nn,b);if(q)for(i=0,j=q.length;i<j;i++)if(h=q[i],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}function e(a,b){return b.z-a.z}function h(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ca=C=null,S=R=ba=U=aa=-1,a[d].render(b,c,db,lb),ca=C=null,S=R=ba=U=aa=-1}function i(a,b,c,d,f,e,g,h){var i,l,j,k;b?(l=a.length-1,k=b=-1):(l=0,b=a.length,k=1);for(var n=l;n!==b;n+=k)if(i=a[n],i.render){l=i.object;j=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;\r\ng&&y.setBlending(i.blending);y.setDepthTest(i.depthTest);y.setDepthWrite(i.depthWrite);s(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}y.setObjectFaces(l);j instanceof THREE.BufferGeometry?y.renderBufferDirect(d,f,e,i,j,l):y.renderBuffer(d,f,e,i,j,l)}}function j(a,b,c,d,f,e,g){for(var h,i,l=0,j=a.length;l<j;l++)if(h=a[l],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&y.setBlending(h.blending);y.setDepthTest(h.depthTest);y.setDepthWrite(h.depthWrite);s(h.polygonOffset,h.polygonOffsetFactor,\r\nh.polygonOffsetUnits)}y.renderImmediateObject(c,d,f,h,i)}}function k(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function q(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function m(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function o(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function p(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function n(a,b,c,d,f){d.program||y.initMaterial(d,b,c,f);if(d.morphTargets&&\r\n!f.__webglMorphTargetInfluences){f.__webglMorphTargetInfluences=new Float32Array(y.maxMorphTargets);for(var e=0,g=y.maxMorphTargets;e<g;e++)f.__webglMorphTargetInfluences[e]=0}var h=!1,e=d.program,g=e.uniforms,i=d.uniforms;e!==C&&(l.useProgram(e),C=e,h=!0);if(d.id!==S)S=d.id,h=!0;if(h||a!==ca)l.uniformMatrix4fv(g.projectionMatrix,!1,a._projectionMatrixArray),a!==ca&&(ca=a);if(h){if(c&&d.fog)if(i.fogColor.value=c.color,c instanceof THREE.Fog)i.fogNear.value=c.near,i.fogFar.value=c.far;else if(c instanceof\r\nTHREE.FogExp2)i.fogDensity.value=c.density;if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){var j,k=0,n=0,m=0,o,p,q,r=sa,s=r.directional.colors,t=r.directional.positions,E=r.point.colors,u=r.point.positions,v=r.point.distances,B=0,R=0,D=q=0;for(c=0,h=b.length;c<h;c++)if(j=b[c],!j.onlyShadow)if(o=j.color,p=j.intensity,q=j.distance,j instanceof THREE.AmbientLight)y.gammaInput?(k+=o.r*o.r,n+=o.g*o.g,m+=o.b*o.b):(k+=o.r,n+=o.g,m+=o.b);else if(j instanceof THREE.DirectionalLight)q=\r\n3*B,y.gammaInput?(s[q]=o.r*o.r*p*p,s[q+1]=o.g*o.g*p*p,s[q+2]=o.b*o.b*p*p):(s[q]=o.r*p,s[q+1]=o.g*p,s[q+2]=o.b*p),La.copy(j.matrixWorld.getPosition()),La.subSelf(j.target.matrixWorld.getPosition()),La.normalize(),t[q]=La.x,t[q+1]=La.y,t[q+2]=La.z,B+=1;else if(j instanceof THREE.PointLight||j instanceof THREE.SpotLight)D=3*R,y.gammaInput?(E[D]=o.r*o.r*p*p,E[D+1]=o.g*o.g*p*p,E[D+2]=o.b*o.b*p*p):(E[D]=o.r*p,E[D+1]=o.g*p,E[D+2]=o.b*p),j=j.matrixWorld.getPosition(),u[D]=j.x,u[D+1]=j.y,u[D+2]=j.z,v[R]=q,\r\nR+=1;for(c=3*B,h=s.length;c<h;c++)s[c]=0;for(c=3*R,h=E.length;c<h;c++)E[c]=0;r.point.length=R;r.directional.length=B;r.ambient[0]=k;r.ambient[1]=n;r.ambient[2]=m;c=sa;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||\r\nd instanceof THREE.MeshPhongMaterial)i.opacity.value=d.opacity,y.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,(i.map.texture=d.map)&&i.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),i.lightMap.texture=d.lightMap,i.envMap.texture=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=\r\nd.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;if(d instanceof THREE.LineBasicMaterial)i.diffuse.value=d.color,i.opacity.value=d.opacity;else if(d instanceof THREE.ParticleBasicMaterial)i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=F.height/2,i.map.texture=d.map;else if(d instanceof THREE.MeshPhongMaterial)i.shininess.value=d.shininess,y.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.specular.value.copyGammaToLinear(d.specular)):\r\n(i.ambient.value=d.ambient,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB);else if(d instanceof THREE.MeshLambertMaterial)y.gammaInput?i.ambient.value.copyGammaToLinear(d.ambient):i.ambient.value=d.ambient,d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB);else if(d instanceof THREE.MeshDepthMaterial)i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity;else if(d instanceof THREE.MeshNormalMaterial)i.opacity.value=d.opacity;if(f.receiveShadow&&!d._shadowPass&&i.shadowMatrix){h=\r\nc=0;for(k=b.length;h<k;h++)if(n=b[h],n.castShadow&&(n instanceof THREE.SpotLight||n instanceof THREE.DirectionalLight&&!n.shadowCascade))i.shadowMap.texture[c]=n.shadowMap,i.shadowMapSize.value[c]=n.shadowMapSize,i.shadowMatrix.value[c]=n.shadowMatrix,i.shadowDarkness.value[c]=n.shadowDarkness,i.shadowBias.value[c]=n.shadowBias,c++}b=d.uniformsList;for(i=0,c=b.length;i<c;i++)if(n=e.uniforms[b[i][1]])if(h=b[i][0],m=h.type,k=h.value,\"i\"===m)l.uniform1i(n,k);else if(\"f\"===m)l.uniform1f(n,k);else if(\"v2\"===\r\nm)l.uniform2f(n,k.x,k.y);else if(\"v3\"===m)l.uniform3f(n,k.x,k.y,k.z);else if(\"v4\"===m)l.uniform4f(n,k.x,k.y,k.z,k.w);else if(\"c\"===m)l.uniform3f(n,k.r,k.g,k.b);else if(\"fv1\"===m)l.uniform1fv(n,k);else if(\"fv\"===m)l.uniform3fv(n,k);else if(\"v2v\"===m){if(!h._array)h._array=new Float32Array(2*k.length);for(m=0,r=k.length;m<r;m++)s=2*m,h._array[s]=k[m].x,h._array[s+1]=k[m].y;l.uniform2fv(n,h._array)}else if(\"v3v\"===m){if(!h._array)h._array=new Float32Array(3*k.length);for(m=0,r=k.length;m<r;m++)s=3*m,\r\nh._array[s]=k[m].x,h._array[s+1]=k[m].y,h._array[s+2]=k[m].z;l.uniform3fv(n,h._array)}else if(\"v4v\"==m){if(!h._array)h._array=new Float32Array(4*k.length);for(m=0,r=k.length;m<r;m++)s=4*m,h._array[s]=k[m].x,h._array[s+1]=k[m].y,h._array[s+2]=k[m].z,h._array[s+3]=k[m].w;l.uniform4fv(n,h._array)}else if(\"m4\"===m){if(!h._array)h._array=new Float32Array(16);k.flattenToArray(h._array);l.uniformMatrix4fv(n,!1,h._array)}else if(\"m4v\"===m){if(!h._array)h._array=new Float32Array(16*k.length);for(m=0,r=k.length;m<\r\nr;m++)k[m].flattenToArrayOffset(h._array,16*m);l.uniformMatrix4fv(n,!1,h._array)}else if(\"t\"===m){if(l.uniform1i(n,k),n=h.texture)if(n.image instanceof Array&&6===n.image.length){if(h=n,6===h.image.length)if(h.needsUpdate){if(!h.image.__webglTextureCube)h.image.__webglTextureCube=l.createTexture();l.activeTexture(l.TEXTURE0+k);l.bindTexture(l.TEXTURE_CUBE_MAP,h.image.__webglTextureCube);k=[];for(n=0;6>n;n++){m=k;r=n;if(y.autoScaleCubemaps){if(s=h.image[n],E=Ea,!(s.width<=E&&s.height<=E))u=Math.max(s.width,\r\ns.height),t=Math.floor(s.width*E/u),E=Math.floor(s.height*E/u),u=document.createElement(\"canvas\"),u.width=t,u.height=E,u.getContext(\"2d\").drawImage(s,0,0,s.width,s.height,0,0,t,E),s=u}else s=h.image[n];m[r]=s}n=k[0];m=0===(n.width&n.width-1)&&0===(n.height&n.height-1);r=A(h.format);s=A(h.type);w(l.TEXTURE_CUBE_MAP,h,m);for(n=0;6>n;n++)l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,r,s,k[n]);h.generateMipmaps&&m&&l.generateMipmap(l.TEXTURE_CUBE_MAP);h.needsUpdate=!1;if(h.onUpdate)h.onUpdate()}else l.activeTexture(l.TEXTURE0+\r\nk),l.bindTexture(l.TEXTURE_CUBE_MAP,h.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(h=n,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,h.__webglTexture)):y.setTexture(n,k)}else if(\"tv\"===m){if(!h._array){h._array=[];for(m=0,r=h.texture.length;m<r;m++)h._array[m]=k+m}l.uniform1iv(n,h._array);for(m=0,r=h.texture.length;m<r;m++)(n=h.texture[m])&&y.setTexture(n,h._array[m])}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&\r\nnull!==g.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(g.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==g.viewMatrix&&l.uniformMatrix4fv(g.viewMatrix,!1,a._viewMatrixArray);d.skinning&&l.uniformMatrix4fv(g.boneGlobalMatrices,!1,f.boneMatrices)}l.uniformMatrix4fv(g.modelViewMatrix,!1,f._modelViewMatrixArray);g.normalMatrix&&l.uniformMatrix3fv(g.normalMatrix,!1,f._normalMatrixArray);\r\n(d instanceof THREE.ShaderMaterial||d.envMap||d.skinning||f.receiveShadow)&&null!==g.objectMatrix&&l.uniformMatrix4fv(g.objectMatrix,!1,f._objectMatrixArray);return e}function r(a,b){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);var c=THREE.Matrix4.makeInvert3x3(a._modelViewMatrix);c&&c.transposeIntoArray(a._normalMatrixArray)}function s(a,b,c){ea!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),ea=a);if(a&&(Ta!==b||Ja!==c))l.polygonOffset(b,\r\nc),Ta=b,Ja=c}function t(a,b){var c;\"fragment\"===a?c=l.createShader(l.FRAGMENT_SHADER):\"vertex\"===a&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(b),null):c}function w(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,A(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,A(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,A(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,A(b.minFilter))):\r\n(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,v(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,v(b.minFilter)))}function u(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,\r\nl.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function v(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return l.NEAREST;default:return l.LINEAR}}function A(a){switch(a){case THREE.RepeatWrapping:return l.REPEAT;case THREE.ClampToEdgeWrapping:return l.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return l.MIRRORED_REPEAT;\r\ncase THREE.NearestFilter:return l.NEAREST;case THREE.NearestMipMapNearestFilter:return l.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return l.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return l.LINEAR;case THREE.LinearMipMapNearestFilter:return l.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return l.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return l.BYTE;case THREE.UnsignedByteType:return l.UNSIGNED_BYTE;case THREE.ShortType:return l.SHORT;case THREE.UnsignedShortType:return l.UNSIGNED_SHORT;\r\ncase THREE.IntType:return l.INT;case THREE.UnsignedIntType:return l.UNSIGNED_INT;case THREE.FloatType:return l.FLOAT;case THREE.AlphaFormat:return l.ALPHA;case THREE.RGBFormat:return l.RGB;case THREE.RGBAFormat:return l.RGBA;case THREE.LuminanceFormat:return l.LUMINANCE;case THREE.LuminanceAlphaFormat:return l.LUMINANCE_ALPHA}return 0}var a=a||{},F=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),B=void 0!==a.precision?a.precision:\"mediump\",D=void 0!==a.alpha?a.alpha:!0,H=void 0!==a.premultipliedAlpha?\r\na.premultipliedAlpha:!0,I=void 0!==a.antialias?a.antialias:!1,Q=void 0!==a.stencil?a.stencil:!0,P=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,L=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),K=void 0!==a.clearAlpha?a.clearAlpha:0,O=void 0!==a.maxLights?a.maxLights:4;this.domElement=F;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=\r\nthis.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var y=this,l,$=[],C=null,E=null,S=-1,R=null,ca=null,ka=0,ia=null,N=null,aa=null,U=null,ba=null,\r\nea=null,Ta=null,Ja=null,Ka=null,Ga=0,qa=0,ha=0,ib=0,db=0,lb=0,cb=new THREE.Frustum,Za=new THREE.Matrix4,Sa=new THREE.Vector4,La=new THREE.Vector3,sa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}};l=function(){var a;try{if(!(a=F.getContext(\"experimental-webgl\",{alpha:D,premultipliedAlpha:H,antialias:I,stencil:Q,preserveDrawingBuffer:P})))throw\"Error creating WebGL context.\";console.log(navigator.userAgent+\" | \"+a.getParameter(a.VERSION)+\r\n\" | \"+a.getParameter(a.VENDOR)+\" | \"+a.getParameter(a.RENDERER)+\" | \"+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(L.r,L.g,L.b,K);this.context=l;var za=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\nl.getParameter(l.MAX_TEXTURE_SIZE);var Ea=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return l};this.supportsVertexTextures=function(){return 0<za};this.setSize=function(a,b){F.width=a;F.height=b;this.setViewport(0,0,F.width,F.height)};this.setViewport=function(a,b,c,d){Ga=a;qa=b;ha=c;ib=d;l.viewport(Ga,qa,ha,ib)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=\r\nfunction(a,b){L.setHex(a);K=b;l.clearColor(L.r,L.g,L.b,K)};this.setClearColor=function(a,b){L.copy(a);K=b;l.clearColor(L.r,L.g,L.b,K)};this.getClearColor=function(){return L};this.getClearAlpha=function(){return K};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);\r\nthis.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);\r\nl.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinVertexABuffer);l.deleteBuffer(c.__webglSkinVertexBBuffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);l.deleteBuffer(c.__webglLineBuffer);var d=void 0,f=void 0;if(c.numMorphTargets)for(d=0,f=c.numMorphTargets;d<f;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.numMorphNormals)for(d=\r\n0,f=c.numMorphNormals;d<f;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer);y.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),y.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),\r\ny.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),y.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,l.deleteTexture(a.__webglTexture),y.info.memory.textures--};this.updateShadowMap=function(a,b){C=null;S=R=ba=U=aa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=l.createBuffer();\r\nif(!a.__webglNormalBuffer)a.__webglNormalBuffer=l.createBuffer();a.hasPos&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormal){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,f,e,g,h,i,j,k,n,m,o=3*a.count;for(m=0;m<o;m+=9)c=a.normalArray,d=c[m],f=c[m+1],e=c[m+2],g=c[m+3],i=c[m+\r\n4],k=c[m+5],h=c[m+6],j=c[m+7],n=c[m+8],d=(d+g+h)/3,f=(f+i+j)/3,e=(e+k+n)/3,c[m]=d,c[m+1]=f,c[m+2]=e,c[m+3]=d,c[m+4]=f,c[m+5]=e,c[m+6]=d,c[m+7]=f,c[m+8]=e}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,f,e){if(0!==d.opacity&&(c=n(a,b,c,d,e),a=c.attributes,b=!1,d=16777215*f.id+2*c.id+(d.wireframe?\r\n1:0),d!==R&&(R=d,b=!0),e instanceof THREE.Mesh)){e=f.offsets;d=0;for(c=e.length;d<c;++d)b&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexPositionBuffer),l.vertexAttribPointer(a.position,f.vertexPositionBuffer.itemSize,l.FLOAT,!1,0,12*e[d].index),0<=a.normal&&f.vertexNormalBuffer&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexNormalBuffer),l.vertexAttribPointer(a.normal,f.vertexNormalBuffer.itemSize,l.FLOAT,!1,0,12*e[d].index)),0<=a.uv&&f.vertexUvBuffer&&(f.vertexUvBuffer?(l.bindBuffer(l.ARRAY_BUFFER,f.vertexUvBuffer),\r\nl.vertexAttribPointer(a.uv,f.vertexUvBuffer.itemSize,l.FLOAT,!1,0,8*e[d].index),l.enableVertexAttribArray(a.uv)):l.disableVertexAttribArray(a.uv)),0<=a.color&&f.vertexColorBuffer&&(l.bindBuffer(l.ARRAY_BUFFER,f.vertexColorBuffer),l.vertexAttribPointer(a.color,f.vertexColorBuffer.itemSize,l.FLOAT,!1,0,16*e[d].index)),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.vertexIndexBuffer)),l.drawElements(l.TRIANGLES,e[d].count,l.UNSIGNED_SHORT,2*e[d].start),y.info.render.calls++,y.info.render.vertices+=e[d].count,\r\ny.info.render.faces+=e[d].count/3}};this.renderBuffer=function(a,b,c,d,f,e){if(0!==d.opacity){var g,h,c=n(a,b,c,d,e),b=c.attributes,a=!1,c=16777215*f.id+2*c.id+(d.wireframe?1:0);c!==R&&(R=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(e.morphTargetBase){c=d.program.attributes;-1!==e.morphTargetBase?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[e.morphTargetBase]),l.vertexAttribPointer(c.position,\r\n3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglVertexBuffer),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(e.morphTargetForcedOrder.length){g=0;var i=e.morphTargetForcedOrder;for(h=e.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<i.length;)l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[i[g]]),l.vertexAttribPointer(c[\"morphTarget\"+g],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[i[g]]),l.vertexAttribPointer(c[\"morphNormal\"+\r\ng],3,l.FLOAT,!1,0,0)),e.__webglMorphTargetInfluences[g]=h[i[g]],g++}else{var i=[],j=-1,k=0;h=e.morphTargetInfluences;var m,o=h.length;g=0;for(-1!==e.morphTargetBase&&(i[e.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(m=0;m<o;m++)!i[m]&&h[m]>j&&(k=m,j=h[k]);l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[k]);l.vertexAttribPointer(c[\"morphTarget\"+g],3,l.FLOAT,!1,0,0);d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[k]),l.vertexAttribPointer(c[\"morphNormal\"+\r\ng],3,l.FLOAT,!1,0,0));e.__webglMorphTargetInfluences[g]=j;i[k]=1;j=-1;g++}}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,e.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList)for(g=0,h=f.__webglCustomAttributesList.length;g<h;g++)c=f.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0));0<=b.color&&\r\n(l.bindBuffer(l.ARRAY_BUFFER,f.__webglColorBuffer),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglNormalBuffer),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglTangentBuffer),l.vertexAttribPointer(b.tangent,4,l.FLOAT,!1,0,0));0<=b.uv&&(f.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglUVBuffer),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv)):l.disableVertexAttribArray(b.uv));\r\n0<=b.uv2&&(f.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,f.__webglUV2Buffer),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv2)):l.disableVertexAttribArray(b.uv2));d.skinning&&0<=b.skinVertexA&&0<=b.skinVertexB&&0<=b.skinIndex&&0<=b.skinWeight&&(l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinVertexABuffer),l.vertexAttribPointer(b.skinVertexA,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),l.vertexAttribPointer(b.skinVertexB,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,\r\nf.__webglSkinIndicesBuffer),l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0))}e instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Ka&&(l.lineWidth(d),Ka=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),l.drawElements(l.LINES,f.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),l.drawElements(l.TRIANGLES,f.__webglFaceCount,\r\nl.UNSIGNED_SHORT,0)),y.info.render.calls++,y.info.render.vertices+=f.__webglFaceCount,y.info.render.faces+=f.__webglFaceCount/3):e instanceof THREE.Line?(e=e.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==Ka&&(l.lineWidth(d),Ka=d),l.drawArrays(e,0,f.__webglLineCount),y.info.render.calls++):e instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,f.__webglParticleCount),y.info.render.calls++,y.info.render.points+=f.__webglParticleCount):e instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,\r\n0,f.__webglVertexCount),y.info.render.calls++)}};this.render=function(a,b,c,d){var f,g,k,m,n=a.__lights,o=a.fog;S=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);void 0===b.parent&&(console.warn(\"DEPRECATED: Camera hasn't been added to a Scene. Adding it...\"),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();h(this.renderPluginsPre,a,b);y.info.render.calls=0;y.info.render.vertices=0;y.info.render.faces=0;y.info.render.points=0;b.matrixWorldInverse.getInverse(b.matrixWorld);if(!b._viewMatrixArray)b._viewMatrixArray=\r\nnew Float32Array(16);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);if(!b._projectionMatrixArray)b._projectionMatrixArray=new Float32Array(16);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Za.multiply(b.projectionMatrix,b.matrixWorldInverse);cb.setFromMatrix(Za);this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);m=a.__webglObjects;for(d=0,f=m.length;d<f;d++)if(g=m[d],k=g.object,g.render=!1,k.visible&&(!(k instanceof\r\nTHREE.Mesh||k instanceof THREE.ParticleSystem)||!k.frustumCulled||cb.contains(k))){k.matrixWorld.flattenToArray(k._objectMatrixArray);r(k,b);var p=g,q=p.object,t=p.buffer,E=void 0,E=E=void 0,E=q.material;if(E instanceof THREE.MeshFaceMaterial){if(E=t.materialIndex,0<=E)E=q.geometry.materials[E],E.transparent?(p.transparent=E,p.opaque=null):(p.opaque=E,p.transparent=null)}else if(E)E.transparent?(p.transparent=E,p.opaque=null):(p.opaque=E,p.transparent=null);g.render=!0;if(this.sortObjects)k.renderDepth?\r\ng.z=k.renderDepth:(Sa.copy(k.position),Za.multiplyVector3(Sa),g.z=Sa.z)}this.sortObjects&&m.sort(e);m=a.__webglObjectsImmediate;for(d=0,f=m.length;d<f;d++)if(g=m[d],k=g.object,k.visible)k.matrixAutoUpdate&&k.matrixWorld.flattenToArray(k._objectMatrixArray),r(k,b),k=g.object.material,k.transparent?(g.transparent=k,g.opaque=null):(g.opaque=k,g.transparent=null);a.overrideMaterial?(this.setBlending(a.overrideMaterial.blending),this.setDepthTest(a.overrideMaterial.depthTest),this.setDepthWrite(a.overrideMaterial.depthWrite),\r\ns(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),i(a.__webglObjects,!1,\"\",b,n,o,!0,a.overrideMaterial),j(a.__webglObjectsImmediate,\"\",b,n,o,!1,a.overrideMaterial)):(this.setBlending(THREE.NormalBlending),i(a.__webglObjects,!0,\"opaque\",b,n,o,!1),j(a.__webglObjectsImmediate,\"opaque\",b,n,o,!1),i(a.__webglObjects,!1,\"transparent\",b,n,o,!0),j(a.__webglObjectsImmediate,\"transparent\",b,n,o,!0));h(this.renderPluginsPost,a,b);c&&c.generateMipmaps&&\r\nc.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)};this.renderImmediateObject=function(a,b,c,d,f){var e=n(a,b,c,d,f);R=-1;y.setObjectFaces(f);f.immediateRenderCallback?\r\nf.immediateRenderCallback(e,l,cb):f.render(function(a){y.renderBufferImmediate(a,e,d.shading)})};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[];for(;a.__objectsAdded.length;){var e=a.__objectsAdded[0],h=a,i=void 0,j=void 0,n=void 0;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrixArray=new Float32Array(9),e._modelViewMatrixArray=new Float32Array(16),e._objectMatrixArray=\r\nnew Float32Array(16),e.matrixWorld.flattenToArray(e._objectMatrixArray),e instanceof THREE.Mesh){if(j=e.geometry,j instanceof THREE.Geometry){if(void 0===j.geometryGroups){var r=j,s=void 0,t=void 0,E=void 0,u=void 0,v=void 0,w=void 0,C=void 0,B={},D=r.morphTargets.length,R=r.morphNormals.length;r.geometryGroups={};for(s=0,t=r.faces.length;s<t;s++)E=r.faces[s],u=E.materialIndex,w=void 0!==u?u:-1,void 0===B[w]&&(B[w]={hash:w,counter:0}),C=B[w].hash+\"_\"+B[w].counter,void 0===r.geometryGroups[C]&&(r.geometryGroups[C]=\r\n{faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:D,numMorphNormals:R}),v=E instanceof THREE.Face3?3:4,65535<r.geometryGroups[C].vertices+v&&(B[w].counter+=1,C=B[w].hash+\"_\"+B[w].counter,void 0===r.geometryGroups[C]&&(r.geometryGroups[C]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:D,numMorphNormals:R})),E instanceof THREE.Face3?r.geometryGroups[C].faces3.push(s):r.geometryGroups[C].faces4.push(s),r.geometryGroups[C].vertices+=v;r.geometryGroupsList=[];var A=void 0;\r\nfor(A in r.geometryGroups)r.geometryGroups[A].id=ka++,r.geometryGroupsList.push(r.geometryGroups[A])}for(i in j.geometryGroups)if(n=j.geometryGroups[i],!n.__webglVertexBuffer){var S=n;S.__webglVertexBuffer=l.createBuffer();S.__webglNormalBuffer=l.createBuffer();S.__webglTangentBuffer=l.createBuffer();S.__webglColorBuffer=l.createBuffer();S.__webglUVBuffer=l.createBuffer();S.__webglUV2Buffer=l.createBuffer();S.__webglSkinVertexABuffer=l.createBuffer();S.__webglSkinVertexBBuffer=l.createBuffer();S.__webglSkinIndicesBuffer=\r\nl.createBuffer();S.__webglSkinWeightsBuffer=l.createBuffer();S.__webglFaceBuffer=l.createBuffer();S.__webglLineBuffer=l.createBuffer();var F=void 0,H=void 0;if(S.numMorphTargets){S.__webglMorphTargetsBuffers=[];for(F=0,H=S.numMorphTargets;F<H;F++)S.__webglMorphTargetsBuffers.push(l.createBuffer())}if(S.numMorphNormals){S.__webglMorphNormalsBuffers=[];for(F=0,H=S.numMorphNormals;F<H;F++)S.__webglMorphNormalsBuffers.push(l.createBuffer())}y.info.memory.geometries++;var N=n,I=e,K=I.geometry,ca=N.faces3,\r\nO=N.faces4,L=3*ca.length+4*O.length,P=1*ca.length+2*O.length,ia=3*ca.length+4*O.length,U=c(I,N),Q=f(U),aa=d(U),ba=U.vertexColors?U.vertexColors:!1;N.__vertexArray=new Float32Array(3*L);if(aa)N.__normalArray=new Float32Array(3*L);if(K.hasTangents)N.__tangentArray=new Float32Array(4*L);if(ba)N.__colorArray=new Float32Array(3*L);if(Q){if(0<K.faceUvs.length||0<K.faceVertexUvs.length)N.__uvArray=new Float32Array(2*L);if(1<K.faceUvs.length||1<K.faceVertexUvs.length)N.__uv2Array=new Float32Array(2*L)}if(I.geometry.skinWeights.length&&\r\nI.geometry.skinIndices.length)N.__skinVertexAArray=new Float32Array(4*L),N.__skinVertexBArray=new Float32Array(4*L),N.__skinIndexArray=new Float32Array(4*L),N.__skinWeightArray=new Float32Array(4*L);N.__faceArray=new Uint16Array(3*P);N.__lineArray=new Uint16Array(2*ia);var ea=void 0,$=void 0;if(N.numMorphTargets){N.__morphTargetsArrays=[];for(ea=0,$=N.numMorphTargets;ea<$;ea++)N.__morphTargetsArrays.push(new Float32Array(3*L))}if(N.numMorphNormals){N.__morphNormalsArrays=[];for(ea=0,$=N.numMorphNormals;ea<\r\n$;ea++)N.__morphNormalsArrays.push(new Float32Array(3*L))}N.__webglFaceCount=3*P;N.__webglLineCount=2*ia;if(U.attributes){if(void 0===N.__webglCustomAttributesList)N.__webglCustomAttributesList=[];var Ja=void 0;for(Ja in U.attributes){var Ta=U.attributes[Ja],ha={},Ka;for(Ka in Ta)ha[Ka]=Ta[Ka];if(!ha.__webglInitialized||ha.createUniqueBuffers){ha.__webglInitialized=!0;var qa=1;\"v2\"===ha.type?qa=2:\"v3\"===ha.type?qa=3:\"v4\"===ha.type?qa=4:\"c\"===ha.type&&(qa=3);ha.size=qa;ha.array=new Float32Array(L*\r\nqa);ha.buffer=l.createBuffer();ha.buffer.belongsToAttribute=Ja;Ta.needsUpdate=!0;ha.__original=Ta}N.__webglCustomAttributesList.push(ha)}}N.__inittedArrays=!0;j.__dirtyVertices=!0;j.__dirtyMorphTargets=!0;j.__dirtyElements=!0;j.__dirtyUvs=!0;j.__dirtyNormals=!0;j.__dirtyTangents=!0;j.__dirtyColors=!0}}}else if(e instanceof THREE.Ribbon){if(j=e.geometry,!j.__webglVertexBuffer){var Ga=j;Ga.__webglVertexBuffer=l.createBuffer();Ga.__webglColorBuffer=l.createBuffer();y.info.memory.geometries++;var sa=\r\nj,za=sa.vertices.length;sa.__vertexArray=new Float32Array(3*za);sa.__colorArray=new Float32Array(3*za);sa.__webglVertexCount=za;j.__dirtyVertices=!0;j.__dirtyColors=!0}}else if(e instanceof THREE.Line){if(j=e.geometry,!j.__webglVertexBuffer){var La=j;La.__webglVertexBuffer=l.createBuffer();La.__webglColorBuffer=l.createBuffer();y.info.memory.geometries++;var Ea=j,ib=e,db=Ea.vertices.length;Ea.__vertexArray=new Float32Array(3*db);Ea.__colorArray=new Float32Array(3*db);Ea.__webglLineCount=db;b(Ea,ib);\r\nj.__dirtyVertices=!0;j.__dirtyColors=!0}}else if(e instanceof THREE.ParticleSystem&&(j=e.geometry,!j.__webglVertexBuffer)){var Za=j;Za.__webglVertexBuffer=l.createBuffer();Za.__webglColorBuffer=l.createBuffer();y.info.geometries++;var Sa=j,lb=e,cb=Sa.vertices.length;Sa.__vertexArray=new Float32Array(3*cb);Sa.__colorArray=new Float32Array(3*cb);Sa.__sortArray=[];Sa.__webglParticleCount=cb;b(Sa,lb);j.__dirtyVertices=!0;j.__dirtyColors=!0}if(!e.__webglActive){if(e instanceof THREE.Mesh)if(j=e.geometry,\r\nj instanceof THREE.BufferGeometry)k(h.__webglObjects,j,e);else for(i in j.geometryGroups)n=j.geometryGroups[i],k(h.__webglObjects,n,e);else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(j=e.geometry,k(h.__webglObjects,j,e)):void 0!==THREE.MarchingCubes&&e instanceof THREE.MarchingCubes||e.immediateRenderCallback?h.__webglObjectsImmediate.push({object:e,opaque:null,transparent:null}):e instanceof THREE.Sprite?h.__webglSprites.push(e):e instanceof THREE.LensFlare&&\r\nh.__webglFlares.push(e);e.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var fb=a.__objectsRemoved[0],Fc=a;fb instanceof THREE.Mesh||fb instanceof THREE.ParticleSystem||fb instanceof THREE.Ribbon||fb instanceof THREE.Line?o(Fc.__webglObjects,fb):fb instanceof THREE.Sprite?p(Fc.__webglSprites,fb):fb instanceof THREE.LensFlare?p(Fc.__webglFlares,fb):(fb instanceof THREE.MarchingCubes||fb.immediateRenderCallback)&&o(Fc.__webglObjectsImmediate,fb);fb.__webglActive=!1;a.__objectsRemoved.splice(0,\r\n1)}for(var Wc=0,rd=a.__webglObjects.length;Wc<rd;Wc++){var nb=a.__webglObjects[Wc].object,ja=nb.geometry,qc=void 0,ic=void 0,Xa=void 0;if(nb instanceof THREE.Mesh)if(ja instanceof THREE.BufferGeometry)ja.__dirtyVertices=!1,ja.__dirtyElements=!1,ja.__dirtyUvs=!1,ja.__dirtyNormals=!1,ja.__dirtyColors=!1;else{for(var Xc=0,sd=ja.geometryGroupsList.length;Xc<sd;Xc++)if(qc=ja.geometryGroupsList[Xc],Xa=c(nb,qc),ic=Xa.attributes&&q(Xa),ja.__dirtyVertices||ja.__dirtyMorphTargets||ja.__dirtyElements||ja.__dirtyUvs||\r\nja.__dirtyNormals||ja.__dirtyColors||ja.__dirtyTangents||ic){var fa=qc,td=nb,$a=l.DYNAMIC_DRAW,ud=!ja.dynamic,bc=Xa;if(fa.__inittedArrays){var gd=d(bc),Yc=bc.vertexColors?bc.vertexColors:!1,hd=f(bc),Gc=gd===THREE.SmoothShading,G=void 0,V=void 0,kb=void 0,M=void 0,jc=void 0,Ob=void 0,ob=void 0,Hc=void 0,Hb=void 0,kc=void 0,lc=void 0,W=void 0,X=void 0,Y=void 0,oa=void 0,pb=void 0,qb=void 0,rb=void 0,rc=void 0,sb=void 0,tb=void 0,ub=void 0,sc=void 0,vb=void 0,wb=void 0,xb=void 0,tc=void 0,yb=void 0,\r\nzb=void 0,Ab=void 0,uc=void 0,Bb=void 0,Cb=void 0,Db=void 0,vc=void 0,Pb=void 0,Qb=void 0,Rb=void 0,Ic=void 0,Sb=void 0,Tb=void 0,Ub=void 0,Jc=void 0,la=void 0,id=void 0,Vb=void 0,mc=void 0,nc=void 0,Ma=void 0,jd=void 0,Ha=void 0,Ia=void 0,Wb=void 0,Ib=void 0,Aa=0,Da=0,Jb=0,Kb=0,gb=0,Ra=0,pa=0,Ua=0,Ba=0,J=0,da=0,z=0,ab=void 0,Na=fa.__vertexArray,wc=fa.__uvArray,xc=fa.__uv2Array,hb=fa.__normalArray,ta=fa.__tangentArray,Oa=fa.__colorArray,ua=fa.__skinVertexAArray,va=fa.__skinVertexBArray,wa=fa.__skinIndexArray,\r\nxa=fa.__skinWeightArray,Zc=fa.__morphTargetsArrays,$c=fa.__morphNormalsArrays,ad=fa.__webglCustomAttributesList,x=void 0,Eb=fa.__faceArray,bb=fa.__lineArray,Va=td.geometry,vd=Va.__dirtyElements,kd=Va.__dirtyUvs,wd=Va.__dirtyNormals,xd=Va.__dirtyTangents,yd=Va.__dirtyColors,zd=Va.__dirtyMorphTargets,cc=Va.vertices,ma=fa.faces3,na=fa.faces4,Ca=Va.faces,bd=Va.faceVertexUvs[0],cd=Va.faceVertexUvs[1],dc=Va.skinVerticesA,ec=Va.skinVerticesB,fc=Va.skinIndices,Xb=Va.skinWeights,Yb=Va.morphTargets,Kc=Va.morphNormals;\r\nif(Va.__dirtyVertices){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=cc[M.a].position,X=cc[M.b].position,Y=cc[M.c].position,Na[Da]=W.x,Na[Da+1]=W.y,Na[Da+2]=W.z,Na[Da+3]=X.x,Na[Da+4]=X.y,Na[Da+5]=X.z,Na[Da+6]=Y.x,Na[Da+7]=Y.y,Na[Da+8]=Y.z,Da+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=cc[M.a].position,X=cc[M.b].position,Y=cc[M.c].position,oa=cc[M.d].position,Na[Da]=W.x,Na[Da+1]=W.y,Na[Da+2]=W.z,Na[Da+3]=X.x,Na[Da+4]=X.y,Na[Da+5]=X.z,Na[Da+6]=Y.x,Na[Da+7]=Y.y,Na[Da+8]=Y.z,Na[Da+9]=oa.x,Na[Da+10]=oa.y,\r\nNa[Da+11]=oa.z,Da+=12;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Na,$a)}if(zd)for(Ma=0,jd=Yb.length;Ma<jd;Ma++){da=0;for(G=0,V=ma.length;G<V;G++){Wb=ma[G];M=Ca[Wb];W=Yb[Ma].vertices[M.a].position;X=Yb[Ma].vertices[M.b].position;Y=Yb[Ma].vertices[M.c].position;Ha=Zc[Ma];Ha[da]=W.x;Ha[da+1]=W.y;Ha[da+2]=W.z;Ha[da+3]=X.x;Ha[da+4]=X.y;Ha[da+5]=X.z;Ha[da+6]=Y.x;Ha[da+7]=Y.y;Ha[da+8]=Y.z;if(bc.morphNormals)Gc?(Ib=Kc[Ma].vertexNormals[Wb],sb=Ib.a,tb=Ib.b,ub=Ib.c):ub=\r\ntb=sb=Kc[Ma].faceNormals[Wb],Ia=$c[Ma],Ia[da]=sb.x,Ia[da+1]=sb.y,Ia[da+2]=sb.z,Ia[da+3]=tb.x,Ia[da+4]=tb.y,Ia[da+5]=tb.z,Ia[da+6]=ub.x,Ia[da+7]=ub.y,Ia[da+8]=ub.z;da+=9}for(G=0,V=na.length;G<V;G++){Wb=na[G];M=Ca[Wb];W=Yb[Ma].vertices[M.a].position;X=Yb[Ma].vertices[M.b].position;Y=Yb[Ma].vertices[M.c].position;oa=Yb[Ma].vertices[M.d].position;Ha=Zc[Ma];Ha[da]=W.x;Ha[da+1]=W.y;Ha[da+2]=W.z;Ha[da+3]=X.x;Ha[da+4]=X.y;Ha[da+5]=X.z;Ha[da+6]=Y.x;Ha[da+7]=Y.y;Ha[da+8]=Y.z;Ha[da+9]=oa.x;Ha[da+10]=oa.y;Ha[da+\r\n11]=oa.z;if(bc.morphNormals)Gc?(Ib=Kc[Ma].vertexNormals[Wb],sb=Ib.a,tb=Ib.b,ub=Ib.c,sc=Ib.d):sc=ub=tb=sb=Kc[Ma].faceNormals[Wb],Ia=$c[Ma],Ia[da]=sb.x,Ia[da+1]=sb.y,Ia[da+2]=sb.z,Ia[da+3]=tb.x,Ia[da+4]=tb.y,Ia[da+5]=tb.z,Ia[da+6]=ub.x,Ia[da+7]=ub.y,Ia[da+8]=ub.z,Ia[da+9]=sc.x,Ia[da+10]=sc.y,Ia[da+11]=sc.z;da+=12}l.bindBuffer(l.ARRAY_BUFFER,fa.__webglMorphTargetsBuffers[Ma]);l.bufferData(l.ARRAY_BUFFER,Zc[Ma],$a);bc.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglMorphNormalsBuffers[Ma]),l.bufferData(l.ARRAY_BUFFER,\r\n$c[Ma],$a))}if(Xb.length){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],yb=Xb[M.a],zb=Xb[M.b],Ab=Xb[M.c],xa[J]=yb.x,xa[J+1]=yb.y,xa[J+2]=yb.z,xa[J+3]=yb.w,xa[J+4]=zb.x,xa[J+5]=zb.y,xa[J+6]=zb.z,xa[J+7]=zb.w,xa[J+8]=Ab.x,xa[J+9]=Ab.y,xa[J+10]=Ab.z,xa[J+11]=Ab.w,Bb=fc[M.a],Cb=fc[M.b],Db=fc[M.c],wa[J]=Bb.x,wa[J+1]=Bb.y,wa[J+2]=Bb.z,wa[J+3]=Bb.w,wa[J+4]=Cb.x,wa[J+5]=Cb.y,wa[J+6]=Cb.z,wa[J+7]=Cb.w,wa[J+8]=Db.x,wa[J+9]=Db.y,wa[J+10]=Db.z,wa[J+11]=Db.w,Pb=dc[M.a],Qb=dc[M.b],Rb=dc[M.c],ua[J]=Pb.x,ua[J+1]=Pb.y,\r\nua[J+2]=Pb.z,ua[J+3]=1,ua[J+4]=Qb.x,ua[J+5]=Qb.y,ua[J+6]=Qb.z,ua[J+7]=1,ua[J+8]=Rb.x,ua[J+9]=Rb.y,ua[J+10]=Rb.z,ua[J+11]=1,Sb=ec[M.a],Tb=ec[M.b],Ub=ec[M.c],va[J]=Sb.x,va[J+1]=Sb.y,va[J+2]=Sb.z,va[J+3]=1,va[J+4]=Tb.x,va[J+5]=Tb.y,va[J+6]=Tb.z,va[J+7]=1,va[J+8]=Ub.x,va[J+9]=Ub.y,va[J+10]=Ub.z,va[J+11]=1,J+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],yb=Xb[M.a],zb=Xb[M.b],Ab=Xb[M.c],uc=Xb[M.d],xa[J]=yb.x,xa[J+1]=yb.y,xa[J+2]=yb.z,xa[J+3]=yb.w,xa[J+4]=zb.x,xa[J+5]=zb.y,xa[J+6]=zb.z,xa[J+7]=zb.w,xa[J+8]=\r\nAb.x,xa[J+9]=Ab.y,xa[J+10]=Ab.z,xa[J+11]=Ab.w,xa[J+12]=uc.x,xa[J+13]=uc.y,xa[J+14]=uc.z,xa[J+15]=uc.w,Bb=fc[M.a],Cb=fc[M.b],Db=fc[M.c],vc=fc[M.d],wa[J]=Bb.x,wa[J+1]=Bb.y,wa[J+2]=Bb.z,wa[J+3]=Bb.w,wa[J+4]=Cb.x,wa[J+5]=Cb.y,wa[J+6]=Cb.z,wa[J+7]=Cb.w,wa[J+8]=Db.x,wa[J+9]=Db.y,wa[J+10]=Db.z,wa[J+11]=Db.w,wa[J+12]=vc.x,wa[J+13]=vc.y,wa[J+14]=vc.z,wa[J+15]=vc.w,Pb=dc[M.a],Qb=dc[M.b],Rb=dc[M.c],Ic=dc[M.d],ua[J]=Pb.x,ua[J+1]=Pb.y,ua[J+2]=Pb.z,ua[J+3]=1,ua[J+4]=Qb.x,ua[J+5]=Qb.y,ua[J+6]=Qb.z,ua[J+7]=1,ua[J+\r\n8]=Rb.x,ua[J+9]=Rb.y,ua[J+10]=Rb.z,ua[J+11]=1,ua[J+12]=Ic.x,ua[J+13]=Ic.y,ua[J+14]=Ic.z,ua[J+15]=1,Sb=ec[M.a],Tb=ec[M.b],Ub=ec[M.c],Jc=ec[M.d],va[J]=Sb.x,va[J+1]=Sb.y,va[J+2]=Sb.z,va[J+3]=1,va[J+4]=Tb.x,va[J+5]=Tb.y,va[J+6]=Tb.z,va[J+7]=1,va[J+8]=Ub.x,va[J+9]=Ub.y,va[J+10]=Ub.z,va[J+11]=1,va[J+12]=Jc.x,va[J+13]=Jc.y,va[J+14]=Jc.z,va[J+15]=1,J+=16;0<J&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinVertexABuffer),l.bufferData(l.ARRAY_BUFFER,ua,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinVertexBBuffer),\r\nl.bufferData(l.ARRAY_BUFFER,va,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,wa,$a),l.bindBuffer(l.ARRAY_BUFFER,fa.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,xa,$a))}if(yd&&Yc){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],ob=M.vertexColors,Hc=M.color,3===ob.length&&Yc===THREE.VertexColors?(vb=ob[0],wb=ob[1],xb=ob[2]):xb=wb=vb=Hc,Oa[Ba]=vb.r,Oa[Ba+1]=vb.g,Oa[Ba+2]=vb.b,Oa[Ba+3]=wb.r,Oa[Ba+4]=wb.g,Oa[Ba+5]=wb.b,Oa[Ba+6]=xb.r,Oa[Ba+7]=xb.g,Oa[Ba+8]=xb.b,\r\nBa+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],ob=M.vertexColors,Hc=M.color,4===ob.length&&Yc===THREE.VertexColors?(vb=ob[0],wb=ob[1],xb=ob[2],tc=ob[3]):tc=xb=wb=vb=Hc,Oa[Ba]=vb.r,Oa[Ba+1]=vb.g,Oa[Ba+2]=vb.b,Oa[Ba+3]=wb.r,Oa[Ba+4]=wb.g,Oa[Ba+5]=wb.b,Oa[Ba+6]=xb.r,Oa[Ba+7]=xb.g,Oa[Ba+8]=xb.b,Oa[Ba+9]=tc.r,Oa[Ba+10]=tc.g,Oa[Ba+11]=tc.b,Ba+=12;0<Ba&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,Oa,$a))}if(xd&&Va.hasTangents){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],Hb=\r\nM.vertexTangents,pb=Hb[0],qb=Hb[1],rb=Hb[2],ta[pa]=pb.x,ta[pa+1]=pb.y,ta[pa+2]=pb.z,ta[pa+3]=pb.w,ta[pa+4]=qb.x,ta[pa+5]=qb.y,ta[pa+6]=qb.z,ta[pa+7]=qb.w,ta[pa+8]=rb.x,ta[pa+9]=rb.y,ta[pa+10]=rb.z,ta[pa+11]=rb.w,pa+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],Hb=M.vertexTangents,pb=Hb[0],qb=Hb[1],rb=Hb[2],rc=Hb[3],ta[pa]=pb.x,ta[pa+1]=pb.y,ta[pa+2]=pb.z,ta[pa+3]=pb.w,ta[pa+4]=qb.x,ta[pa+5]=qb.y,ta[pa+6]=qb.z,ta[pa+7]=qb.w,ta[pa+8]=rb.x,ta[pa+9]=rb.y,ta[pa+10]=rb.z,ta[pa+11]=rb.w,ta[pa+12]=rc.x,ta[pa+\r\n13]=rc.y,ta[pa+14]=rc.z,ta[pa+15]=rc.w,pa+=16;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,ta,$a)}if(wd&&gd){for(G=0,V=ma.length;G<V;G++)if(M=Ca[ma[G]],jc=M.vertexNormals,Ob=M.normal,3===jc.length&&Gc)for(la=0;3>la;la++)Vb=jc[la],hb[Ra]=Vb.x,hb[Ra+1]=Vb.y,hb[Ra+2]=Vb.z,Ra+=3;else for(la=0;3>la;la++)hb[Ra]=Ob.x,hb[Ra+1]=Ob.y,hb[Ra+2]=Ob.z,Ra+=3;for(G=0,V=na.length;G<V;G++)if(M=Ca[na[G]],jc=M.vertexNormals,Ob=M.normal,4===jc.length&&Gc)for(la=0;4>la;la++)Vb=jc[la],\r\nhb[Ra]=Vb.x,hb[Ra+1]=Vb.y,hb[Ra+2]=Vb.z,Ra+=3;else for(la=0;4>la;la++)hb[Ra]=Ob.x,hb[Ra+1]=Ob.y,hb[Ra+2]=Ob.z,Ra+=3;l.bindBuffer(l.ARRAY_BUFFER,fa.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,hb,$a)}if(kd&&bd&&hd){for(G=0,V=ma.length;G<V;G++)if(kb=ma[G],M=Ca[kb],kc=bd[kb],void 0!==kc)for(la=0;3>la;la++)mc=kc[la],wc[Jb]=mc.u,wc[Jb+1]=mc.v,Jb+=2;for(G=0,V=na.length;G<V;G++)if(kb=na[G],M=Ca[kb],kc=bd[kb],void 0!==kc)for(la=0;4>la;la++)mc=kc[la],wc[Jb]=mc.u,wc[Jb+1]=mc.v,Jb+=2;0<Jb&&(l.bindBuffer(l.ARRAY_BUFFER,\r\nfa.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,wc,$a))}if(kd&&cd&&hd){for(G=0,V=ma.length;G<V;G++)if(kb=ma[G],M=Ca[kb],lc=cd[kb],void 0!==lc)for(la=0;3>la;la++)nc=lc[la],xc[Kb]=nc.u,xc[Kb+1]=nc.v,Kb+=2;for(G=0,V=na.length;G<V;G++)if(kb=na[G],M=Ca[kb],lc=cd[kb],void 0!==lc)for(la=0;4>la;la++)nc=lc[la],xc[Kb]=nc.u,xc[Kb+1]=nc.v,Kb+=2;0<Kb&&(l.bindBuffer(l.ARRAY_BUFFER,fa.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,xc,$a))}if(vd){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],Eb[gb]=Aa,Eb[gb+1]=Aa+1,Eb[gb+\r\n2]=Aa+2,gb+=3,bb[Ua]=Aa,bb[Ua+1]=Aa+1,bb[Ua+2]=Aa,bb[Ua+3]=Aa+2,bb[Ua+4]=Aa+1,bb[Ua+5]=Aa+2,Ua+=6,Aa+=3;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],Eb[gb]=Aa,Eb[gb+1]=Aa+1,Eb[gb+2]=Aa+3,Eb[gb+3]=Aa+1,Eb[gb+4]=Aa+2,Eb[gb+5]=Aa+3,gb+=6,bb[Ua]=Aa,bb[Ua+1]=Aa+1,bb[Ua+2]=Aa,bb[Ua+3]=Aa+3,bb[Ua+4]=Aa+1,bb[Ua+5]=Aa+2,bb[Ua+6]=Aa+2,bb[Ua+7]=Aa+3,Ua+=8,Aa+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,fa.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,Eb,$a);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,fa.__webglLineBuffer);\r\nl.bufferData(l.ELEMENT_ARRAY_BUFFER,bb,$a)}if(ad)for(la=0,id=ad.length;la<id;la++)if(x=ad[la],x.__original.needsUpdate){z=0;if(1===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],x.array[z]=x.value[M.a],x.array[z+1]=x.value[M.b],x.array[z+2]=x.value[M.c],z+=3;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],x.array[z]=x.value[M.a],x.array[z+1]=x.value[M.b],x.array[z+2]=x.value[M.c],x.array[z+3]=x.value[M.d],z+=4}else{if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<\r\nV;G++)ab=x.value[ma[G]],x.array[z]=ab,x.array[z+1]=ab,x.array[z+2]=ab,z+=3;for(G=0,V=na.length;G<V;G++)ab=x.value[na[G]],x.array[z]=ab,x.array[z+1]=ab,x.array[z+2]=ab,x.array[z+3]=ab,z+=4}}else if(2===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,z+=6;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=x.value[M.a],X=\r\nx.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,x.array[z+6]=oa.x,x.array[z+7]=oa.y,z+=8}else{if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+4]=Y.x,x.array[z+5]=Y.y,z+=6;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=ab=x.value[na[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=X.x,x.array[z+3]=X.y,x.array[z+\r\n4]=Y.x,x.array[z+5]=Y.y,x.array[z+6]=oa.x,x.array[z+7]=oa.y,z+=8}}else if(3===x.size){var ga;ga=\"c\"===x.type?[\"r\",\"g\",\"b\"]:[\"x\",\"y\",\"z\"];if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],z+=9;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],\r\nW=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],x.array[z+9]=oa[ga[0]],x.array[z+10]=oa[ga[1]],x.array[z+11]=oa[ga[2]],z+=12}else if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],\r\nx.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],z+=9;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=ab=x.value[na[G]],x.array[z]=W[ga[0]],x.array[z+1]=W[ga[1]],x.array[z+2]=W[ga[2]],x.array[z+3]=X[ga[0]],x.array[z+4]=X[ga[1]],x.array[z+5]=X[ga[2]],x.array[z+6]=Y[ga[0]],x.array[z+7]=Y[ga[1]],x.array[z+8]=Y[ga[2]],x.array[z+9]=oa[ga[0]],x.array[z+10]=oa[ga[1]],x.array[z+11]=oa[ga[2]],z+=12}}else if(4===x.size)if(void 0===x.boundTo||\"vertices\"===x.boundTo){for(G=\r\n0,V=ma.length;G<V;G++)M=Ca[ma[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,z+=12;for(G=0,V=na.length;G<V;G++)M=Ca[na[G]],W=x.value[M.a],X=x.value[M.b],Y=x.value[M.c],oa=x.value[M.d],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=\r\nX.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,x.array[z+12]=oa.x,x.array[z+13]=oa.y,x.array[z+14]=oa.z,x.array[z+15]=oa.w,z+=16}else if(\"faces\"===x.boundTo){for(G=0,V=ma.length;G<V;G++)Y=X=W=ab=x.value[ma[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,z+=12;for(G=0,V=na.length;G<V;G++)oa=Y=X=W=\r\nab=x.value[na[G]],x.array[z]=W.x,x.array[z+1]=W.y,x.array[z+2]=W.z,x.array[z+3]=W.w,x.array[z+4]=X.x,x.array[z+5]=X.y,x.array[z+6]=X.z,x.array[z+7]=X.w,x.array[z+8]=Y.x,x.array[z+9]=Y.y,x.array[z+10]=Y.z,x.array[z+11]=Y.w,x.array[z+12]=oa.x,x.array[z+13]=oa.y,x.array[z+14]=oa.z,x.array[z+15]=oa.w,z+=16}l.bindBuffer(l.ARRAY_BUFFER,x.buffer);l.bufferData(l.ARRAY_BUFFER,x.array,$a)}ud&&(delete fa.__inittedArrays,delete fa.__colorArray,delete fa.__normalArray,delete fa.__tangentArray,delete fa.__uvArray,\r\ndelete fa.__uv2Array,delete fa.__faceArray,delete fa.__vertexArray,delete fa.__lineArray,delete fa.__skinVertexAArray,delete fa.__skinVertexBArray,delete fa.__skinIndexArray,delete fa.__skinWeightArray)}}ja.__dirtyVertices=!1;ja.__dirtyMorphTargets=!1;ja.__dirtyElements=!1;ja.__dirtyUvs=!1;ja.__dirtyNormals=!1;ja.__dirtyColors=!1;ja.__dirtyTangents=!1;Xa.attributes&&m(Xa)}else if(nb instanceof THREE.Ribbon){if(ja.__dirtyVertices||ja.__dirtyColors){var Zb=ja,ld=l.DYNAMIC_DRAW,yc=void 0,zc=void 0,Lc=\r\nvoid 0,$b=void 0,Mc=void 0,md=Zb.vertices,nd=Zb.colors,Ad=md.length,Bd=nd.length,Nc=Zb.__vertexArray,Oc=Zb.__colorArray,Cd=Zb.__dirtyColors;if(Zb.__dirtyVertices){for(yc=0;yc<Ad;yc++)Lc=md[yc].position,$b=3*yc,Nc[$b]=Lc.x,Nc[$b+1]=Lc.y,Nc[$b+2]=Lc.z;l.bindBuffer(l.ARRAY_BUFFER,Zb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Nc,ld)}if(Cd){for(zc=0;zc<Bd;zc++)Mc=nd[zc],$b=3*zc,Oc[$b]=Mc.r,Oc[$b+1]=Mc.g,Oc[$b+2]=Mc.b;l.bindBuffer(l.ARRAY_BUFFER,Zb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,\r\nOc,ld)}}ja.__dirtyVertices=!1;ja.__dirtyColors=!1}else if(nb instanceof THREE.Line){Xa=c(nb,qc);ic=Xa.attributes&&q(Xa);if(ja.__dirtyVertices||ja.__dirtyColors||ic){var Lb=ja,dd=l.DYNAMIC_DRAW,Ac=void 0,Bc=void 0,Pc=void 0,ya=void 0,Qc=void 0,od=Lb.vertices,pd=Lb.colors,Dd=od.length,Ed=pd.length,Rc=Lb.__vertexArray,Sc=Lb.__colorArray,Fd=Lb.__dirtyColors,ed=Lb.__webglCustomAttributesList,Tc=void 0,qd=void 0,Qa=void 0,oc=void 0,Ya=void 0,ra=void 0;if(Lb.__dirtyVertices){for(Ac=0;Ac<Dd;Ac++)Pc=od[Ac].position,\r\nya=3*Ac,Rc[ya]=Pc.x,Rc[ya+1]=Pc.y,Rc[ya+2]=Pc.z;l.bindBuffer(l.ARRAY_BUFFER,Lb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Rc,dd)}if(Fd){for(Bc=0;Bc<Ed;Bc++)Qc=pd[Bc],ya=3*Bc,Sc[ya]=Qc.r,Sc[ya+1]=Qc.g,Sc[ya+2]=Qc.b;l.bindBuffer(l.ARRAY_BUFFER,Lb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Sc,dd)}if(ed)for(Tc=0,qd=ed.length;Tc<qd;Tc++)if(ra=ed[Tc],ra.needsUpdate&&(void 0===ra.boundTo||\"vertices\"===ra.boundTo)){ya=0;oc=ra.value.length;if(1===ra.size)for(Qa=0;Qa<oc;Qa++)ra.array[Qa]=ra.value[Qa];\r\nelse if(2===ra.size)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ya+=2;else if(3===ra.size)if(\"c\"===ra.type)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.r,ra.array[ya+1]=Ya.g,ra.array[ya+2]=Ya.b,ya+=3;else for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ra.array[ya+2]=Ya.z,ya+=3;else if(4===ra.size)for(Qa=0;Qa<oc;Qa++)Ya=ra.value[Qa],ra.array[ya]=Ya.x,ra.array[ya+1]=Ya.y,ra.array[ya+2]=Ya.z,ra.array[ya+3]=Ya.w,ya+=4;l.bindBuffer(l.ARRAY_BUFFER,\r\nra.buffer);l.bufferData(l.ARRAY_BUFFER,ra.array,dd)}}ja.__dirtyVertices=!1;ja.__dirtyColors=!1;Xa.attributes&&m(Xa)}else if(nb instanceof THREE.ParticleSystem)Xa=c(nb,qc),ic=Xa.attributes&&q(Xa),(ja.__dirtyVertices||ja.__dirtyColors||nb.sortParticles||ic)&&g(ja,l.DYNAMIC_DRAW,nb),ja.__dirtyVertices=!1,ja.__dirtyColors=!1,Xa.attributes&&m(Xa)}};this.initMaterial=function(a,b,c,d){var f,e,g,h,i;a instanceof THREE.MeshDepthMaterial?i=\"depth\":a instanceof THREE.MeshNormalMaterial?i=\"normal\":a instanceof\r\nTHREE.MeshBasicMaterial?i=\"basic\":a instanceof THREE.MeshLambertMaterial?i=\"lambert\":a instanceof THREE.MeshPhongMaterial?i=\"phong\":a instanceof THREE.LineBasicMaterial?i=\"basic\":a instanceof THREE.ParticleBasicMaterial&&(i=\"particle_basic\");if(i){var j=THREE.ShaderLib[i];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var k,m;e=j=0;for(k=0,m=b.length;k<m;k++)f=b[k],f.onlyShadow||(f instanceof THREE.DirectionalLight&&e++,f instanceof\r\nTHREE.PointLight&&j++,f instanceof THREE.SpotLight&&j++);j+e<=O?k=e:(k=Math.ceil(O*e/(j+e)),j=O-k);f=k;e=j;var n=0;for(j=0,k=b.length;j<k;j++)m=b[j],m.castShadow&&(m instanceof THREE.SpotLight&&n++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&n++);var o=50;if(void 0!==d&&d instanceof THREE.SkinnedMesh)o=d.bones.length;var p;a:{k=a.fragmentShader;m=a.vertexShader;var j=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,\r\nsizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:f,maxPointLights:e,maxBones:o,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,maxShadows:n,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided},\r\nq,d=[];i?d.push(i):(d.push(k),d.push(m));for(q in c)d.push(q),d.push(c[q]);i=d.join();for(q=0,d=$.length;q<d;q++)if($[q].code===i){p=$[q].program;break a}q=l.createProgram();d=[0<za?\"#define VERTEX_TEXTURES\":\"\",y.gammaInput?\"#define GAMMA_INPUT\":\"\",y.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",y.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SHADOWS \"+c.maxShadows,\"#define MAX_BONES \"+c.maxBones,\r\nc.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\"#define USE_LIGHTMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.skinning?\"#define USE_SKINNING\":\"\",c.morphTargets?\"#define USE_MORPHTARGETS\":\"\",c.morphNormals?\"#define USE_MORPHNORMALS\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\r\n\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",c.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",\"uniform mat4 objectMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec2 uv2;\\n#ifdef USE_COLOR\\nattribute vec3 color;\\n#endif\\n#ifdef USE_MORPHTARGETS\\nattribute vec3 morphTarget0;\\nattribute vec3 morphTarget1;\\nattribute vec3 morphTarget2;\\nattribute vec3 morphTarget3;\\n#ifdef USE_MORPHNORMALS\\nattribute vec3 morphNormal0;\\nattribute vec3 morphNormal1;\\nattribute vec3 morphNormal2;\\nattribute vec3 morphNormal3;\\n#else\\nattribute vec3 morphTarget4;\\nattribute vec3 morphTarget5;\\nattribute vec3 morphTarget6;\\nattribute vec3 morphTarget7;\\n#endif\\n#endif\\n#ifdef USE_SKINNING\\nattribute vec4 skinVertexA;\\nattribute vec4 skinVertexB;\\nattribute vec4 skinIndex;\\nattribute vec4 skinWeight;\\n#endif\\n\"].join(\"\\n\");\r\nf=[\"precision \"+B+\" float;\",\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SHADOWS \"+c.maxShadows,c.alphaTest?\"#define ALPHATEST \"+c.alphaTest:\"\",y.gammaInput?\"#define GAMMA_INPUT\":\"\",y.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",y.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",c.useFog&&c.fog?\"#define USE_FOG\":\"\",c.useFog&&c.fog instanceof THREE.FogExp2?\"#define FOG_EXP2\":\"\",c.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\r\n\"#define USE_LIGHTMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.metal?\"#define METAL\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",\"uniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\"].join(\"\\n\");l.attachShader(q,t(\"fragment\",f+k));\r\nl.attachShader(q,t(\"vertex\",d+m));l.linkProgram(q);l.getProgramParameter(q,l.LINK_STATUS)||console.error(\"Could not initialise shader\\nVALIDATE_STATUS: \"+l.getProgramParameter(q,l.VALIDATE_STATUS)+\", gl error [\"+l.getError()+\"]\");q.uniforms={};q.attributes={};var r,d=\"viewMatrix,modelViewMatrix,projectionMatrix,normalMatrix,objectMatrix,cameraPosition,boneGlobalMatrices,morphTargetInfluences\".split(\",\");for(r in j)d.push(r);r=d;for(d=0,j=r.length;d<j;d++)k=r[d],q.uniforms[k]=l.getUniformLocation(q,\r\nk);d=\"position,normal,uv,uv2,tangent,color,skinVertexA,skinVertexB,skinIndex,skinWeight\".split(\",\");for(r=0;r<c.maxMorphTargets;r++)d.push(\"morphTarget\"+r);for(r=0;r<c.maxMorphNormals;r++)d.push(\"morphNormal\"+r);for(p in b)d.push(p);p=d;for(r=0,b=p.length;r<b;r++)c=p[r],q.attributes[c]=l.getAttribLocation(q,c);q.id=$.length;$.push({program:q,code:i});y.info.memory.programs=$.length;p=q}a.program=p;p=a.program.attributes;0<=p.position&&l.enableVertexAttribArray(p.position);0<=p.color&&l.enableVertexAttribArray(p.color);\r\n0<=p.normal&&l.enableVertexAttribArray(p.normal);0<=p.tangent&&l.enableVertexAttribArray(p.tangent);a.skinning&&0<=p.skinVertexA&&0<=p.skinVertexB&&0<=p.skinIndex&&0<=p.skinWeight&&(l.enableVertexAttribArray(p.skinVertexA),l.enableVertexAttribArray(p.skinVertexB),l.enableVertexAttribArray(p.skinIndex),l.enableVertexAttribArray(p.skinWeight));if(a.attributes)for(h in a.attributes)void 0!==p[h]&&0<=p[h]&&l.enableVertexAttribArray(p[h]);if(a.morphTargets){a.numSupportedMorphTargets=0;q=\"morphTarget\";\r\nfor(h=0;h<this.maxMorphTargets;h++)r=q+h,0<=p[r]&&(l.enableVertexAttribArray(p[r]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;q=\"morphNormal\";for(h=0;h<this.maxMorphNormals;h++)r=q+h,0<=p[r]&&(l.enableVertexAttribArray(p[r]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(g in a.uniforms)a.uniformsList.push([a.uniforms[g],g])};this.setFaceCulling=function(a,b){a?(!b||\"ccw\"===b?l.frontFace(l.CCW):l.frontFace(l.CW),\"back\"===a?l.cullFace(l.BACK):\"front\"===a?l.cullFace(l.FRONT):\r\nl.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)};this.setObjectFaces=function(a){if(ia!==a.doubleSided)a.doubleSided?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),ia=a.doubleSided;if(N!==a.flipSided)a.flipSided?l.frontFace(l.CW):l.frontFace(l.CCW),N=a.flipSided};this.setDepthTest=function(a){U!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),U=a)};this.setDepthWrite=function(a){ba!==a&&(l.depthMask(a),ba=a)};this.setBlending=function(a){if(a!==aa){switch(a){case THREE.NoBlending:l.disable(l.BLEND);\r\nbreak;case THREE.AdditiveBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE);break;case THREE.SubtractiveBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)}aa=\r\na}};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=l.createTexture(),y.info.memory.textures++;l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),f=A(a.format),e=A(a.type);w(l.TEXTURE_2D,a,d);a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,f,c.width,c.height,0,f,e,c.data):l.texImage2D(l.TEXTURE_2D,0,f,f,e,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);\r\na.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(void 0===a.depthBuffer)a.depthBuffer=!0;if(void 0===a.stencilBuffer)a.stencilBuffer=!0;a.__webglTexture=l.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=A(a.format),f=A(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,\r\na.__webglTexture);w(l.TEXTURE_CUBE_MAP,a,c);for(c=0;6>c;c++){a.__webglFramebuffer[c]=l.createFramebuffer();a.__webglRenderbuffer[c]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,d,a.width,a.height,0,d,f,null);var e=a,g=l.TEXTURE_CUBE_MAP_POSITIVE_X+c;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[c]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,g,e.__webglTexture,0);u(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=\r\nl.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),w(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,f,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,d,a.__webglTexture,0),u(a.__webglRenderbuffer,a);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:\r\na.__webglFramebuffer,d=a.width,a=a.height,c=f=0):(b=null,d=ha,a=ib,f=Ga,c=qa);b!==E&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(f,c,d,a),E=b);db=d;lb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};\r\nTHREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:\r\nTHREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};\r\nTHREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};\r\nTHREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};\r\nTHREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};\r\nTHREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};\r\nTHREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};\r\nTHREE.ColorUtils={adjustHSV:function(a,b,c,d){var f=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,f);f.h=THREE.Math.clamp(f.h+b,0,1);f.s=THREE.Math.clamp(f.s+c,0,1);f.v=THREE.Math.clamp(f.v+d,0,1);a.setHSV(f.h,f.s,f.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,f=a.b,g=Math.max(Math.max(c,d),f),e=Math.min(Math.min(c,d),f);if(e===g)e=c=0;else{var h=g-e,e=h/g,c=(c===g?(d-f)/h:d===g?2+(f-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=e;b.v=g;return b}};\r\nTHREE.ColorUtils.__hsv={h:0,s:0,v:0};\r\nTHREE.GeometryUtils={merge:function(a,b){for(var c,d,f=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,e=a.vertices,h=g.vertices,i=a.faces,j=g.faces,k=a.faceVertexUvs[0],q=g.faceVertexUvs[0],m={},o=0;o<a.materials.length;o++)m[a.materials[o].id]=o;if(b instanceof THREE.Mesh)b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale);for(var o=0,p=h.length;o<p;o++){var n=h[o].clone();c&&c.multiplyVector3(n.position);e.push(n)}for(o=0,p=j.length;o<p;o++){var e=\r\nj[o],r,s,t=e.vertexNormals,w=e.vertexColors;e instanceof THREE.Face3?r=new THREE.Face3(e.a+f,e.b+f,e.c+f):e instanceof THREE.Face4&&(r=new THREE.Face4(e.a+f,e.b+f,e.c+f,e.d+f));r.normal.copy(e.normal);d&&d.multiplyVector3(r.normal);h=0;for(n=t.length;h<n;h++)s=t[h].clone(),d&&d.multiplyVector3(s),r.vertexNormals.push(s);r.color.copy(e.color);h=0;for(n=w.length;h<n;h++)s=w[h],r.vertexColors.push(s.clone());if(void 0!==e.materialIndex){h=g.materials[e.materialIndex];n=h.id;w=m[n];if(void 0===w)w=a.materials.length,\r\nm[n]=w,a.materials.push(h);r.materialIndex=w}r.centroid.copy(e.centroid);c&&c.multiplyVector3(r.centroid);i.push(r)}for(o=0,p=q.length;o<p;o++){c=q[o];d=[];h=0;for(n=c.length;h<n;h++)d.push(new THREE.UV(c[h].u,c[h].v));k.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,f=a.faces,g=a.faceVertexUvs[0];if(a.materials)b.materials=a.materials.slice();for(a=0,c=d.length;a<c;a++)b.vertices.push(d[a].clone());for(a=0,c=f.length;a<c;a++)b.faces.push(f[a].clone());for(a=0,c=g.length;a<c;a++){for(var d=\r\ng[a],f=[],e=0,h=d.length;e<h;e++)f.push(new THREE.UV(d[e].u,d[e].v));b.faceVertexUvs[0].push(f)}return b},randomPointInTriangle:function(a,b,c){var d,f,g,e=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();1<d+f&&(d=1-d,f=1-f);g=1-d-f;e.copy(a);e.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);e.addSelf(h);h.copy(c);h.multiplyScalar(g);e.addSelf(h);return e},randomPointInFace:function(a,b,c){var d,f,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a].position,\r\nf=b.vertices[a.b].position,g=b.vertices[a.c].position,THREE.GeometryUtils.randomPointInTriangle(d,f,g);if(a instanceof THREE.Face4){d=b.vertices[a.a].position;f=b.vertices[a.b].position;g=b.vertices[a.c].position;var b=b.vertices[a.d].position,e;c?a._area1&&a._area2?(c=a._area1,e=a._area2):(c=THREE.GeometryUtils.triangleArea(d,f,b),e=THREE.GeometryUtils.triangleArea(f,g,b),a._area1=c,a._area2=e):(c=THREE.GeometryUtils.triangleArea(d,f,b),e=THREE.GeometryUtils.triangleArea(f,g,b));return THREE.GeometryUtils.random()*\r\n(c+e)<c?THREE.GeometryUtils.randomPointInTriangle(d,f,b):THREE.GeometryUtils.randomPointInTriangle(f,g,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var f=c+Math.floor((d-c)/2);return j[f]>a?b(c,f-1):j[f]<a?b(f+1,d):f}return b(0,j.length-1)}var d,f,g=a.faces,e=a.vertices,h=g.length,i=0,j=[],k,q,m,o;for(f=0;f<h;f++){d=g[f];if(d instanceof THREE.Face3)k=e[d.a].position,q=e[d.b].position,m=e[d.c].position,d._area=THREE.GeometryUtils.triangleArea(k,q,m);else if(d instanceof\r\nTHREE.Face4)k=e[d.a].position,q=e[d.b].position,m=e[d.c].position,o=e[d.d].position,d._area1=THREE.GeometryUtils.triangleArea(k,q,o),d._area2=THREE.GeometryUtils.triangleArea(q,m,o),d._area=d._area1+d._area2;i+=d._area;j[f]=i}d=[];for(f=0;f<b;f++)e=THREE.GeometryUtils.random()*i,e=c(e),d[f]=THREE.GeometryUtils.randomPointInFace(g[e],a,!0);return d},triangleArea:function(a,b,c){var d,f=THREE.GeometryUtils.__v1;f.sub(a,b);d=f.length();f.sub(a,c);a=f.length();f.sub(b,c);c=f.length();b=0.5*(d+a+c);return Math.sqrt(b*\r\n(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).setTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,g=d.length;f<g;f++)1!==d[f].u&&(d[f].u-=Math.floor(d[f].u)),1!==d[f].v&&(d[f].v-=Math.floor(d[f].v))},triangulateQuads:function(a){for(var b=a.faces.length-1;0<=b;b--){var c=\r\na.faces[b];if(c instanceof THREE.Face4){var d=c.a,f=c.b,g=c.c,e=c.d,h=c.clone(),c=c.clone();h.a=d;h.b=f;h.c=e;c.a=f;c.b=g;c.c=e;a.faces.splice(b,1,h,c);for(d=0;d<a.faceVertexUvs.length;d++)a.faceVertexUvs[d].length&&(h=a.faceVertexUvs[d][b],f=h[1],g=h[2],e=h[3],h=[h[0].clone(),f.clone(),e.clone()],f=[f.clone(),g.clone(),e.clone()],a.faceVertexUvs[d].splice(b,1,h,f));for(d=0;d<a.faceUvs.length;d++)a.faceUvs[d].length&&(f=a.faceUvs[d][b],a.faceUvs[d].splice(b,1,f,f))}}a.computeCentroids();a.computeFaceNormals();\r\na.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var f=b.length,g=a.faces[c];if(g instanceof THREE.Face4){var e=g.a,h=g.b,i=g.c,e=a.vertices[e],h=a.vertices[h],i=a.vertices[i],j=a.vertices[g.d];b.push(e.clone());b.push(h.clone());b.push(i.clone());b.push(j.clone());g.a=f;g.b=f+1;g.c=f+2;g.d=f+3}else e=g.a,h=g.b,i=g.c,e=a.vertices[e],h=a.vertices[h],i=a.vertices[i],b.push(e.clone()),b.push(h.clone()),b.push(i.clone()),g.a=f,\r\ng.b=f+1,g.c=f+2}a.vertices=b},tessellate:function(a,b){var c,d,f,g,e,h,i,j,k,q,m,o,p,n,r,s,t;for(c=a.faces.length-1;0<=c;c--)if(d=a.faces[c],d instanceof THREE.Face3){if(f=d.a,g=d.b,e=d.c,i=a.vertices[f],j=a.vertices[g],k=a.vertices[e],m=i.position.distanceTo(j.position),o=j.position.distanceTo(k.position),q=i.position.distanceTo(k.position),m>b||o>b||q>b){h=a.vertices.length;t=d.clone();d=d.clone();m>=o&&m>=q?(i=i.clone(),i.position.lerpSelf(j.position,0.5),t.a=f,t.b=h,t.c=e,d.a=h,d.b=g,d.c=e,f=\r\n0):o>=m&&o>=q?(i=j.clone(),i.position.lerpSelf(k.position,0.5),t.a=f,t.b=g,t.c=h,d.a=h,d.b=e,d.c=f,f=1):(i=i.clone(),i.position.lerpSelf(k.position,0.5),t.a=f,t.b=g,t.c=h,d.a=h,d.b=g,d.c=e,f=2);a.faces.splice(c,1,t,d);a.vertices.push(i);for(g=0;g<a.faceVertexUvs.length;g++)a.faceVertexUvs[g].length&&(k=a.faceVertexUvs[g][c],j=k[0],e=k[1],i=k[2],0===f?(m=j.clone(),m.lerpSelf(e,0.5),k=[j.clone(),m.clone(),i.clone()],e=[m.clone(),e.clone(),i.clone()]):1===f?(m=e.clone(),m.lerpSelf(i,0.5),k=[j.clone(),\r\ne.clone(),m.clone()],e=[m.clone(),i.clone(),j.clone()]):(m=j.clone(),m.lerpSelf(i,0.5),k=[j.clone(),e.clone(),m.clone()],e=[m.clone(),e.clone(),i.clone()]),a.faceVertexUvs[g].splice(c,1,k,e))}}else if(f=d.a,g=d.b,e=d.c,h=d.d,i=a.vertices[f],j=a.vertices[g],k=a.vertices[e],q=a.vertices[h],m=i.position.distanceTo(j.position),o=j.position.distanceTo(k.position),p=k.position.distanceTo(q.position),n=i.position.distanceTo(q.position),m>b||o>b||p>b||n>b){r=a.vertices.length;s=a.vertices.length+1;t=d.clone();\r\nd=d.clone();m>=o&&m>=p&&m>=n||p>=o&&p>=m&&p>=n?(m=i.clone(),m.position.lerpSelf(j.position,0.5),j=k.clone(),j.position.lerpSelf(q.position,0.5),t.a=f,t.b=r,t.c=s,t.d=h,d.a=r,d.b=g,d.c=e,d.d=s,f=0):(m=j.clone(),m.position.lerpSelf(k.position,0.5),j=q.clone(),j.position.lerpSelf(i.position,0.5),t.a=f,t.b=g,t.c=r,t.d=s,d.a=s,d.b=r,d.c=e,d.d=h,f=1);a.faces.splice(c,1,t,d);a.vertices.push(m);a.vertices.push(j);for(g=0;g<a.faceVertexUvs.length;g++)a.faceVertexUvs[g].length&&(k=a.faceVertexUvs[g][c],j=k[0],\r\ne=k[1],i=k[2],k=k[3],0===f?(m=j.clone(),m.lerpSelf(e,0.5),o=i.clone(),o.lerpSelf(k,0.5),j=[j.clone(),m.clone(),o.clone(),k.clone()],e=[m.clone(),e.clone(),i.clone(),o.clone()]):(m=e.clone(),m.lerpSelf(i,0.5),o=k.clone(),o.lerpSelf(j,0.5),j=[j.clone(),e.clone(),m.clone(),o.clone()],e=[o.clone(),m.clone(),i.clone(),k.clone()]),a.faceVertexUvs[g].splice(c,1,j,e))}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;\r\nTHREE.ImageUtils={crossOrigin:\"anonymous\",loadTexture:function(a,b,c){var d=new Image,f=new THREE.Texture(d,b);d.onload=function(){f.needsUpdate=!0;c&&c(this)};d.crossOrigin=this.crossOrigin;d.src=a;return f},loadTextureCube:function(a,b,c){var d,f=[],g=new THREE.Texture(f,b);f.loadCount=0;for(b=0,d=a.length;b<d;++b)f[b]=new Image,f[b].onload=function(){f.loadCount+=1;if(6===f.loadCount)g.needsUpdate=!0;c&&c(this)},f[b].crossOrigin=this.crossOrigin,f[b].src=a[b];return g},getNormalMap:function(a,\r\nb){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,f=a.height,g=document.createElement(\"canvas\");g.width=d;g.height=f;var e=g.getContext(\"2d\");e.drawImage(a,0,0);for(var h=e.getImageData(0,0,d,f).data,i=e.createImageData(d,f),j=i.data,k=0;k<d;k++)for(var q=1;q<f;q++){var m=0>q-1?f-1:q-1,o=(q+1)%f,p=0>k-1?d-1:k-1,n=(k+1)%d,r=[],s=[0,0,h[4*(q*d+k)]/255*b];r.push([-1,0,h[4*(q*d+p)]/255*b]);r.push([-1,-1,h[4*(m*d+p)]/255*b]);r.push([0,-1,\r\nh[4*(m*d+k)]/255*b]);r.push([1,-1,h[4*(m*d+n)]/255*b]);r.push([1,0,h[4*(q*d+n)]/255*b]);r.push([1,1,h[4*(o*d+n)]/255*b]);r.push([0,1,h[4*(o*d+k)]/255*b]);r.push([-1,1,h[4*(o*d+p)]/255*b]);m=[];p=r.length;for(o=0;o<p;o++){var n=r[o],t=r[(o+1)%p],n=[n[0]-s[0],n[1]-s[1],n[2]-s[2]],t=[t[0]-s[0],t[1]-s[1],t[2]-s[2]];m.push(c([n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]))}r=[0,0,0];for(o=0;o<m.length;o++)r[0]+=m[o][0],r[1]+=m[o][1],r[2]+=m[o][2];r[0]/=m.length;r[1]/=m.length;r[2]/=m.length;\r\ns=4*(q*d+k);j[s]=255*((r[0]+1)/2)|0;j[s+1]=255*(r[1]+0.5)|0;j[s+2]=255*r[2]|0;j[s+3]=255}e.putImageData(i,0,0);return g},generateDataTexture:function(a,b,c){for(var d=a*b,f=new Uint8Array(3*d),g=Math.floor(255*c.r),e=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;h<d;h++)f[3*h]=g,f[3*h+1]=e,f[3*h+2]=c;a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};\r\nTHREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,f=a.children.length;for(d=0;d<f;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,f=new THREE.Object3D;for(c=0;c<d;c++){var g=new THREE.Mesh(a,b[c]);f.add(g)}return f},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),\r\nb.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?\r\n(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,\r\nb.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.doubleSided=a.doubleSided;\r\nb.flipSided=a.flipSided;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=\r\na.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\r\nif(THREE.WebGLRenderer)THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:\"f\",value:1.02},mFresnelBias:{type:\"f\",value:0.1},mFresnelPower:{type:\"f\",value:2},mFresnelScale:{type:\"f\",value:1},tCube:{type:\"t\",value:1,texture:null}},fragmentShader:\"uniform samplerCube tCube;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\\nrefractedColor.a = 1.0;\\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\\n}\",\r\nvertexShader:\"uniform float mRefractionRatio;\\nuniform float mFresnelBias;\\nuniform float mFresnelScale;\\nuniform float mFresnelPower;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\\nvec3 I = mPosition.xyz - cameraPosition;\\nvReflect = reflect( I, nWorld );\\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\\ngl_Position = projectionMatrix * mvPosition;\\n}\"},\r\nnormal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:\"i\",value:0},enableDiffuse:{type:\"i\",value:0},enableSpecular:{type:\"i\",value:0},enableReflection:{type:\"i\",value:0},tDiffuse:{type:\"t\",value:0,texture:null},tCube:{type:\"t\",value:1,texture:null},tNormal:{type:\"t\",value:2,texture:null},tSpecular:{type:\"t\",value:3,texture:null},tAO:{type:\"t\",value:4,texture:null},tDisplacement:{type:\"t\",value:5,texture:null},uNormalScale:{type:\"f\",\r\nvalue:1},uDisplacementBias:{type:\"f\",value:0},uDisplacementScale:{type:\"f\",value:1},uDiffuseColor:{type:\"c\",value:new THREE.Color(16777215)},uSpecularColor:{type:\"c\",value:new THREE.Color(1118481)},uAmbientColor:{type:\"c\",value:new THREE.Color(16777215)},uShininess:{type:\"f\",value:30},uOpacity:{type:\"f\",value:1},uReflectivity:{type:\"f\",value:0.5},uOffset:{type:\"v2\",value:new THREE.Vector2(0,0)},uRepeat:{type:\"v2\",value:new THREE.Vector2(1,1)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),\r\nfragmentShader:[\"uniform vec3 uAmbientColor;\\nuniform vec3 uDiffuseColor;\\nuniform vec3 uSpecularColor;\\nuniform float uShininess;\\nuniform float uOpacity;\\nuniform bool enableDiffuse;\\nuniform bool enableSpecular;\\nuniform bool enableAO;\\nuniform bool enableReflection;\\nuniform sampler2D tDiffuse;\\nuniform sampler2D tNormal;\\nuniform sampler2D tSpecular;\\nuniform sampler2D tAO;\\nuniform samplerCube tCube;\\nuniform float uNormalScale;\\nuniform float uReflectivity;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vViewPosition;\",\r\nTHREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\\nvec3 specularTex = vec3( 1.0 );\\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\\nnormalTex.xy *= uNormalScale;\\nnormalTex = normalize( normalTex );\\nif( enableDiffuse ) {\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( tDiffuse, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\\n#endif\\n}\\nif( enableAO ) {\\n#ifdef GAMMA_INPUT\\nvec4 aoColor = texture2D( tAO, vUv );\\naoColor.xyz *= aoColor.xyz;\\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\\n#endif\\n}\\nif( enableSpecular )\\nspecularTex = texture2D( tSpecular, vUv ).xyz;\\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\\nvec3 finalNormal = tsb * normalTex;\\nvec3 normal = normalize( finalNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\\nfloat pointDistance = vPointLight[ i ].w;\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\\n#endif\\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\n#ifdef WRAP_AROUND\\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\\n#endif\\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\\nif ( enableReflection ) {\\nvec3 wPos = cameraPosition - vViewPosition;\\nvec3 vReflect = reflect( normalize( wPos ), normal );\\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\\n}\",\r\nTHREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\"),vertexShader:[\"attribute vec4 tangent;\\nuniform vec2 uOffset;\\nuniform vec2 uRepeat;\\n#ifdef VERTEX_TEXTURES\\nuniform sampler2D tDisplacement;\\nuniform float uDisplacementScale;\\nuniform float uDisplacementBias;\\n#endif\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\nvarying vec3 vViewPosition;\",\r\nTHREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvViewPosition = -mvPosition.xyz;\\nvNormal = normalMatrix * normal;\\nvTangent = normalMatrix * tangent.xyz;\\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\\nvUv = uv * uRepeat + uOffset;\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\nvPointLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#ifdef VERTEX_TEXTURES\\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\\ngl_Position = projectionMatrix * displacedPosition;\\n#else\\ngl_Position = projectionMatrix * mvPosition;\\n#endif\",\r\nTHREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\")},cube:{uniforms:{tCube:{type:\"t\",value:1,texture:null},tFlip:{type:\"f\",value:-1}},vertexShader:\"varying vec3 vViewPosition;\\nvoid main() {\\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\\nvViewPosition = cameraPosition - mPosition.xyz;\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vViewPosition;\\nvoid main() {\\nvec3 wPos = cameraPosition - vViewPosition;\\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\\n}\"}}};\r\nTHREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null;this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}};\r\nTHREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log(\"Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};\r\nTHREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1)return this.cacheArcLengths;var b=[],c,d=this.getPoint(0),f,g=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),g+=c.distanceTo(d),b.push(g),d=c;return this.cacheArcLengths=b};\r\nTHREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,g;g=b?b:a*c[f-1];for(var e=0,h=f-1,i;e<=h;)if(d=Math.floor(e+(h-e)/2),i=c[d]-g,0>i)e=d+1;else if(0<i)h=d-1;else{h=d;break}d=h;if(c[d]==g)return d/(f-1);e=c[d];return c=(d+(g-e)/(c[d+1]-e))/(f-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};\r\nTHREE.Curve.prototype.getTangent=function(a){var b=a-1.0E-4,a=a+1.0E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);a=this.getPoint(a);return b.clone().subSelf(a).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,b){a instanceof THREE.Vector2?(this.v1=a,this.v2=b):THREE.LineCurve.oldConstructor.apply(this,arguments)};\r\nTHREE.LineCurve.oldConstructor=function(a,b,c,d){this.constructor(new THREE.Vector2(a,b),new THREE.Vector2(c,d))};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.sub(this.v2,this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};\r\nTHREE.LineCurve.prototype.getTangent=function(){var a=new THREE.Vector2;a.sub(this.v2,this.v1);a.normalize();return a};THREE.QuadraticBezierCurve=function(a,b,c){if(!(b instanceof THREE.Vector2))var d=Array.prototype.slice.call(arguments),a=new THREE.Vector2(d[0],d[1]),b=new THREE.Vector2(d[2],d[3]),c=new THREE.Vector2(d[4],d[5]);this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\r\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};\r\nTHREE.CubicBezierCurve=function(a,b,c,d){if(!(b instanceof THREE.Vector2))var f=Array.prototype.slice.call(arguments),a=new THREE.Vector2(f[0],f[1]),b=new THREE.Vector2(f[2],f[3]),c=new THREE.Vector2(f[4],f[5]),d=new THREE.Vector2(f[6],f[7]);this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;\r\nTHREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};\r\nTHREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\r\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};THREE.ArcCurve=function(a,b,c,d,f,g){this.aX=a;this.aY=b;this.aRadius=c;this.aStartAngle=d;this.aEndAngle=f;this.aClockwise=g};\r\nTHREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.aRadius*Math.cos(b);b=this.aY+this.aRadius*Math.sin(b);return new THREE.Vector2(a,b)};\r\nTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){var a=0.5*(c-a),d=0.5*(d-b),g=f*f;return(2*b-2*c+a+d)*f*g+(-3*b+3*c-2*a-d)*g+a*f+b}};\r\nTHREE.Curve.create=function(a,b){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});\r\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});\r\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});\r\nTHREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});\r\nTHREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};\r\nTHREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\r\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};\r\nTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f;b=c=Number.NEGATIVE_INFINITY;d=f=Number.POSITIVE_INFINITY;var g,e,h,i;i=new THREE.Vector2;for(e=0,h=a.length;e<h;e++){g=a[e];if(g.x>b)b=g.x;else if(g.x<d)d=g.x;if(g.y>c)c=g.y;else if(g.y<c)f=g.y;i.addSelf(g.x,g.y)}return{minX:d,minY:f,maxX:b,maxY:c,centroid:i.divideScalar(h)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vertex(new THREE.Vector3(a[c].x,a[c].y,0)));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\r\nTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;if(!b)b=this.bends;for(d=0,f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;if(!b)b=this.bends;for(d=0,f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};\r\nTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,g,e,h,i;for(d=0,f=a.length;d<f;d++)g=a[d],e=g.x,h=g.y,i=e/c.maxX,i=b.getUtoTmapping(i,e),e=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),g.x=e.x+h.x,g.y=e.y+h.y;return a};\r\nTHREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0==a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=new THREE.Object3D;THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;\r\nTHREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=\r\n!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;\r\nTHREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};\r\nTHREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\r\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};\r\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,g){var e=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,g)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:e})};\r\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};\r\nTHREE.Path.prototype.arc=function(a,b,c,d,f,g){var e=Array.prototype.slice.call(arguments);this.curves.push(new THREE.ArcCurve(a,b,c,d,f,g));this.actions.push({action:THREE.PathActions.ARC,args:e})};THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};\r\nTHREE.Path.prototype.getPoints=function(a,b){var a=a||12,c=[],d,f,g,e,h,i,j,k,q,m,o,p,n;for(d=0,f=this.actions.length;d<f;d++)switch(g=this.actions[d],e=g.action,g=g.args,e){case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=g[2];i=g[3];q=g[0];m=g[1];0<c.length?(e=c[c.length-1],o=e.x,p=e.y):(e=this.actions[d-1].args,o=e[e.length-2],p=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,g=THREE.Shape.Utils.b2(n,o,q,h),n=THREE.Shape.Utils.b2(n,p,m,\r\ni),c.push(new THREE.Vector2(g,n));break;case THREE.PathActions.BEZIER_CURVE_TO:h=g[4];i=g[5];q=g[0];m=g[1];j=g[2];k=g[3];0<c.length?(e=c[c.length-1],o=e.x,p=e.y):(e=this.actions[d-1].args,o=e[e.length-2],p=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,g=THREE.Shape.Utils.b3(n,o,q,j,h),n=THREE.Shape.Utils.b3(n,p,m,k,i),c.push(new THREE.Vector2(g,n));break;case THREE.PathActions.CSPLINE_THRU:e=this.actions[d-1].args;e=[new THREE.Vector2(e[e.length-2],e[e.length-1])];n=a*g[0].length;e=e.concat(g[0]);g=new THREE.SplineCurve(e);\r\nfor(e=1;e<=n;e++)c.push(g.getPointAt(e/n));break;case THREE.PathActions.ARC:e=this.actions[d-1].args;h=g[0];i=g[1];j=g[2];q=g[3];n=g[4];m=!!g[5];k=e[e.length-2];o=e[e.length-1];0==e.length&&(k=o=0);p=n-q;var r=2*a;for(e=1;e<=r;e++)n=e/r,m||(n=1-n),n=q+n*p,g=k+h+j*Math.cos(n),n=o+i+j*Math.sin(n),c.push(new THREE.Vector2(g,n))}b&&c.push(c[0]);return c};THREE.Path.prototype.transform=function(a,b){this.getBoundingBox();return this.getWrapPoints(this.getPoints(b),a)};\r\nTHREE.Path.prototype.nltransform=function(a,b,c,d,f,g){var e=this.getPoints(),h,i,j,k,q;for(h=0,i=e.length;h<i;h++)j=e[h],k=j.x,q=j.y,j.x=a*k+b*q+c,j.y=d*q+f*k+g;return e};\r\nTHREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement(\"canvas\"),a.setAttribute(\"width\",b.maxX+100),a.setAttribute(\"height\",b.maxY+100),document.body.appendChild(a));b=a.getContext(\"2d\");b.fillStyle=\"white\";b.fillRect(0,0,a.width,a.height);b.strokeStyle=\"black\";b.beginPath();var c,d,f;for(a=0,c=this.actions.length;a<c;a++)d=this.actions[a],f=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,f);b.stroke();b.closePath();b.strokeStyle=\"red\";d=\r\nthis.getPoints();for(a=0,c=d.length;a<c;a++)f=d[a],b.beginPath(),b.arc(f.x,f.y,1.5,0,2*Math.PI,!1),b.stroke(),b.closePath()};\r\nTHREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],g=new THREE.Path;for(a=0,b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[c].apply(g,d);0!=g.actions.length&&f.push(g);if(0==f.length)return[];var e;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return g=f[0],e=new THREE.Shape,e.actions=g.actions,e.curves=g.curves,d.push(e),d;if(a){e=new THREE.Shape;for(a=0,b=f.length;a<\r\nb;a++)g=f[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(e.actions=g.actions,e.curves=g.curves,d.push(e),e=new THREE.Shape):e.holes.push(g)}else{for(a=0,b=f.length;a<b;a++)g=f[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(e&&d.push(e),e=new THREE.Shape,e.actions=g.actions,e.curves=g.curves):e.holes.push(g);d.push(e)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;\r\nTHREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\r\nTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\r\nTHREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,g,e,h,i,j,k,q,m,o,p=[];for(i=0;i<b.length;i++){j=b[i];Array.prototype.push.apply(d,j);g=Number.POSITIVE_INFINITY;for(f=0;f<j.length;f++){m=j[f];o=[];for(q=0;q<c.length;q++)k=c[q],k=m.distanceToSquared(k),o.push(k),k<g&&(g=k,e=f,h=q)}f=0<=h-1?h-1:c.length-1;g=0<=e-1?e-1:j.length-1;var n=[j[e],c[h],c[f]];q=THREE.FontUtils.Triangulate.area(n);var r=[j[e],j[g],c[h]];m=THREE.FontUtils.Triangulate.area(r);o=h;k=e;h+=1;e+=-1;0>\r\nh&&(h+=c.length);h%=c.length;0>e&&(e+=j.length);e%=j.length;f=0<=h-1?h-1:c.length-1;g=0<=e-1?e-1:j.length-1;n=[j[e],c[h],c[f]];n=THREE.FontUtils.Triangulate.area(n);r=[j[e],j[g],c[h]];r=THREE.FontUtils.Triangulate.area(r);q+m>n+r&&(h=o,e=k,0>h&&(h+=c.length),h%=c.length,0>e&&(e+=j.length),e%=j.length,f=0<=h-1?h-1:c.length-1,g=0<=e-1?e-1:j.length-1);q=c.slice(0,h);m=c.slice(h);o=j.slice(e);k=j.slice(0,e);g=[j[e],j[g],c[h]];p.push([j[e],c[h],c[f]]);p.push(g);c=q.concat(o).concat(k).concat(m)}return{shape:c,\r\nisolatedPts:p,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),g,e,h,i,j={};for(g=0,e=d.length;g<e;g++)i=d[g].x+\":\"+d[g].y,void 0!==j[i]&&console.log(\"Duplicate point\",i),j[i]=g;for(g=0,e=c.length;g<e;g++){h=c[g];for(d=0;3>d;d++)i=h[d].x+\":\"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}for(g=0,e=f.length;g<e;g++){h=f[g];for(d=0;3>d;d++)i=h[d].x+\":\"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}return c.concat(f)},\r\nisClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+\r\nthis.b3p3(a,f)}};THREE.TextPath=function(a,b){THREE.Path.call(this);this.parameters=b||{};this.set(a)};THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters;this.text=a;var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:\"helvetiker\",f=void 0!==b.weight?b.weight:\"normal\",g=void 0!==b.style?b.style:\"normal\";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=g};\r\nTHREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b};\r\nTHREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log(\"THREE.AnimationHandler.add: Warning! \"+a.name+\" already exists in library. Overwriting.\");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(0>a.hierarchy[c].keys[d].time)a.hierarchy[c].keys[d].time=\r\n0;if(void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var j=a.hierarchy[c].keys[d].morphTargets[i];h[j]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var k=\r\n{};for(j in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===j){k[j]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(k[j]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=k}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*\r\na.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if(\"string\"===typeof a){if(b[a])return b[a];console.log(\"THREE.AnimationHandler.get: Couldn't find animation \"+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=\r\n1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c,d){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.JITCompile=void 0!==d?d:!0;this.points=[];this.target=new THREE.Vector3};\r\nTHREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)f.useQuaternion=!0;f.matrixAutoUpdate=!0;if(void 0===f.animationCache)f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof\r\nTHREE.Bone?f.skinMatrix:f.matrix;var g=f.animationCache.prevKey;f=f.animationCache.nextKey;g.pos=this.data.hierarchy[c].keys[0];g.rot=this.data.hierarchy[c].keys[0];g.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith(\"pos\",c,1);f.rot=this.getNextKeyWith(\"rot\",c,1);f.scl=this.getNextKeyWith(\"scl\",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};\r\nTHREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};\r\nTHREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)if(void 0!==this.hierarchy[a].animationCache)this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache};\r\nTHREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=[\"pos\",\"rot\",\"scl\"],c,d,f,g,e,h,i,j,k=this.data.JIT.hierarchy,q,m;m=this.currentTime+=a*this.timeScale;q=this.currentTime%=this.data.length;j=parseInt(Math.min(q*this.data.fps,this.data.length*this.data.fps),10);for(var o=0,p=this.hierarchy.length;o<p;o++)if(a=this.hierarchy[o],i=a.animationCache,this.JITCompile&&void 0!==k[o][j])a instanceof THREE.Bone?(a.skinMatrix=k[o][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!1):(a.matrix=\r\nk[o][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{if(this.JITCompile)a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix;for(var n=0;3>n;n++){c=b[n];e=i.prevKey[c];h=i.nextKey[c];if(h.time<=m){if(q<m)if(this.loop){e=this.data.hierarchy[o].keys[0];for(h=this.getNextKeyWith(c,o,1);h.time<q;)e=h,h=this.getNextKeyWith(c,o,h.index+1)}else{this.stop();return}else{do e=h,h=this.getNextKeyWith(c,o,h.index+1);while(h.time<q)}i.prevKey[c]=\r\ne;i.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(q-e.time)/(h.time-e.time);f=e[c];g=h[c];if(0>d||1<d)console.log(\"THREE.Animation.update: Warning! Scale out of bounds:\"+d+\" on bone \"+o),d=0>d?0:1;if(\"pos\"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=f[0]+(g[0]-f[0])*d,c.y=f[1]+(g[1]-f[1])*d,c.z=f[2]+(g[2]-f[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)if(this.points[0]=\r\nthis.getPrevKeyWith(\"pos\",o,e.index-1).pos,this.points[1]=f,this.points[2]=g,this.points[3]=this.getNextKeyWith(\"pos\",o,h.index+1).pos,d=0.33*d+0.33,f=this.interpolateCatmullRom(this.points,d),c.x=f[0],c.y=f[1],c.z=f[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)d=this.interpolateCatmullRom(this.points,1.01*d),this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0)}else if(\"rot\"===\r\nc)THREE.Quaternion.slerp(f,g,a.quaternion,d);else if(\"scl\"===c)c=a.scale,c.x=f[0]+(g[0]-f[0])*d,c.y=f[1]+(g[1]-f[1])*d,c.z=f[2]+(g[2]-f[2])*d}}if(this.JITCompile&&void 0===k[0][j]){this.hierarchy[0].updateMatrixWorld(!0);for(o=0;o<this.hierarchy.length;o++)k[o][j]=this.hierarchy[o]instanceof THREE.Bone?this.hierarchy[o].skinMatrix.clone():this.hierarchy[o].matrix.clone()}}};\r\nTHREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,g,e,h,i,j;f=(a.length-1)*b;g=Math.floor(f);f-=g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>a.length-2?g:g+1;c[3]=g>a.length-3?g:g+2;g=a[c[0]];h=a[c[1]];i=a[c[2]];j=a[c[3]];c=f*f;e=f*c;d[0]=this.interpolate(g[0],h[0],i[0],j[0],f,c,e);d[1]=this.interpolate(g[1],h[1],i[1],j[1],f,c,e);d[2]=this.interpolate(g[2],h[2],i[2],j[2],f,c,e);return d};\r\nTHREE.Animation.prototype.interpolate=function(a,b,c,d,f,g,e){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*e+(-3*(b-c)-2*a-d)*g+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};\r\nTHREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};\r\nTHREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var g=c[f],e=this.getNextKeyWith(g,a,0);e&&e.apply(g)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();\r\nd.matrixWorldNeedsUpdate=!0}}};\r\nTHREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,g;for(c=0;c<d;c++){f=this.hierarchy[c];g=this.data.hierarchy[c];f.useQuaternion=!0;if(void 0===g.animationCache)g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:\r\nf.matrix;f=this.data.hierarchy[c].keys;if(f.length)g.animationCache.prevKey=f[0],g.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};\r\nTHREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};\r\nTHREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,g=this.data.JIT.hierarchy,e,h,i;h=this.currentTime+=a*this.timeScale;e=this.currentTime%=this.data.length;if(e<this.startTimeMs)e=this.currentTime=this.startTimeMs+e;f=parseInt(Math.min(e*this.data.fps,this.data.length*this.data.fps),10);if((i=e<h)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var k=this.data.hierarchy[a].keys,g=this.data.hierarchy[a].sids;d=k.length-1;f=this.hierarchy[a];if(k.length){for(k=\r\n0;k<g.length;k++)e=g[k],(h=this.getPrevKeyWith(e,a,d))&&h.apply(e);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(e<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var k=b.keys,q=b.animationCache;if(this.JITCompile&&void 0!==g[a][f])d instanceof THREE.Bone?(d.skinMatrix=g[a][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=g[a][f],d.matrixWorldNeedsUpdate=!0);else if(k.length){if(this.JITCompile&&q)d instanceof\r\nTHREE.Bone?d.skinMatrix=q.originalMatrix:d.matrix=q.originalMatrix;b=q.prevKey;c=q.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=k[0];for(c=k[1];c.time<e;)b=c,c=k[b.index+1]}else if(!i)for(var m=k.length-1;c.time<e&&c.index!==m;)b=c,c=k[b.index+1];q.prevKey=b;q.nextKey=c}c.time>=e?b.interpolate(c,e):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===g[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)g[a][f]=\r\nthis.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};\r\nTHREE.CubeCamera=function(a,b,c,d){this.heightOffset=c;this.position=new THREE.Vector3(0,c,0);this.cameraPX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPX.position=this.position;this.cameraNX.position=this.position;this.cameraPY.position=\r\nthis.position;this.cameraNY.position=this.position;this.cameraPZ.position=this.position;this.cameraNZ.position=this.position;this.cameraPX.up.set(0,-1,0);this.cameraNX.up.set(0,-1,0);this.cameraPY.up.set(0,0,1);this.cameraNY.up.set(0,0,-1);this.cameraPZ.up.set(0,-1,0);this.cameraNZ.up.set(0,-1,0);this.targetPX=new THREE.Vector3(0,0,0);this.targetNX=new THREE.Vector3(0,0,0);this.targetPY=new THREE.Vector3(0,0,0);this.targetNY=new THREE.Vector3(0,0,0);this.targetPZ=new THREE.Vector3(0,0,0);this.targetNZ=\r\nnew THREE.Vector3(0,0,0);this.renderTarget=new THREE.WebGLRenderTargetCube(d,d,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updatePosition=function(a){this.position.copy(a);this.position.y+=this.heightOffset;this.targetPX.copy(this.position);this.targetNX.copy(this.position);this.targetPY.copy(this.position);this.targetNY.copy(this.position);this.targetPZ.copy(this.position);this.targetNZ.copy(this.position);this.targetPX.x+=1;this.targetNX.x-=1;this.targetPY.y+=\r\n1;this.targetNY.y-=1;this.targetPZ.z+=1;this.targetNZ.z-=1;this.cameraPX.lookAt(this.targetPX);this.cameraNX.lookAt(this.targetNX);this.cameraPY.lookAt(this.targetPY);this.cameraNY.lookAt(this.targetNY);this.cameraPZ.lookAt(this.targetPZ);this.cameraNZ.lookAt(this.targetNZ)};this.updateCubeMap=function(a,b){var c=this.renderTarget;c.activeCubeFace=0;a.render(b,this.cameraPX,c);c.activeCubeFace=1;a.render(b,this.cameraNX,c);c.activeCubeFace=2;a.render(b,this.cameraPY,c);c.activeCubeFace=3;a.render(b,\r\nthis.cameraNY,c);c.activeCubeFace=4;a.render(b,this.cameraPZ,c);c.activeCubeFace=5;a.render(b,this.cameraNZ,c)}};THREE.CombinedCamera=function(a,b,c,d,f,g,e){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,g,e);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CoolCamera;\r\nTHREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};\r\nTHREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};\r\nTHREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.setLens=function(a,b){var c=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};\r\nTHREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};\r\nTHREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};\r\nTHREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=\r\n0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute(\"tabindex\",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=\r\n!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=\r\nfunction(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=\r\n!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);\r\nthis.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&\r\n(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax);b=this.target;c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);\r\nthis.object.lookAt(b)}};this.domElement.addEventListener(\"contextmenu\",function(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",c(this,this.onMouseMove),!1);this.domElement.addEventListener(\"mousedown\",c(this,this.onMouseDown),!1);this.domElement.addEventListener(\"mouseup\",c(this,this.onMouseUp),!1);this.domElement.addEventListener(\"keydown\",c(this,this.onKeyDown),!1);this.domElement.addEventListener(\"keyup\",c(this,this.onKeyUp),!1)};\r\nTHREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function f(a,b,c,d){var f={name:c,fps:0.6,length:d,hierarchy:[]},e,g=b.getControlPointsArray(),h=b.getLength(),r=g.length,s=0;e=r-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[e]={time:d,pos:g[e],rot:[0,0,0,1],scl:[1,1,1]};for(e=1;e<r-1;e++)s=d*h.chunks[e]/h.total,b.keys[e]={time:s,pos:g[e]};f.hierarchy[0]=b;THREE.AnimationHandler.add(f);\r\nreturn new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function g(a,b){var c,d,f=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),f.vertices[c]=new THREE.Vertex(new THREE.Vector3(d.x,d.y,d.z));return f}this.object=a;this.domElement=void 0!==b?b:document;this.id=\"PathControls\"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=\r\nnew THREE.Object3D;this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/\r\n2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute(\"tabindex\",-1));var e=2*Math.PI,h=Math.PI/180;this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%e;this.phi=0<=a?a:a+e;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;\r\nb=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=function(a){this.domElement===\r\ndocument?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),\r\nc=new THREE.CubeGeometry(10,10,20),e=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(e,b);a.position.set(0,10,0);this.animation=f(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=f(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=\r\nthis.debugPath,b=this.spline,e=g(b,10),c=g(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),e=new THREE.Line(e,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));e.scale.set(1,1,1);a.add(e);c.scale.set(1,1,1);a.add(c);for(var e=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),o=0;o<b.points.length;o++)c=new THREE.Mesh(e,h),c.position.copy(b.points[o]),a.add(c)}this.domElement.addEventListener(\"mousemove\",d(this,this.onMouseMove),\r\n!1)}};THREE.PathControlsIdCounter=0;\r\nTHREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute(\"tabindex\",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,\r\n0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(\"function\"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=\r\n1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=\r\n0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=\r\n!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,e=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-e)/e;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=\r\n!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);\r\nthis.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=\r\n-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener(\"mousemove\",c(this,this.mousemove),!1);this.domElement.addEventListener(\"mousedown\",c(this,this.mousedown),!1);this.domElement.addEventListener(\"mouseup\",c(this,\r\nthis.mouseup),!1);this.domElement.addEventListener(\"keydown\",c(this,this.keydown),!1);this.domElement.addEventListener(\"keyup\",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};\r\nTHREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Matrix4,e=!1,h=1,i=0,j=0,k=0,q=0,m=0,o=window.innerWidth/2,p=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var b=a*this.lookSpeed;\r\nthis.rotateHorizontally(b*q);this.rotateVertically(b*m)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<i||this.autoForward&&!(0>i)?1:i));this.object.translateX(b*j);this.object.translateY(b*k);e&&(this.roll+=this.rollSpeed*a*h);if(this.forward.y>this.constrainVertical[1])this.forward.y=this.constrainVertical[1],this.forward.normalize();else if(this.forward.y<this.constrainVertical[0])this.forward.y=this.constrainVertical[0],this.forward.normalize();f.copy(this.forward);d.set(0,1,0);c.cross(d,\r\nf).normalize();d.cross(f,c).normalize();this.object.matrix.n11=c.x;this.object.matrix.n12=d.x;this.object.matrix.n13=f.x;this.object.matrix.n21=c.y;this.object.matrix.n22=d.y;this.object.matrix.n23=f.y;this.object.matrix.n31=c.z;this.object.matrix.n32=d.z;this.object.matrix.n33=f.z;g.identity();g.n11=Math.cos(this.roll);g.n12=-Math.sin(this.roll);g.n21=Math.sin(this.roll);g.n22=Math.cos(this.roll);this.object.matrix.multiplySelf(g);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.n14=this.object.position.x;\r\nthis.object.matrix.n24=this.object.position.y;this.object.matrix.n34=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.n11*a;this.object.position.y+=this.object.matrix.n21*a;this.object.position.z+=this.object.matrix.n31*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.n12*a;this.object.position.y+=this.object.matrix.n22*a;this.object.position.z+=this.object.matrix.n32*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.n13*\r\na;this.object.position.y-=this.object.matrix.n23*a;this.object.position.z-=this.object.matrix.n33*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.n11,this.object.matrix.n21,this.object.matrix.n31);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.n12,this.object.matrix.n22,this.object.matrix.n32);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener(\"contextmenu\",\r\nfunction(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",function(a){q=(a.clientX-o)/window.innerWidth;m=(a.clientY-p)/window.innerHeight},!1);this.domElement.addEventListener(\"mousedown\",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},!1);this.domElement.addEventListener(\"mouseup\",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1);this.domElement.addEventListener(\"keydown\",\r\nfunction(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:j=-1;break;case 40:case 83:i=-1;break;case 39:case 68:j=1;break;case 81:e=!0;h=1;break;case 69:e=!0;h=-1;break;case 82:k=1;break;case 70:k=-1}},!1);this.domElement.addEventListener(\"keyup\",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:j=0;break;case 40:case 83:i=0;break;case 39:case 68:j=0;break;case 81:e=!1;break;case 69:e=!1;break;case 82:k=0;break;case 70:k=0}},!1)};\r\nTHREE.TrackballControls=function(a,b){THREE.EventTarget.call(this);var c=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=\r\nnew THREE.Vector3;var d=new THREE.Vector3,f=!1,g=-1,e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector2,k=new THREE.Vector2,q=new THREE.Vector2,m=new THREE.Vector2,o={type:\"change\"};this.handleEvent=function(a){if(\"function\"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-c.screen.offsetLeft)/c.radius),0.5*((b-c.screen.offsetTop)/c.radius))};this.getMouseProjectionOnBall=function(a,b){var d=new THREE.Vector3((a-\r\n0.5*c.screen.width-c.screen.offsetLeft)/c.radius,(0.5*c.screen.height+c.screen.offsetTop-b)/c.radius,0),f=d.length();1<f?d.normalize():d.z=Math.sqrt(1-f*f);e.copy(c.object.position).subSelf(c.target);f=c.object.up.clone().setLength(d.y);f.addSelf(c.object.up.clone().crossSelf(e).setLength(d.x));f.addSelf(e.setLength(d.z));return f};this.rotateCamera=function(){var a=Math.acos(h.dot(i)/h.length()/i.length());if(a){var b=(new THREE.Vector3).cross(h,i).normalize(),d=new THREE.Quaternion,a=a*c.rotateSpeed;\r\nd.setFromAxisAngle(b,-a);d.multiplyVector3(e);d.multiplyVector3(c.object.up);d.multiplyVector3(i);c.staticMoving?h=i:(d.setFromAxisAngle(b,a*(c.dynamicDampingFactor-1)),d.multiplyVector3(h))}};this.zoomCamera=function(){var a=1+(k.y-j.y)*c.zoomSpeed;1!==a&&0<a&&(e.multiplyScalar(a),c.staticMoving?j=k:j.y+=(k.y-j.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=m.clone().subSelf(q);if(a.lengthSq()){a.multiplyScalar(e.length()*c.panSpeed);var b=e.clone().crossSelf(c.object.up).setLength(a.x);\r\nb.addSelf(c.object.up.clone().setLength(a.y));c.object.position.addSelf(b);c.target.addSelf(b);c.staticMoving?q=m:q.addSelf(a.sub(m,q).multiplyScalar(c.dynamicDampingFactor))}};this.checkDistances=function(){if(!c.noZoom||!c.noPan)c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),e.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,e.setLength(c.minDistance))};this.update=function(){e.copy(c.object.position).subSelf(c.target);\r\nc.noRotate||c.rotateCamera();c.noZoom||c.zoomCamera();c.noPan||c.panCamera();c.object.position.add(c.target,e);c.checkDistances();c.object.lookAt(c.target);0<d.distanceTo(c.object.position)&&(c.dispatchEvent(o),d.copy(c.object.position))};this.domElement.addEventListener(\"contextmenu\",function(a){a.preventDefault()},!1);this.domElement.addEventListener(\"mousemove\",function(a){c.enabled&&(f&&(h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY),j=k=c.getMouseOnScreen(a.clientX,a.clientY),q=m=c.getMouseOnScreen(a.clientX,\r\na.clientY),f=!1),-1!==g&&(0===g&&!c.noRotate?i=c.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!c.noZoom?k=c.getMouseOnScreen(a.clientX,a.clientY):2===g&&!c.noPan&&(m=c.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener(\"mousedown\",function(a){if(c.enabled&&(a.preventDefault(),a.stopPropagation(),-1===g))g=a.button,0===g&&!c.noRotate?h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!c.noZoom?j=k=c.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(q=m=\r\nc.getMouseOnScreen(a.clientX,a.clientY))},!1);this.domElement.addEventListener(\"mouseup\",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),g=-1)},!1);window.addEventListener(\"keydown\",function(a){c.enabled&&-1===g&&(a.keyCode===c.keys[0]&&!c.noRotate?g=0:a.keyCode===c.keys[1]&&!c.noZoom?g=1:a.keyCode===c.keys[2]&&!c.noPan&&(g=2),-1!==g&&(f=!0))},!1);window.addEventListener(\"keyup\",function(){c.enabled&&-1!==g&&(g=-1)},!1)};\r\nTHREE.CubeGeometry=function(a,b,c,d,f,g,e,h){function i(a,b,c,e,h,i,k,m){var n,o=d||1,q=f||1,p=h/2,r=i/2,s=j.vertices.length;if(\"x\"===a&&\"y\"===b||\"y\"===a&&\"x\"===b)n=\"z\";else if(\"x\"===a&&\"z\"===b||\"z\"===a&&\"x\"===b)n=\"y\",q=g||1;else if(\"z\"===a&&\"y\"===b||\"y\"===a&&\"z\"===b)n=\"x\",o=g||1;var l=o+1,t=q+1,w=h/o,E=i/q,S=new THREE.Vector3;S[n]=0<k?1:-1;for(h=0;h<t;h++)for(i=0;i<l;i++){var R=new THREE.Vector3;R[a]=(i*w-p)*c;R[b]=(h*E-r)*e;R[n]=k;j.vertices.push(new THREE.Vertex(R))}for(h=0;h<q;h++)for(i=0;i<o;i++)a=\r\nnew THREE.Face4(i+l*h+s,i+l*(h+1)+s,i+1+l*(h+1)+s,i+1+l*h+s),a.normal.copy(S),a.vertexNormals.push(S.clone(),S.clone(),S.clone(),S.clone()),a.materialIndex=m,j.faces.push(a),j.faceVertexUvs[0].push([new THREE.UV(i/o,h/q),new THREE.UV(i/o,(h+1)/q),new THREE.UV((i+1)/o,(h+1)/q),new THREE.UV((i+1)/o,h/q)])}THREE.Geometry.call(this);var j=this,k=a/2,q=b/2,m=c/2,o,p,n,r,s,t;if(void 0!==e){if(e instanceof Array)this.materials=e;else{this.materials=[];for(o=0;6>o;o++)this.materials.push(e)}o=0;r=1;p=2;s=\r\n3;n=4;t=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var w in h)void 0!==this.sides[w]&&(this.sides[w]=h[w]);this.sides.px&&i(\"z\",\"y\",-1,-1,c,b,k,o);this.sides.nx&&i(\"z\",\"y\",1,-1,c,b,-k,r);this.sides.py&&i(\"x\",\"z\",1,1,a,c,q,p);this.sides.ny&&i(\"x\",\"z\",1,-1,a,c,-q,s);this.sides.pz&&i(\"x\",\"y\",1,-1,a,b,m,n);this.sides.nz&&i(\"x\",\"y\",-1,-1,a,b,-m,t);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;\r\nTHREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;\r\nTHREE.CylinderGeometry=function(a,b,c,d,f,g){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,e=c/2,d=d||8,f=f||1,h,i,j=[],k=[];for(i=0;i<=f;i++){var q=[],m=[],o=i/f,p=o*(b-a)+a;for(h=0;h<=d;h++){var n=h/d,r=p*Math.sin(2*n*Math.PI),s=-o*c+e,t=p*Math.cos(2*n*Math.PI);this.vertices.push(new THREE.Vertex(new THREE.Vector3(r,s,t)));q.push(this.vertices.length-1);m.push(new THREE.UV(n,o))}j.push(q);k.push(m)}for(i=0;i<f;i++)for(h=0;h<d;h++){var c=j[i][h],q=j[i+1][h],\r\nm=j[i+1][h+1],o=j[i][h+1],p=this.vertices[c].position.clone().setY(0).normalize(),n=this.vertices[q].position.clone().setY(0).normalize(),r=this.vertices[m].position.clone().setY(0).normalize(),s=this.vertices[o].position.clone().setY(0).normalize(),t=k[i][h].clone(),w=k[i+1][h].clone(),u=k[i+1][h+1].clone(),v=k[i][h+1].clone();this.faces.push(new THREE.Face4(c,q,m,o,[p,n,r,s]));this.faceVertexUvs[0].push([t,w,u,v])}if(!g&&0<a){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,e,0)));for(h=\r\n0;h<d;h++)c=j[0][h],q=j[0][h+1],m=this.vertices.length-1,p=new THREE.Vector3(0,1,0),n=new THREE.Vector3(0,1,0),r=new THREE.Vector3(0,1,0),t=k[0][h].clone(),w=k[0][h+1].clone(),u=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(c,q,m,[p,n,r])),this.faceVertexUvs[0].push([t,w,u])}if(!g&&0<b){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,-e,0)));for(h=0;h<d;h++)c=j[i][h+1],q=j[i][h],m=this.vertices.length-1,p=new THREE.Vector3(0,-1,0),n=new THREE.Vector3(0,-1,0),r=new THREE.Vector3(0,-1,\r\n0),t=k[i][h+1].clone(),w=k[i][h].clone(),u=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(c,q,m,[p,n,r])),this.faceVertexUvs[0].push([t,w,u])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;\r\nTHREE.ExtrudeGeometry=function(a,b){if(\"undefined\"!==typeof a){THREE.Geometry.call(this);var a=a instanceof Array?a:[a],c,d,f=a.length;this.shapebb=a[f-1].getBoundingBox();for(d=0;d<f;d++)c=a[d],this.addShape(c,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;\r\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log(\"die\");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,f=THREE.ExtrudeGeometry.__v2,e=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);f.set(a.x-c.x,a.y-c.y);d=d.normalize();f=f.normalize();e.set(-d.y,d.x);g.set(f.y,-f.x);h.copy(a).addSelf(e);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();\r\nh.copy(b).addSelf(e);i.copy(c).addSelf(g);e=d.dot(g);g=i.subSelf(h).dot(g);0===e&&(console.log(\"Either infinite or no solutions!\"),0===g?console.log(\"Its finite solutions.\"):console.log(\"Too bad, no solutions.\"));g/=e;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function f(a){for(y=a.length;0<=--y;){$=y;C=y-1;0>C&&(C=a.length-1);for(var b=\r\n0,c=o+2*k,b=0;b<c;b++){var d=L*b,f=L*(b+1),e=ca+$+d,g=ca+C+d,h=ca+C+f,i=ca+$+f,e=e+D,g=g+D,h=h+D,i=i+D;B.faces.push(new THREE.Face4(e,g,h,i,null,null,u));var f=B.vertices[e].position.x,d=B.vertices[e].position.y,e=B.vertices[e].position.z,j=B.vertices[g].position.x,l=B.vertices[g].position.y,g=B.vertices[g].position.z,m=B.vertices[h].position.x,n=B.vertices[h].position.y,h=B.vertices[h].position.z,q=B.vertices[i].position.x,p=B.vertices[i].position.y,i=B.vertices[i].position.z;0.01>Math.abs(d-l)?\r\nB.faceVertexUvs[0].push([new THREE.UV(f,e),new THREE.UV(j,g),new THREE.UV(m,h),new THREE.UV(q,i)]):B.faceVertexUvs[0].push([new THREE.UV(d,e),new THREE.UV(l,g),new THREE.UV(n,h),new THREE.UV(p,i)])}}}function g(a,b,c){B.vertices.push(new THREE.Vertex(new THREE.Vector3(a,b,c)))}function e(a,b,c){a+=D;b+=D;c+=D;B.faces.push(new THREE.Face3(a,b,c,null,null,w));var d=B.vertices[b].position.x,b=B.vertices[b].position.y,f=B.vertices[c].position.x,c=B.vertices[c].position.y;B.faceVertexUvs[0].push([new THREE.UV(B.vertices[a].position.x,\r\n1-B.vertices[a].position.y),new THREE.UV(d,1-b),new THREE.UV(f,1-c)])}var h=void 0!==b.amount?b.amount:100,i=void 0!==b.bevelThickness?b.bevelThickness:6,j=void 0!==b.bevelSize?b.bevelSize:i-2,k=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,m=void 0!==b.curveSegments?b.curveSegments:12,o=void 0!==b.steps?b.steps:1,p=b.bendPath,n=b.extrudePath,r,s=!1,t=void 0!==b.useSpacedPoints?b.useSpacedPoints:!1,w=b.material,u=b.extrudeMaterial;if(n)r=n.getPoints(m),o=r.length,\r\ns=!0,q=!1;q||(j=i=k=0);var v,A,F,B=this,D=this.vertices.length;p&&a.addWrapPath(p);m=t?a.extractAllSpacedPoints(m):a.extractAllPoints(m);p=m.shape;m=m.holes;if(n=!THREE.Shape.Utils.isClockWise(p)){p=p.reverse();for(A=0,F=m.length;A<F;A++)v=m[A],THREE.Shape.Utils.isClockWise(v)&&(m[A]=v.reverse());n=!1}n=THREE.Shape.Utils.triangulateShape(p,m);t=p;for(A=0,F=m.length;A<F;A++)v=m[A],p=p.concat(v);for(var H,I,Q,P,L=p.length,K=n.length,O=[],y=0,l=t.length,$=l-1,C=y+1;y<l;y++,$++,C++)$===l&&($=0),C===l&&\r\n(C=0),O[y]=d(t[y],t[$],t[C]);var E=[],S,R=O.concat();for(A=0,F=m.length;A<F;A++){v=m[A];S=[];for(y=0,l=v.length,$=l-1,C=y+1;y<l;y++,$++,C++)$===l&&($=0),C===l&&(C=0),S[y]=d(v[y],v[$],v[C]);E.push(S);R=R.concat(S)}for(H=0;H<k;H++){I=H/k;Q=i*(1-I);I=j*Math.sin(I*Math.PI/2);for(y=0,l=t.length;y<l;y++)P=c(t[y],O[y],I),g(P.x,P.y,-Q);for(A=0,F=m.length;A<F;A++){v=m[A];S=E[A];for(y=0,l=v.length;y<l;y++)P=c(v[y],S[y],I),g(P.x,P.y,-Q)}}I=j;for(y=0;y<L;y++)P=q?c(p[y],R[y],I):p[y],s?g(P.x,P.y+r[0].y,r[0].x):\r\ng(P.x,P.y,0);for(H=1;H<=o;H++)for(y=0;y<L;y++)P=q?c(p[y],R[y],I):p[y],s?g(P.x,P.y+r[H-1].y,r[H-1].x):g(P.x,P.y,h/o*H);for(H=k-1;0<=H;H--){I=H/k;Q=i*(1-I);I=j*Math.sin(I*Math.PI/2);for(y=0,l=t.length;y<l;y++)P=c(t[y],O[y],I),g(P.x,P.y,h+Q);for(A=0,F=m.length;A<F;A++){v=m[A];S=E[A];for(y=0,l=v.length;y<l;y++)P=c(v[y],S[y],I),s?g(P.x,P.y+r[o-1].y,r[o-1].x+Q):g(P.x,P.y,h+Q)}}if(q){i=0*L;for(y=0;y<K;y++)h=n[y],e(h[2]+i,h[1]+i,h[0]+i);i=L*(o+2*k);for(y=0;y<K;y++)h=n[y],e(h[0]+i,h[1]+i,h[2]+i)}else{for(y=\r\n0;y<K;y++)h=n[y],e(h[2],h[1],h[0]);for(y=0;y<K;y++)h=n[y],e(h[0]+L*o,h[1]+L*o,h[2]+L*o)}var ca=0;f(t);ca+=t.length;for(A=0,F=m.length;A<F;A++)v=m[A],f(v),ca+=v.length};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;\r\nTHREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);this.steps=b||12;this.angle=c||2*Math.PI;for(var b=this.angle/this.steps,c=[],d=[],f=[],g=[],e=(new THREE.Matrix4).setRotationZ(b),h=0;h<a.length;h++)this.vertices.push(new THREE.Vertex(a[h])),c[h]=a[h].clone(),d[h]=this.vertices.length-1;for(var i=0;i<=this.angle+0.001;i+=b){for(h=0;h<c.length;h++)i<this.angle?(c[h]=e.multiplyVector3(c[h].clone()),this.vertices.push(new THREE.Vertex(c[h])),f[h]=this.vertices.length-1):f=g;0==i&&(g=d);\r\nfor(h=0;h<d.length-1;h++)this.faces.push(new THREE.Face4(f[h],f[h+1],d[h+1],d[h])),this.faceVertexUvs[0].push([new THREE.UV(1-i/this.angle,h/a.length),new THREE.UV(1-i/this.angle,(h+1)/a.length),new THREE.UV(1-(i-b)/this.angle,(h+1)/a.length),new THREE.UV(1-(i-b)/this.angle,h/a.length)]);d=f;f=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\r\nTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var f=a/2,g=b/2,c=c||1,d=d||1,e=c+1,h=d+1,i=a/c,j=b/d,k=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<e;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*i-f,-(a*j-g),0)));for(a=0;a<d;a++)for(b=0;b<c;b++)f=new THREE.Face4(b+e*a,b+e*(a+1),b+1+e*(a+1),b+1+e*a),f.normal.copy(k),f.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(f),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/\r\nc,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\r\nTHREE.SphereGeometry=function(a,b,c,d,f,g,e){THREE.Geometry.call(this);var a=a||50,d=void 0!==d?d:0,f=void 0!==f?f:2*Math.PI,g=void 0!==g?g:0,e=void 0!==e?e:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,j=[],k=[];for(i=0;i<=c;i++){var q=[],m=[];for(h=0;h<=b;h++){var o=h/b,p=i/c,n=-a*Math.cos(d+o*f)*Math.sin(g+p*e),r=a*Math.cos(g+p*e),s=a*Math.sin(d+o*f)*Math.sin(g+p*e);this.vertices.push(new THREE.Vertex(new THREE.Vector3(n,r,s)));q.push(this.vertices.length-1);m.push(new THREE.UV(o,\r\np))}j.push(q);k.push(m)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=j[i][h+1],f=j[i][h],g=j[i+1][h],e=j[i+1][h+1],q=this.vertices[d].position.clone().normalize(),m=this.vertices[f].position.clone().normalize(),o=this.vertices[g].position.clone().normalize(),p=this.vertices[e].position.clone().normalize(),n=k[i][h+1].clone(),r=k[i][h].clone(),s=k[i+1][h].clone(),t=k[i+1][h+1].clone();Math.abs(this.vertices[d].position.y)==a?(this.faces.push(new THREE.Face3(d,g,e,[q,o,p])),this.faceVertexUvs[0].push([n,\r\ns,t])):Math.abs(this.vertices[g].position.y)==a?(this.faces.push(new THREE.Face3(d,f,g,[q,m,o])),this.faceVertexUvs[0].push([n,r,s])):(this.faces.push(new THREE.Face4(d,f,g,e,[q,m,o,p])),this.faceVertexUvs[0].push([n,r,s,t]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\r\nTHREE.TextGeometry=function(a,b){var c=(new THREE.TextPath(a,b)).toShapes();b.amount=void 0!==b.height?b.height:50;if(void 0===b.bevelThickness)b.bevelThickness=10;if(void 0===b.bevelSize)b.bevelSize=8;if(void 0===b.bevelEnabled)b.bevelEnabled=!1;if(b.bend){var d=c[c.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;\r\nTHREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\r\nTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=\r\n0,f=(\"\"+a).split(\"\"),g=f.length,e=[],a=0;a<g;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;e.push(h.path)}return{paths:e,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var g=[],e,h,i,j,k,q,m,o,p,n,r,s=b.glyphs[a]||b.glyphs[\"?\"];if(s){if(s.o){b=s._cachedOutline||(s._cachedOutline=s.o.split(\" \"));j=b.length;for(a=0;a<j;)switch(i=b[a++],i){case \"m\":i=b[a++]*c+d;k=b[a++]*c;g.push(new THREE.Vector2(i,k));f.moveTo(i,k);break;case \"l\":i=b[a++]*c+d;k=b[a++]*c;g.push(new THREE.Vector2(i,\r\nk));f.lineTo(i,k);break;case \"q\":i=b[a++]*c+d;k=b[a++]*c;o=b[a++]*c+d;p=b[a++]*c;f.quadraticCurveTo(o,p,i,k);if(e=g[g.length-1]){q=e.x;m=e.y;for(e=1,h=this.divisions;e<=h;e++){var t=e/h,w=THREE.Shape.Utils.b2(t,q,o,i),t=THREE.Shape.Utils.b2(t,m,p,k);g.push(new THREE.Vector2(w,t))}}break;case \"b\":if(i=b[a++]*c+d,k=b[a++]*c,o=b[a++]*c+d,p=b[a++]*-c,n=b[a++]*c+d,r=b[a++]*-c,f.bezierCurveTo(i,k,o,p,n,r),e=g[g.length-1]){q=e.x;m=e.y;for(e=1,h=this.divisions;e<=h;e++)t=e/h,w=THREE.Shape.Utils.b3(t,q,o,\r\nn,i),t=THREE.Shape.Utils.b3(t,m,p,r,k),g.push(new THREE.Vector2(w,t))}}}return{offset:s.ha*c,points:g,path:f}}}};\r\n(function(a){var b=function(a){for(var b=a.length,f=0,g=b-1,e=0;e<b;g=e++)f+=a[g].x*a[e].y-a[e].x*a[g].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var g=[],e=[],h=[],i,j,k;if(0<b(a))for(j=0;j<f;j++)e[j]=j;else for(j=0;j<f;j++)e[j]=f-1-j;var q=2*f;for(j=f-1;2<f;){if(0>=q--){console.log(\"Warning, unable to triangulate polygon!\");break}i=j;f<=i&&(i=0);j=i+1;f<=j&&(j=0);k=j+1;f<=k&&(k=0);var m;a:{m=a;var o=i,p=j,n=k,r=f,s=e,t=void 0,w=void 0,u=void 0,v=void 0,A=void 0,\r\nF=void 0,B=void 0,D=void 0,H=void 0,w=m[s[o]].x,u=m[s[o]].y,v=m[s[p]].x,A=m[s[p]].y,F=m[s[n]].x,B=m[s[n]].y;if(1.0E-10>(v-w)*(B-u)-(A-u)*(F-w))m=!1;else{for(t=0;t<r;t++)if(!(t==o||t==p||t==n)){var D=m[s[t]].x,H=m[s[t]].y,I=void 0,Q=void 0,P=void 0,L=void 0,K=void 0,O=void 0,y=void 0,l=void 0,$=void 0,C=void 0,E=void 0,S=void 0,I=P=K=void 0,I=F-v,Q=B-A,P=w-F,L=u-B,K=v-w,O=A-u,y=D-w,l=H-u,$=D-v,C=H-A,E=D-F,S=H-B,I=I*C-Q*$,K=K*l-O*y,P=P*S-L*E;if(0<=I&&0<=P&&0<=K){m=!1;break a}}m=!0}}if(m){g.push([a[e[i]],\r\na[e[j]],a[e[k]]]);h.push([e[i],e[j],e[k]]);for(i=j,k=j+1;k<f;i++,k++)e[i]=e[k];f--;q=2*f}}return d?h:g};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};\r\nTHREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=f||2*Math.PI;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var g=d/this.segmentsT*this.arc,e=2*c/this.segmentsR*Math.PI;f.x=this.radius*Math.cos(g);f.y=this.radius*Math.sin(g);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(e))*Math.cos(g);h.y=(this.radius+this.tube*Math.cos(e))*Math.sin(g);h.z=\r\nthis.tube*Math.sin(e);this.vertices.push(new THREE.Vertex(h));a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR));b.push(h.clone().subSelf(f).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){var f=(this.segmentsT+1)*c+d-1,g=(this.segmentsT+1)*(c-1)+d-1,e=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,i=new THREE.Face4(f,g,e,h,[b[f],b[g],b[e],b[h]]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);i.normal.addSelf(b[e]);i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);\r\nthis.faceVertexUvs[0].push([a[f].clone(),a[g].clone(),a[e].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\r\nTHREE.TorusKnotGeometry=function(a,b,c,d,f,g,e){function h(a,b,c,d,f,e){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*f*(2+c);b=0.5*f*(2+c)*b;f=0.5*e*f*Math.sin(a);return new THREE.Vector3(g,b,f)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=f||2;this.q=g||3;this.heightScale=e||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=\r\nArray(this.segmentsT);for(b=0;b<this.segmentsT;++b){var i=2*(a/this.segmentsR)*this.p*Math.PI,e=2*(b/this.segmentsT)*Math.PI,g=h(i,e,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,e,this.q,this.p,this.radius,this.heightScale);c.sub(i,g);d.add(i,g);f.cross(c,d);d.cross(f,c);f.normalize();d.normalize();i=-this.tube*Math.cos(e);e=this.tube*Math.sin(e);g.x+=i*d.x+e*f.x;g.y+=i*d.y+e*f.y;g.z+=i*d.z+e*f.z;this.grid[a][b]=this.vertices.push(new THREE.Vertex(new THREE.Vector3(g.x,g.y,g.z)))-1}}for(a=\r\n0;a<this.segmentsR;++a)for(b=0;b<this.segmentsT;++b){var f=(a+1)%this.segmentsR,g=(b+1)%this.segmentsT,c=this.grid[a][b],d=this.grid[f][b],f=this.grid[f][g],g=this.grid[a][g],e=new THREE.UV(a/this.segmentsR,b/this.segmentsT),i=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),j=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),k=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,f,g));this.faceVertexUvs[0].push([e,i,j,k])}this.computeCentroids();this.computeFaceNormals();\r\nthis.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\r\nTHREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=new THREE.Vertex(a.normalize());b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,a);return b}function g(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.position.clone(),b.position.clone(),c.position.clone()]),d.centroid.addSelf(a.position).addSelf(b.position).addSelf(c.position).divideScalar(3),d.normal=d.centroid.clone().normalize(),\r\ni.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),i.faceVertexUvs[0].push([h(a.uv,a.position,d),h(b.uv,b.position,d),h(c.uv,c.position,d)])):(d-=1,g(a,e(a,b),e(a,c),d),g(e(a,b),b,e(b,c),d),g(e(a,c),e(b,c),c,d),g(e(a,b),e(b,c),e(a,c),d))}function e(a,b){q[a.index]||(q[a.index]=[]);q[b.index]||(q[b.index]=[]);var c=q[a.index][b.index];void 0===c&&(q[a.index][b.index]=q[b.index][a.index]=c=f((new THREE.Vector3).add(a.position,b.position).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&\r\n(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);for(var c=c||1,d=d||0,i=this,j=0,k=a.length;j<k;j++)f(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var q=[],a=this.vertices,j=0,k=b.length;j<k;j++)g(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices();j=0;for(k=this.vertices.length;j<k;j++)this.vertices[j].position.multiplyScalar(c);this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=new THREE.Geometry;\r\nTHREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;\r\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\r\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=new THREE.Geometry;THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\r\nTHREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vertex);a.vertices.push(new THREE.Vertex(new THREE.Vector3(0,100,0)));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));\r\nthis.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=new THREE.Object3D;THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\r\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.lineGeometry.vertices.push(new THREE.Vertex(new THREE.Vector3));d.lineGeometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var d=this;this.lineGeometry=new THREE.Geometry;this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.pointMap={};b(\"n1\",\"n2\",16755200);b(\"n2\",\r\n\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);b(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);\r\nthis.update(a);this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces);this.add(this.lines)};THREE.CameraHelper.prototype=new THREE.Object3D;THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\r\nTHREE.CameraHelper.prototype.update=function(a){function b(a,b,g,e){THREE.CameraHelper.__v.set(b,g,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=c.pointMap[a];if(void 0!==a){b=0;for(g=a.length;b<g;b++)c.lineGeometry.vertices[a[b]].position.copy(THREE.CameraHelper.__v)}}var c=this;THREE.CameraHelper.__c.projectionMatrix.copy(a.projectionMatrix);b(\"c\",0,0,-1);b(\"t\",0,0,1);b(\"n1\",-1,-1,-1);b(\"n2\",1,-1,-1);b(\"n3\",-1,1,-1);b(\"n4\",1,1,-1);b(\"f1\",-1,-1,\r\n1);b(\"f2\",1,-1,1);b(\"f3\",-1,1,1);b(\"f4\",1,1,1);b(\"u1\",0.7,1.1,-1);b(\"u2\",-0.7,1.1,-1);b(\"u3\",0,2,-1);b(\"cf1\",-1,0,1);b(\"cf2\",1,0,1);b(\"cf3\",0,-1,1);b(\"cf4\",0,1,1);b(\"cn1\",-1,0,-1);b(\"cn2\",1,0,-1);b(\"cn3\",0,-1,-1);b(\"cn4\",0,1,-1);this.lineGeometry.__dirtyVertices=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;\r\nTHREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};\r\nTHREE.SubdivisionModifier.prototype.smooth=function(a){function b(a,b,c,d,h,i){var j=new THREE.Face4(a,b,c,d,null,h.color,h.material);if(e.useOldVertexColors){j.vertexColors=[];for(var k,n,o,q=0;4>q;q++){o=i[q];k=new THREE.Color;k.setRGB(0,0,0);for(var p=0;p<o.length;p++)n=h.vertexColors[o[p]-1],k.r+=n.r,k.g+=n.g,k.b+=n.b;k.r/=o.length;k.g/=o.length;k.b/=o.length;j.vertexColors[q]=k}}f.push(j);(!e.supportUVs||0!=m.length)&&g.push([m[a],m[b],m[c],m[d]])}function c(a,b){return Math.min(a,b)+\"_\"+Math.max(a,\r\nb)}var d=[],f=[],g=[],e=this,h=a.vertices,d=a.faces,i=h.concat(),j=[],k={},q={},m=[],o,p,n,r,s,t=a.faceVertexUvs[0];for(o=0,p=t.length;o<p;o++)for(n=0,r=t[o].length;n<r;n++)s=d[o][\"abcd\".charAt(n)],m[s]||(m[s]=t[o][n]);var w;for(o=0,p=d.length;o<p;o++)if(s=d[o],j.push(s.centroid),i.push(new THREE.Vertex(s.centroid)),e.supportUVs&&0!=m.length){w=new THREE.UV;if(s instanceof THREE.Face3)w.u=m[s.a].u+m[s.b].u+m[s.c].u,w.v=m[s.a].v+m[s.b].v+m[s.c].v,w.u/=3,w.v/=3;else if(s instanceof THREE.Face4)w.u=\r\nm[s.a].u+m[s.b].u+m[s.c].u+m[s.d].u,w.v=m[s.a].v+m[s.b].v+m[s.c].v+m[s.d].v,w.u/=4,w.v/=4;m.push(w)}p=function(a){function b(a,c,d){void 0===a[c]&&(a[c]=[]);a[c].push(d)}var d,f,e,g,h={};for(d=0,f=a.faces.length;d<f;d++)e=a.faces[d],e instanceof THREE.Face3?(g=c(e.a,e.b),b(h,g,d),g=c(e.b,e.c),b(h,g,d),g=c(e.c,e.a),b(h,g,d)):e instanceof THREE.Face4&&(g=c(e.a,e.b),b(h,g,d),g=c(e.b,e.c),b(h,g,d),g=c(e.c,e.d),b(h,g,d),g=c(e.d,e.a),b(h,g,d));return h}(a);var u=0,t=h.length,v,A,F={},B={},D=function(a,\r\nb){void 0===F[a]&&(F[a]=[]);F[a].push(b)},H=function(a,b){void 0===B[a]&&(B[a]={});B[a][b]=null};for(o in p){w=p[o];v=o.split(\"_\");A=v[0];v=v[1];D(A,[A,v]);D(v,[A,v]);for(n=0,r=w.length;n<r;n++)s=w[n],H(A,s,o),H(v,s,o);2>w.length&&(q[o]=!0)}for(o in p)if(w=p[o],s=w[0],w=w[1],v=o.split(\"_\"),A=v[0],v=v[1],r=new THREE.Vector3,q[o]?(r.addSelf(h[A].position),r.addSelf(h[v].position),r.multiplyScalar(0.5)):(r.addSelf(j[s]),r.addSelf(j[w]),r.addSelf(h[A].position),r.addSelf(h[v].position),r.multiplyScalar(0.25)),\r\nk[o]=t+d.length+u,i.push(new THREE.Vertex(r)),u++,e.supportUVs&&0!=m.length)w=new THREE.UV,w.u=m[A].u+m[v].u,w.v=m[A].v+m[v].v,w.u/=2,w.v/=2,m.push(w);var I,Q;v=[\"123\",\"12\",\"2\",\"23\"];r=[\"123\",\"23\",\"3\",\"31\"];var D=[\"123\",\"31\",\"1\",\"12\"],H=[\"1234\",\"12\",\"2\",\"23\"],P=[\"1234\",\"23\",\"3\",\"34\"],L=[\"1234\",\"34\",\"4\",\"41\"],K=[\"1234\",\"41\",\"1\",\"12\"];for(o=0,p=j.length;o<p;o++)s=d[o],w=t+o,s instanceof THREE.Face3?(u=c(s.a,s.b),A=c(s.b,s.c),I=c(s.c,s.a),b(w,k[u],s.b,k[A],s,v),b(w,k[A],s.c,k[I],s,r),b(w,k[I],s.a,k[u],\r\ns,D)):s instanceof THREE.Face4?(u=c(s.a,s.b),A=c(s.b,s.c),I=c(s.c,s.d),Q=c(s.d,s.a),b(w,k[u],s.b,k[A],s,H),b(w,k[A],s.c,k[I],s,P),b(w,k[I],s.d,k[Q],s,L),b(w,k[Q],s.a,k[u],s,K)):console.log(\"face should be a face!\",s);d=i;i=new THREE.Vector3;k=new THREE.Vector3;for(o=0,p=h.length;o<p;o++)if(void 0!==F[o]){i.set(0,0,0);k.set(0,0,0);s=new THREE.Vector3(0,0,0);w=0;for(n in B[o])i.addSelf(j[n]),w++;u=0;t=F[o].length;for(n=0;n<t;n++)q[c(F[o][n][0],F[o][n][1])]&&u++;if(2!=u){i.divideScalar(w);for(n=0;n<\r\nt;n++)w=F[o][n],w=h[w[0]].position.clone().addSelf(h[w[1]].position).divideScalar(2),k.addSelf(w);k.divideScalar(t);s.addSelf(h[o].position);s.multiplyScalar(t-3);s.addSelf(i);s.addSelf(k.multiplyScalar(2));s.divideScalar(t);d[o].position=s}}a.vertices=d;a.faces=f;a.faceVertexUvs[0]=g;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};\r\nTHREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\r\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:\"anonymous\",addStatusElement:function(){var a=document.createElement(\"div\");a.style.position=\"absolute\";a.style.right=\"0px\";a.style.top=\"0px\";a.style.fontSize=\"0.8em\";a.style.textAlign=\"left\";a.style.background=\"rgba(0,0,0,0.25)\";a.style.color=\"#fff\";a.style.width=\"120px\";a.style.padding=\"0.5em 0.5em 0.5em 0.5em\";a.style.zIndex=1E3;a.innerHTML=\"Loading ...\";return a},updateProgress:function(a){var b=\"Loaded \",b=a.total?b+((100*a.loaded/\r\na.total).toFixed(0)+\"%\"):b+((a.loaded/1E3).toFixed(2)+\" KB\");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split(\"/\");a.pop();return(1>a.length?\".\":a.join(\"/\"))+\"/\"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=\r\nMath.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,b){var e=new Image;e.onload=function(){if(!c(this.width)||!c(this.height)){var b=d(this.width),e=d(this.height);a.image.width=b;a.image.height=e;a.image.getContext(\"2d\").drawImage(this,0,0,b,e)}else a.image=this;a.needsUpdate=!0};e.crossOrigin=h.crossOrigin;e.src=b}function g(a,c,d,e,g,h){var i=document.createElement(\"canvas\");a[c]=new THREE.Texture(i);a[c].sourceFile=d;\r\nif(e){a[c].repeat.set(e[0],e[1]);if(1!=e[0])a[c].wrapS=THREE.RepeatWrapping;if(1!=e[1])a[c].wrapT=THREE.RepeatWrapping}g&&a[c].offset.set(g[0],g[1]);if(h){e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(void 0!==e[h[0]])a[c].wrapS=e[h[0]];if(void 0!==e[h[1]])a[c].wrapT=e[h[1]]}f(a[c],b+\"/\"+d)}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i=\"MeshLambertMaterial\",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};a.shading&&\r\n(\"Phong\"==a.shading?i=\"MeshPhongMaterial\":\"Basic\"==a.shading&&(i=\"MeshBasicMaterial\"));if(a.blending)if(\"Additive\"==a.blending)j.blending=THREE.AdditiveBlending;else if(\"Subtractive\"==a.blending)j.blending=THREE.SubtractiveBlending;else if(\"Multiply\"==a.blending)j.blending=THREE.MultiplyBlending;if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;if(void 0!==a.depthTest)j.depthTest=a.depthTest;if(void 0!==a.vertexColors)if(\"face\"==a.vertexColors)j.vertexColors=THREE.FaceColors;else if(a.vertexColors)j.vertexColors=\r\nTHREE.VertexColors;if(a.colorDiffuse)j.color=e(a.colorDiffuse);else if(a.DbgColor)j.color=a.DbgColor;if(a.colorSpecular)j.specular=e(a.colorSpecular);if(a.colorAmbient)j.ambient=e(a.colorAmbient);if(a.transparency)j.opacity=a.transparency;if(a.specularCoef)j.shininess=a.specularCoef;a.mapDiffuse&&b&&g(j,\"map\",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&b&&g(j,\"lightMap\",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&b&&g(j,\"normalMap\",\r\na.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);a.mapSpecular&&b&&g(j,\"specularMap\",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);if(a.mapNormal){var i=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(i.uniforms);k.tNormal.texture=j.normalMap;if(a.mapNormalFactor)k.uNormalScale.value=a.mapNormalFactor;if(j.map)k.tDiffuse.texture=j.map,k.enableDiffuse.value=!0;if(j.specularMap)k.tSpecular.texture=j.specularMap,k.enableSpecular.value=!0;if(j.lightMap)k.tAO.texture=\r\nj.lightMap,k.enableAO.value=!0;k.uDiffuseColor.value.setHex(j.color);k.uSpecularColor.value.setHex(j.specular);k.uAmbientColor.value.setHex(j.ambient);k.uShininess.value=j.shininess;if(void 0!==j.opacity)k.uOpacity.value=j.opacity;j=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:k,lights:!0,fog:!0})}else j=new THREE[i](j);if(void 0!==a.DbgName)j.name=a.DbgName;return j}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};\r\nTHREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;THREE.BinaryLoader.prototype.supr=THREE.Loader.prototype;THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};\r\nTHREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,g){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(4==e.readyState)if(200==e.status||0==e.status){var h=JSON.parse(e.responseText);a.loadAjaxBuffers(h,c,f,d,g)}else console.error(\"THREE.BinaryLoader: Couldn't load [\"+b+\"] [\"+e.status+\"]\")};e.open(\"GET\",b,!0);e.overrideMimeType&&e.overrideMimeType(\"text/plain; charset=x-user-defined\");e.setRequestHeader(\"Content-Type\",\"text/plain\");e.send(null)};\r\nTHREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var g=new XMLHttpRequest,e=c+\"/\"+a.buffers,h=0;g.onreadystatechange=function(){4==g.readyState?200==g.status||0==g.status?THREE.BinaryLoader.prototype.createBinModel(g.response,b,d,a.materials):console.error(\"THREE.BinaryLoader: Couldn't load [\"+e+\"] [\"+g.status+\"]\"):3==g.readyState?f&&(0==h&&(h=g.getResponseHeader(\"Content-Length\")),f({total:h,loaded:g.responseText.length})):2==g.readyState&&(h=g.getResponseHeader(\"Content-Length\"))};\r\ng.open(\"GET\",e,!0);g.responseType=\"arraybuffer\";g.send(null)};\r\nTHREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){var c,f,i,j,k,q,m,o,p,n,r,s,t,w,u;function v(a){return a%4?4-a%4:0}function A(a,b){return(new Uint8Array(a,b,1))[0]}function F(a,b){return(new Uint32Array(a,b,1))[0]}function B(b,c){var d,e,f,g,h,i,j,k,l=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=l[3*d];f=l[3*d+1];g=l[3*d+2];h=y[2*e];e=y[2*e+1];i=y[2*f];j=y[2*f+1];f=y[2*g];k=y[2*g+1];g=L.faceVertexUvs[0];var m=[];m.push(new THREE.UV(h,e));m.push(new THREE.UV(i,j));m.push(new THREE.UV(f,\r\nk));g.push(m)}}function D(b,c){var d,e,f,g,h,i,j,k,l,m,n=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=n[4*d];f=n[4*d+1];g=n[4*d+2];h=n[4*d+3];i=y[2*e];e=y[2*e+1];j=y[2*f];l=y[2*f+1];k=y[2*g];m=y[2*g+1];g=y[2*h];f=y[2*h+1];h=L.faceVertexUvs[0];var o=[];o.push(new THREE.UV(i,e));o.push(new THREE.UV(j,l));o.push(new THREE.UV(k,m));o.push(new THREE.UV(g,f));h.push(o)}}function H(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],\r\nL.faces.push(new THREE.Face3(e,f,g,null,null,h))}function I(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=j[d],L.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function Q(b,c,d,e){for(var f,g,h,i,j,k,l,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),m=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];j=d[3*e];k=d[3*e+1];l=d[3*e+2];i=m[e];var n=O[3*k],o=O[3*k+1];k=O[3*k+2];var q=O[3*l],p=\r\nO[3*l+1];l=O[3*l+2];L.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(O[3*j],O[3*j+1],O[3*j+2]),new THREE.Vector3(n,o,k),new THREE.Vector3(q,p,l)],null,i))}}function P(b,c,d,e){for(var f,g,h,i,j,k,l,m,n,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),o=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];k=d[4*e];l=d[4*e+1];m=d[4*e+2];n=d[4*e+3];j=o[e];var q=O[3*l],p=O[3*l+1];l=O[3*l+2];var r=O[3*m],s=O[3*m+1];m=O[3*m+2];var t=O[3*n],u=O[3*n+1];n=O[3*n+2];L.faces.push(new THREE.Face4(f,\r\ng,h,i,[new THREE.Vector3(O[3*k],O[3*k+1],O[3*k+2]),new THREE.Vector3(q,p,l),new THREE.Vector3(r,s,m),new THREE.Vector3(t,u,n)],null,j))}}var L=this,K=0,O=[],y=[],l,$,C;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(L,d,b);(function(a,b,c){for(var a=new Uint8Array(a,b,c),d=\"\",e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d})(a,K,12);c=A(a,K+12);A(a,K+13);A(a,K+14);A(a,K+15);f=A(a,K+16);i=A(a,K+17);j=A(a,K+18);k=A(a,K+19);q=F(a,K+20);m=F(a,K+20+4);o=F(a,K+20+8);b=F(a,K+20+12);p=\r\nF(a,K+20+16);n=F(a,K+20+20);r=F(a,K+20+24);s=F(a,K+20+28);t=F(a,K+20+32);w=F(a,K+20+36);u=F(a,K+20+40);K+=c;c=3*f+k;C=4*f+k;l=b*c;$=p*(c+3*i);f=n*(c+3*j);k=r*(c+3*i+3*j);c=s*C;i=t*(C+4*i);j=w*(C+4*j);K+=function(b){var b=new Float32Array(a,b,3*q),c,d,e,f;for(c=0;c<q;c++)d=b[3*c],e=b[3*c+1],f=b[3*c+2],L.vertices.push(new THREE.Vertex(new THREE.Vector3(d,e,f)));return 3*q*Float32Array.BYTES_PER_ELEMENT}(K);K+=function(b){if(m){var b=new Int8Array(a,b,3*m),c,d,e,f;for(c=0;c<m;c++)d=b[3*c],e=b[3*c+1],\r\nf=b[3*c+2],O.push(d/127,e/127,f/127)}return 3*m*Int8Array.BYTES_PER_ELEMENT}(K);K+=v(3*m);K+=function(b){if(o){var b=new Float32Array(a,b,2*o),c,d,e;for(c=0;c<o;c++)d=b[2*c],e=b[2*c+1],y.push(d,e)}return 2*o*Float32Array.BYTES_PER_ELEMENT}(K);l=K+l+v(2*b);$=l+$+v(2*p);f=$+f+v(2*n);k=f+k+v(2*r);c=k+c+v(2*s);i=c+i+v(2*t);j=i+j+v(2*w);(function(a){if(n){var b=a+3*n*Uint32Array.BYTES_PER_ELEMENT;H(n,a,b+3*n*Uint32Array.BYTES_PER_ELEMENT);B(n,b)}})($);(function(a){if(r){var b=a+3*r*Uint32Array.BYTES_PER_ELEMENT,\r\nc=b+3*r*Uint32Array.BYTES_PER_ELEMENT;Q(r,a,b,c+3*r*Uint32Array.BYTES_PER_ELEMENT);B(r,c)}})(f);(function(a){if(w){var b=a+4*w*Uint32Array.BYTES_PER_ELEMENT;I(w,a,b+4*w*Uint32Array.BYTES_PER_ELEMENT);D(w,b)}})(i);(function(a){if(u){var b=a+4*u*Uint32Array.BYTES_PER_ELEMENT,c=b+4*u*Uint32Array.BYTES_PER_ELEMENT;P(u,a,b,c+4*u*Uint32Array.BYTES_PER_ELEMENT);D(u,c)}})(j);b&&H(b,K,K+3*b*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(p){var b=a+3*p*Uint32Array.BYTES_PER_ELEMENT;Q(p,a,b,b+3*p*Uint32Array.BYTES_PER_ELEMENT)}})(l);\r\ns&&I(s,k,k+4*s*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(t){var b=a+4*t*Uint32Array.BYTES_PER_ELEMENT;P(t,a,b,b+4*t*Uint32Array.BYTES_PER_ELEMENT)}})(c);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f(c))};\r\nTHREE.ColladaLoader=function(){function a(a,d,f){U=a;d=d||Ta;void 0!==f&&(a=f.split(\"/\"),a.pop(),Sa=(1>a.length?\".\":a.join(\"/\"))+\"/\");if((a=U.evaluate(\"//dae:asset\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(f=0;f<a.childNodes.length;f++){var i=a.childNodes[f];switch(i.nodeName){case \"unit\":(i=i.getAttribute(\"meter\"))&&parseFloat(i);break;case \"up_axis\":Fa=i.textContent.charAt(0)}}if(!Ea.convertUpAxis||Fa===Ea.upAxis)Wa=null;else switch(Fa){case \"X\":Wa=\"Y\"===\r\nEa.upAxis?\"XtoY\":\"XtoZ\";break;case \"Y\":Wa=\"X\"===Ea.upAxis?\"YtoX\":\"YtoZ\";break;case \"Z\":Wa=\"X\"===Ea.upAxis?\"ZtoX\":\"ZtoY\"}Ka=b(\"//dae:library_images/dae:image\",e,\"image\");ib=b(\"//dae:library_materials/dae:material\",B,\"material\");db=b(\"//dae:library_effects/dae:effect\",P,\"effect\");ha=b(\"//dae:library_geometries/dae:geometry\",r,\"geometry\");lb=b(\".//dae:library_cameras/dae:camera\",$,\"camera\");qa=b(\"//dae:library_controllers/dae:controller\",h,\"controller\");Ga=b(\"//dae:library_animations/dae:animation\",\r\nK,\"animation\");Za=b(\".//dae:library_visual_scenes/dae:visual_scene\",k,\"visual_scene\");La=[];sa=[];(a=U.evaluate(\".//dae:scene/dae:instance_visual_scene\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute(\"url\").replace(/^#/,\"\"),ea=Za[0<a.length?a:\"visual_scene0\"]):ea=null;ba=new THREE.Object3D;for(a=0;a<ea.nodes.length;a++)ba.add(g(ea.nodes[a]));cb=[];c(ba);a={scene:ba,morphs:La,skins:sa,animations:cb,dae:{images:Ka,materials:ib,cameras:lb,effects:db,geometries:ha,controllers:qa,\r\nanimations:Ga,visualScenes:Za,scene:ea}};d&&d(a);return a}function b(a,b,c){for(var a=U.evaluate(a,U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=ea.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:\"animation_\"+a.name,length:0};cb.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,\r\nb.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function f(a,b,c){var e,\r\nf=qa[b.url];if(!f||!f.skin)console.log(\"ColladaLoader: Could not find skin controller.\");else if(!b.skeleton||!b.skeleton.length)console.log(\"ColladaLoader: Could not find the skeleton for the skin. \");else{var c=1E6,g=-c,h=0;for(e in Ga)for(var i=Ga[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=ea.getChildById(b.skeleton[0],!0)||ea.getChildBySid(b.skeleton[0],!0),l,m,g=new THREE.Vector3,n,\r\nj=0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j].position);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vertex(new THREE.Vector3));d(b,h,c);j=h;k=f.skin;for(m=0;m<j.length;m++)if(l=j[m],n=-1,\"JOINT\"==l.type){for(var o=0;o<k.joints.length;o++)if(l.sid==k.joints[o]){n=o;break}if(0<=n){o=k.invBindMatrices[n];l.invBindMatrix=o;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiply(l.world,o);l.weights=[];for(o=0;o<k.weights.length;o++)for(var q=\r\n0;q<k.weights[o].length;q++){var p=k.weights[o][q];p.joint==n&&l.weights.push(p)}}else throw\"ColladaLoader: Could not find joint '\"+l.sid+\"'.\";}for(j=0;j<h.length;j++)if(\"JOINT\"==h[j].type)for(k=0;k<h[j].weights.length;k++)l=h[j].weights[k],m=l.index,l=l.weight,n=a.vertices[m],m=i[m],g.x=n.position.x,g.y=n.position.y,g.z=n.position.z,h[j].skinningMatrix.multiplyVector3(g),m.position.x+=g.x*l,m.position.y+=g.y*l,m.position.z+=g.z*l;a.morphTargets.push({name:\"target_\"+c,vertices:i})}}}function g(a){var b=\r\nnew THREE.Object3D,c,d,e,h;for(e=0;e<a.controllers.length;e++){var i=qa[a.controllers[e].url];switch(i.type){case \"skin\":if(ha[i.skin.source]){var j=new n;j.url=i.skin.source;j.instance_material=a.controllers[e].instance_material;a.geometries.push(j);c=a.controllers[e]}else if(qa[i.skin.source]&&(d=i=qa[i.skin.source],i.morph&&ha[i.morph.source]))j=new n,j.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j);break;case \"morph\":if(ha[i.morph.source])j=new n,\r\nj.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j),d=a.controllers[e];console.log(\"ColladaLoader: Morph-controller partially supported.\")}}for(e=0;e<a.geometries.length;e++){var i=a.geometries[e],j=i.instance_material,i=ha[i.url],k={},l=[],m=0,q;if(i&&i.mesh&&i.mesh.primitives){if(0==b.name.length)b.name=i.id;if(j)for(h=0;h<j.length;h++){q=j[h];var p=ib[q.target],r=db[p.instance_effect.url].shader;r.material.opacity=!r.material.opacity?1:r.material.opacity;\r\nk[q.symbol]=m;l.push(r.material);q=r.material;q.name=null==p.name||\"\"===p.name?p.id:p.name;m++}j=q||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading});i=i.mesh.geometry3js;if(1<m){j=new THREE.MeshFaceMaterial;i.materials=l;for(h=0;h<i.faces.length;h++)l=i.faces[h],l.materialIndex=k[l.daeMaterial]}if(void 0!==c)f(i,c),j.morphTargets=!0,j=new THREE.SkinnedMesh(i,j),j.skeleton=c.skeleton,j.skinController=qa[c.url],j.skinInstanceController=c,j.name=\"skin_\"+sa.length,sa.push(j);\r\nelse if(void 0!==d){h=i;k=d instanceof o?qa[d.url]:d;if(!k||!k.morph)console.log(\"could not find morph controller!\");else{k=k.morph;for(l=0;l<k.targets.length;l++)if(m=ha[k.targets[l]],m.mesh&&m.mesh.primitives&&m.mesh.primitives.length)m=m.mesh.primitives[0].geometry,m.vertices.length===h.vertices.length&&h.morphTargets.push({name:\"target_1\",vertices:m.vertices});h.morphTargets.push({name:\"target_Z\",vertices:h.vertices})}j.morphTargets=!0;j=new THREE.Mesh(i,j);j.name=\"morph_\"+La.length;La.push(j)}else j=\r\nnew THREE.Mesh(i,j);1<a.geometries.length?b.add(j):b=j}}for(e=0;e<a.cameras.length;e++)b=lb[a.cameras[e].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.id||\"\";b.matrix=a.matrix;e=a.matrix.decompose();b.position=e[0];b.quaternion=e[1];b.useQuaternion=!0;b.scale=e[2];Ea.centerGeometry&&b.geometry&&(e=THREE.GeometryUtils.center(b.geometry),b.quaternion.multiplyVector3(e.multiplySelf(b.scale)),b.position.subSelf(e));for(e=0;e<a.nodes.length;e++)b.add(g(a.nodes[e],a));\r\nreturn b}function e(){this.init_from=this.id=\"\"}function h(){this.type=this.name=this.id=\"\";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function j(){this.source=\"\";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function k(){this.name=this.id=\"\";this.nodes=[];this.scene=new THREE.Object3D}function q(){this.sid=this.name=this.id=\"\";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=\r\n[];this.matrix=new THREE.Matrix4}function m(){this.type=this.sid=\"\";this.data=[];this.obj=null}function o(){this.url=\"\";this.skeleton=[];this.instance_material=[]}function p(){this.target=this.symbol=\"\"}function n(){this.url=\"\";this.instance_material=[]}function r(){this.id=\"\";this.mesh=null}function s(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function t(){}function w(){this.material=\"\";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}\r\nfunction u(){this.source=\"\";this.stride=this.count=0;this.params=[]}function v(){this.input={}}function A(){this.semantic=\"\";this.offset=0;this.source=\"\";this.set=0}function F(a){this.id=a;this.type=null}function B(){this.name=this.id=\"\";this.instance_effect=null}function D(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function H(a,b){this.type=a;this.effect=b;this.material=null}function I(a){this.effect=\r\na;this.format=this.init_from=null}function Q(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function P(){this.name=this.id=\"\";this.sampler=this.surface=this.shader=null}function L(){this.url=\"\"}function K(){this.name=this.id=\"\";this.source={};this.sampler=[];this.channel=[]}function O(a){this.animation=a;this.target=this.source=\"\";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=this.sid=this.fullSid=null}function y(a){this.id=\"\";this.animation=\r\na;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function l(a){this.targets=[];this.time=a}function $(){this.name=this.id=\"\"}function C(){this.url=\"\"}function E(a){return\"dae\"==a?\"http://www.collada.org/2005/11/COLLADASchema\":null}function S(a){for(var a=ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function R(a){for(var a=ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function ca(a){return 0<\r\na.length?a.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\").split(/\\s+/):[]}function ka(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function ia(a,b){if(Ea.convertUpAxis&&Fa!==Ea.upAxis)switch(Wa){case \"XtoY\":var c=a[0];a[0]=b*a[1];a[1]=c;break;case \"XtoZ\":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case \"YtoX\":c=a[0];a[0]=a[1];a[1]=b*c;break;case \"YtoZ\":c=a[1];a[1]=b*a[2];a[2]=c;break;case \"ZtoX\":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case \"ZtoY\":c=a[1],a[1]=a[2],a[2]=b*c}}function N(a,b){var c=\r\n[a[b],a[b+1],a[b+2]];ia(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function aa(a){if(Ea.convertUpAxis){var b=[a[0],a[4],a[8]];ia(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];ia(b,-1);a[1]=b[0];a[5]=b[1];a[9]=b[2];b=[a[2],a[6],a[10]];ia(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];ia(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];ia(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];ia(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];ia(b,-1);a[3]=b[0];\r\na[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}var U=null,ba=null,ea,Ta=null,Ja={},Ka={},Ga={},qa={},ha={},ib={},db={},lb={},cb,Za,Sa,La,sa,za=THREE.SmoothShading,Ea={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:\"Y\"},Fa=\"Y\",Wa=null,mb=Math.PI/180;e.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(\"init_from\"==c.nodeName)this.init_from=\r\nc.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.type=\"none\";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"skin\":this.skin=(new j).parse(c);this.type=c.nodeName;break;case \"morph\":this.morph=(new i).parse(c),this.type=c.nodeName}}return this};i.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute(\"method\");this.source=a.getAttribute(\"source\").replace(/^#/,\"\");for(d=\r\n0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case \"source\":e=(new F).parse(e);b[e.id]=e;break;case \"targets\":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case \"MORPH_TARGET\":this.targets=e.read();break;case \"MORPH_WEIGHT\":this.weights=e.read()}return this};i.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"input\":b.push((new A).parse(d))}}return b};\r\nj.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case \"bind_shape_matrix\":f=S(f.textContent);this.bindShapeMatrix=aa(f);break;case \"source\":f=(new F).parse(f);b[f.id]=f;break;case \"joints\":c=f;break;case \"vertex_weights\":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,\r\nb);return this};j.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"input\":var d=(new A).parse(d),e=b[d.source];if(\"JOINT\"==d.semantic)this.joints=e.read();else if(\"INV_BIND_MATRIX\"==d.semantic)this.invBindMatrices=e.read()}}};j.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case \"input\":e.push((new A).parse(g));break;\r\ncase \"v\":c=R(g.textContent);break;case \"vcount\":d=R(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],n=c[g+m.offset];switch(m.semantic){case \"JOINT\":k.joint=n;break;case \"WEIGHT\":k.weight=b[m.source].data[n]}}i.push(k);g+=e.length}for(j=0;j<i.length;j++)i[j].index=f;this.weights.push(i)}};k.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};\r\nk.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};k.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"node\":this.nodes.push((new q).parse(c))}}return this};q.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],\r\nd=c.target.split(\"/\");d.shift();var e=d.shift(),f=0<=e.indexOf(\".\"),g=0<=e.indexOf(\"(\"),h;if(f)d=e.split(\".\"),e=d.shift(),d.shift();else if(g){h=e.split(\"(\");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\\)/,\"\"))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};q.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};q.prototype.getChildBySid=\r\nfunction(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};q.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};q.prototype.parse=function(a){var b;this.id=a.getAttribute(\"id\");this.sid=a.getAttribute(\"sid\");this.name=a.getAttribute(\"name\");this.type=a.getAttribute(\"type\");this.type=\"JOINT\"==this.type?this.type:\r\n\"NODE\";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case \"node\":this.nodes.push((new q).parse(b));break;case \"instance_camera\":this.cameras.push((new C).parse(b));break;case \"instance_controller\":this.controllers.push((new o).parse(b));break;case \"instance_geometry\":this.geometries.push((new n).parse(b));break;case \"instance_light\":break;\r\ncase \"instance_node\":b=b.getAttribute(\"url\").replace(/^#/,\"\");(b=U.evaluate(\".//dae:library_nodes//dae:node[@id='\"+b+\"']\",U,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new q).parse(b));break;case \"rotate\":case \"translate\":case \"scale\":case \"matrix\":case \"lookat\":case \"skew\":this.transforms.push((new m).parse(b));break;case \"extra\":break;default:console.log(b.nodeName)}a=[];c=1E6;b=-1E6;for(var d in Ga)for(var e=Ga[d],f=0;f<e.channel.length;f++){var g=e.channel[f],\r\nh=e.sampler[f];d=g.target.split(\"/\")[0];if(d==this.id)h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g)}if(a.length)this.startTime=c,this.endTime=b;if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){b=this.channels[c];f=b.fullSid;g=b.member;if(Ea.convertUpAxis)switch(g){case \"X\":switch(Wa){case \"XtoY\":case \"XtoZ\":case \"YtoX\":g=\"Y\";break;case \"ZtoX\":g=\"Z\"}break;case \"Y\":switch(Wa){case \"XtoY\":case \"YtoX\":case \"ZtoX\":g=\"X\";\r\nbreak;case \"XtoZ\":case \"YtoZ\":case \"ZtoY\":g=\"Z\"}break;case \"Z\":switch(Wa){case \"XtoZ\":g=\"X\";break;case \"YtoZ\":case \"ZtoX\":case \"ZtoY\":g=\"Y\"}}var h=b.sampler,i=h.input,j=this.getTransformBySid(b.sid);if(j){-1===a.indexOf(f)&&a.push(f);b=0;for(var k=i.length;b<k;b++){var p=i[b],r=h.getData(j.type,b),s;s=null;for(var t=0,u=d.length;t<u&&null==s;t++){var v=d[t];if(v.time===p)s=v;else if(v.time>p)break}if(!s){s=new l(p);t=-1;u=0;for(v=d.length;u<v&&-1==t;u++)d[u].time>=p&&(t=u);p=t;d.splice(-1==p?d.length:\r\np,0,s)}s.addTarget(f,j,g,r)}}else console.log('Could not find transform \"'+b.sid+'\" in node '+this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(s=d[b],!s.hasTarget(e)){h=d;f=s;j=b;g=e;i=void 0;a:{i=j?j-1:0;for(i=0<=i?i:i+h.length;0<=i;i--)if(k=h[i],k.hasTarget(g)){i=k;break a}i=null}k=void 0;a:{for(j+=1;j<h.length;j++)if(k=h[j],k.hasTarget(g))break a;k=null}if(i&&k){h=(f.time-i.time)/(k.time-i.time);i=i.getTarget(g);j=k.getTarget(g).data;k=i.data;r=void 0;if(k.length){r=[];for(p=0;p<\r\nk.length;++p)r[p]=k[p]+(j[p]-k[p])*h}else r=k+(j-k)*h;f.addTarget(g,i.transform,i.member,r)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};q.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};m.prototype.parse=function(a){this.sid=a.getAttribute(\"sid\");this.type=a.nodeName;this.data=S(a.textContent);this.convert();return this};m.prototype.convert=function(){switch(this.type){case \"matrix\":this.obj=aa(this.data);\r\nbreak;case \"rotate\":this.angle=this.data[3]*mb;case \"translate\":ia(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case \"scale\":ia(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log(\"Can not convert Transform of type \"+this.type)}};m.prototype.apply=function(a){switch(this.type){case \"matrix\":a.multiplySelf(this.obj);break;case \"translate\":a.translate(this.obj);break;case \"rotate\":a.rotateByAxis(this.obj,\r\nthis.angle);break;case \"scale\":a.scale(this.obj)}};m.prototype.update=function(a,b){switch(this.type){case \"matrix\":console.log(\"Currently not handling matrix transform updates\");break;case \"translate\":case \"scale\":switch(b){case \"X\":this.obj.x=a;break;case \"Y\":this.obj.y=a;break;case \"Z\":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case \"rotate\":switch(b){case \"X\":this.obj.x=a;break;case \"Y\":this.obj.y=a;break;case \"Z\":this.obj.z=a;break;case \"ANGLE\":this.angle=\r\na*mb;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=a[3]*mb}}};o.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"skeleton\":this.skeleton.push(c.textContent.replace(/^#/,\"\"));break;case \"bind_material\":if(c=U.evaluate(\".//dae:instance_material\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=\r\nc.iterateNext();d;)this.instance_material.push((new p).parse(d)),d=c.iterateNext()}}return this};p.prototype.parse=function(a){this.symbol=a.getAttribute(\"symbol\");this.target=a.getAttribute(\"target\").replace(/^#/,\"\");return this};n.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&\"bind_material\"==c.nodeName){if(a=U.evaluate(\".//dae:instance_material\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,\r\nnull))for(b=a.iterateNext();b;)this.instance_material.push((new p).parse(b)),b=a.iterateNext();break}}return this};r.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"mesh\":this.mesh=(new s(this)).parse(c)}}return this};s.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"source\":var d=c.getAttribute(\"id\");void 0==Ja[d]&&(Ja[d]=\r\n(new F(d)).parse(c));break;case \"vertices\":this.vertices=(new v).parse(c);break;case \"triangles\":this.primitives.push((new w).parse(c));break;case \"polygons\":console.warn(\"polygon holes not yet supported!\");case \"polylist\":this.primitives.push((new t).parse(c))}}this.geometry3js=new THREE.Geometry;a=Ja[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(new THREE.Vertex(N(a,b)));for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),\r\nthis.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};s.prototype.handlePrimitive=function(a,b){var c=0,d,e,f=a.p,g=a.inputs,h,i,j,k,l=0,m=3,n=0,o=[];for(d=0;d<g.length;d++){h=g[d];var q=h.offset+1,n=n<q?q:n;switch(h.semantic){case \"TEXCOORD\":o.push(h.set)}}for(;c<f.length;){var p=\r\n[],r=[],q={},s=[];a.vcount&&(m=a.vcount[l++]);for(d=0;d<m;d++)for(e=0;e<g.length;e++)switch(h=g[e],k=Ja[h.source],i=f[c+d*n+h.offset],j=k.accessor.params.length,j*=i,h.semantic){case \"VERTEX\":p.push(i);break;case \"NORMAL\":r.push(N(k.data,j));break;case \"TEXCOORD\":void 0===q[h.set]&&(q[h.set]=[]);q[h.set].push(new THREE.UV(k.data[j],1-k.data[j+1]));break;case \"COLOR\":s.push((new THREE.Color).setRGB(k.data[j],k.data[j+1],k.data[j+2]))}e=null;d=[];if(0==r.length)if(h=this.vertices.input.NORMAL){k=Ja[h.source];\r\nj=k.accessor.params.length;h=0;for(i=p.length;h<i;h++)r.push(N(k.data,p[h]*j))}else b.calcNormals=!0;if(3===m)d.push(new THREE.Face3(p[0],p[1],p[2],r,s.length?s:new THREE.Color));else if(4===m)d.push(new THREE.Face4(p[0],p[1],p[2],p[3],r,s.length?s:new THREE.Color));else if(4<m&&Ea.subdivideFaces){s=s.length?s:new THREE.Color;for(e=1;e<m-1;)d.push(new THREE.Face3(p[0],p[e],p[e+1],[r[0],r[e++],r[e]],s))}if(d.length){h=0;for(i=d.length;h<i;h++){e=d[h];e.daeMaterial=a.material;b.faces.push(e);for(e=\r\n0;e<o.length;e++)p=q[o[e]],p=4<m?[p[0],p[h+1],p[h+2]]:4===m?[p[0],p[1],p[2],p[3]]:[p[0],p[1],p[2]],b.faceVertexUvs[e]||(b.faceVertexUvs[e]=[]),b.faceVertexUvs[e].push(p)}}else console.log(\"dropped face with vcount \"+m+\" for geometry with id: \"+b.id);c+=n*m}};t.prototype=new w;t.prototype.constructor=t;w.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)if(this.inputs[b].source==a.id)this.inputs[b].source=a.input.POSITION.source};w.prototype.parse=function(a){this.inputs=[];this.material=\r\na.getAttribute(\"material\");this.count=ka(a,\"count\",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"input\":this.inputs.push((new A).parse(a.childNodes[b]));break;case \"vcount\":this.vcount=R(c.textContent);break;case \"p\":this.p=R(c.textContent)}}return this};u.prototype.parse=function(a){this.params=[];this.source=a.getAttribute(\"source\");this.count=ka(a,\"count\",0);this.stride=ka(a,\"stride\",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(\"param\"==\r\nc.nodeName){var d={};d.name=c.getAttribute(\"name\");d.type=c.getAttribute(\"type\");this.params.push(d)}}return this};v.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++)if(\"input\"==a.childNodes[b].nodeName){var c=(new A).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};A.prototype.parse=function(a){this.semantic=a.getAttribute(\"semantic\");this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.set=ka(a,\"set\",-1);this.offset=ka(a,\"offset\",0);\r\nif(\"TEXCOORD\"==this.semantic&&0>this.set)this.set=0;return this};F.prototype.parse=function(a){this.id=a.getAttribute(\"id\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"bool_array\":for(var d=ca(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push(\"true\"==d[f]||\"1\"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case \"float_array\":this.data=S(c.textContent);this.type=c.nodeName;break;case \"int_array\":this.data=R(c.textContent);this.type=c.nodeName;break;case \"IDREF_array\":case \"Name_array\":this.data=\r\nca(c.textContent);this.type=c.nodeName;break;case \"technique_common\":for(d=0;d<c.childNodes.length;d++)if(\"accessor\"==c.childNodes[d].nodeName){this.accessor=(new u).parse(c.childNodes[d]);break}}}return this};F.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case \"IDREF\":case \"Name\":case \"name\":case \"float\":return this.data;case \"float4x4\":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=aa(c);a.push(c)}break;default:console.log(\"ColladaLoader: Source: Read dont know how to read \"+\r\nb.type+\".\")}return a};B.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");for(var b=0;b<a.childNodes.length;b++)if(\"instance_effect\"==a.childNodes[b].nodeName){this.instance_effect=(new L).parse(a.childNodes[b]);break}return this};D.prototype.isColor=function(){return null==this.texture};D.prototype.isTexture=function(){return null!=this.texture};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"color\":c=\r\nS(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case \"texture\":this.texture=c.getAttribute(\"texture\"),this.texcoord=c.getAttribute(\"texcoord\"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};D.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&\"extra\"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&\"technique\"===a.childNodes[1].nodeName&&\r\n(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case \"offsetU\":case \"offsetV\":case \"repeatU\":case \"repeatV\":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case \"wrapU\":case \"wrapV\":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"ambient\":case \"emission\":case \"diffuse\":case \"specular\":case \"transparent\":this[c.nodeName]=\r\n(new D).parse(c);break;case \"shininess\":case \"reflectivity\":case \"transparency\":var d;d=U.evaluate(\".//dae:float\",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};H.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case \"ambient\":case \"emission\":case \"diffuse\":case \"specular\":var d=this[c];\r\nif(d instanceof D)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=Ka[this.effect.surface.init_from];if(e)e=THREE.ImageUtils.loadTexture(Sa+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e}}else\"diffuse\"==\r\nc?a.color=d.color.getHex():b||(a[c]=d.color.getHex());break;case \"shininess\":case \"reflectivity\":a[c]=this[c];break;case \"transparency\":if(b)a.transparent=!0,a.opacity=this[c],b=!0}a.shading=za;return this.material=new THREE.MeshLambertMaterial(a)};I.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"init_from\":this.init_from=c.textContent;break;case \"format\":this.format=c.textContent;break;default:console.log(\"unhandled Surface prop: \"+\r\nc.nodeName)}}return this};Q.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"source\":this.source=c.textContent;break;case \"minfilter\":this.minfilter=c.textContent;break;case \"magfilter\":this.magfilter=c.textContent;break;case \"mipfilter\":this.mipfilter=c.textContent;break;case \"wrap_s\":this.wrap_s=c.textContent;break;case \"wrap_t\":this.wrap_t=c.textContent;break;default:console.log(\"unhandled Sampler2D prop: \"+c.nodeName)}}return this};\r\nP.prototype.create=function(){if(null==this.shader)return null};P.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"profile_COMMON\":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};P.prototype.parseNewparam=function(a){for(var b=a.getAttribute(\"sid\"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"surface\":this.surface=\r\n(new I(this)).parse(d);this.surface.sid=b;break;case \"sampler2D\":this.sampler=(new Q(this)).parse(d);this.sampler.sid=b;break;case \"extra\":break;default:console.log(d.nodeName)}}};P.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case \"profile_COMMON\":this.parseProfileCOMMON(d);break;case \"technique\":b=d;break;case \"newparam\":this.parseNewparam(d);break;case \"extra\":break;default:console.log(d.nodeName)}}return b};\r\nP.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"constant\":case \"lambert\":case \"blinn\":case \"phong\":this.shader=(new H(c.nodeName,this)).parse(c)}}};L.prototype.parse=function(a){this.url=a.getAttribute(\"url\").replace(/^#/,\"\");return this};K.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];\r\nif(1==c.nodeType)switch(c.nodeName){case \"source\":c=(new F).parse(c);this.source[c.id]=c;break;case \"sampler\":this.sampler.push((new y(this)).parse(c));break;case \"channel\":this.channel.push((new O(this)).parse(c))}}return this};O.prototype.parse=function(a){this.source=a.getAttribute(\"source\").replace(/^#/,\"\");this.target=a.getAttribute(\"target\");var b=this.target.split(\"/\");b.shift();var a=b.shift(),c=0<=a.indexOf(\".\"),d=0<=a.indexOf(\"(\");if(c)b=a.split(\".\"),this.sid=b.shift(),this.member=b.shift();\r\nelse if(d){b=a.split(\"(\");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\\)/,\"\"));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};y.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"input\":this.inputs.push((new A).parse(c))}}return this};y.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=\r\nthis.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case \"INPUT\":this.input=c.read();break;case \"OUTPUT\":this.output=c.read();this.strideOut=c.accessor.stride;break;case \"INTERPOLATION\":this.interpolation=c.read();break;case \"IN_TANGENT\":break;case \"OUT_TANGENT\":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),\r\nthis.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};y.prototype.getData=function(a,b){var c;if(1<this.strideOut){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case \"rotate\":case \"translate\":ia(c,-1);break;case \"scale\":ia(c,1)}}else c=this.output[b];return c};l.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};l.prototype.apply=function(a){for(var b=\r\n0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};l.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};l.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};l.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if(e){var f=(b-this.time)/\r\n(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log(\"Key.interpolate: Warning! Scale out of bounds:\"+f),f=0>f?0:1;if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};$.prototype.parse=function(a){this.id=a.getAttribute(\"id\");this.name=a.getAttribute(\"name\");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case \"optics\":this.parseOptics(c)}}return this};$.prototype.parseOptics=\r\nfunction(a){for(var b=0;b<a.childNodes.length;b++)if(\"technique_common\"==a.childNodes[b].nodeName)for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++)if(\"perspective\"==c.childNodes[d].nodeName)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case \"xfov\":this.fov=g.textContent;break;case \"znear\":this.znear=0.4;break;case \"zfar\":this.zfar=1E15;break;case \"aspect_ratio\":this.aspect_ratio=g.textContent}}return this};C.prototype.parse=function(a){this.url=\r\na.getAttribute(\"url\").replace(/^#/,\"\");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.overrideMimeType&&f.overrideMimeType(\"text/xml\");f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)f.responseXML?(Ta=c,a(f.responseXML,void 0,b)):console.error(\"ColladaLoader: Empty or non-existing file (\"+b+\")\")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader(\"Content-Length\")),\r\nd({total:e,loaded:f.responseText.length}))};f.open(\"GET\",b,!0);f.send(null)}else alert(\"Don't know how to parse XML!\")},parse:a,setPreferredShading:function(a){za=a},applySkin:f,geometries:ha,options:Ea}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.supr=THREE.Loader.prototype;\r\nTHREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};\r\nTHREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var g=new XMLHttpRequest,e=0;g.onreadystatechange=function(){if(g.readyState===g.DONE)if(200===g.status||0===g.status){if(g.responseText){var h=JSON.parse(g.responseText);a.createModel(h,c,d)}else console.warn(\"THREE.JSONLoader: [\"+b+\"] seems to be unreachable or file there is empty\");a.onLoadComplete()}else console.error(\"THREE.JSONLoader: Couldn't load [\"+b+\"] [\"+g.status+\"]\");else g.readyState===g.LOADING?f&&(0===e&&(e=g.getResponseHeader(\"Content-Length\")),\r\nf({total:e,loaded:g.responseText.length})):g.readyState===g.HEADERS_RECEIVED&&(e=g.getResponseHeader(\"Content-Length\"))};g.open(\"GET\",b,!0);g.overrideMimeType&&g.overrideMimeType(\"text/plain; charset=x-user-defined\");g.setRequestHeader(\"Content-Type\",\"text/plain\");g.send(null)};\r\nTHREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(b){var c,f,i,j,k,q,m,o,p,n,r,s,t,w,u=a.faces;q=a.vertices;var v=a.normals,A=a.colors,F=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&F++;for(c=0;c<F;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];j=0;for(k=q.length;j<k;)m=new THREE.Vertex,m.position.x=q[j++]*b,m.position.y=q[j++]*b,m.position.z=q[j++]*b,d.vertices.push(m);j=0;for(k=u.length;j<k;){b=\r\nu[j++];q=b&1;i=b&2;c=b&4;f=b&8;o=b&16;m=b&32;n=b&64;b&=128;q?(r=new THREE.Face4,r.a=u[j++],r.b=u[j++],r.c=u[j++],r.d=u[j++],q=4):(r=new THREE.Face3,r.a=u[j++],r.b=u[j++],r.c=u[j++],q=3);if(i)i=u[j++],r.materialIndex=i;i=d.faces.length;if(c)for(c=0;c<F;c++)s=a.uvs[c],p=u[j++],w=s[2*p],p=s[2*p+1],d.faceUvs[c][i]=new THREE.UV(w,p);if(f)for(c=0;c<F;c++){s=a.uvs[c];t=[];for(f=0;f<q;f++)p=u[j++],w=s[2*p],p=s[2*p+1],t[f]=new THREE.UV(w,p);d.faceVertexUvs[c][i]=t}if(o)o=3*u[j++],f=new THREE.Vector3,f.x=v[o++],\r\nf.y=v[o++],f.z=v[o],r.normal=f;if(m)for(c=0;c<q;c++)o=3*u[j++],f=new THREE.Vector3,f.x=v[o++],f.y=v[o++],f.z=v[o],r.vertexNormals.push(f);if(n)m=u[j++],m=new THREE.Color(A[m]),r.color=m;if(b)for(c=0;c<q;c++)m=u[j++],m=new THREE.Color(A[m]),r.vertexColors.push(m);d.faces.push(r)}})(f);(function(){var b,c,f,i;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)f=a.skinWeights[b],i=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(f,i,0,0));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<\r\nc;b+=2)f=a.skinIndices[b],i=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(f,i,0,0));d.bones=a.bones;d.animation=a.animation})();(function(b){if(void 0!==a.morphTargets){var c,f,i,j,k,q,m,o,p;for(c=0,f=a.morphTargets.length;c<f;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];o=d.morphTargets[c].vertices;p=a.morphTargets[c].vertices;for(i=0,j=p.length;i<j;i+=3)k=p[i]*b,q=p[i+1]*b,m=p[i+2]*b,o.push(new THREE.Vertex(new THREE.Vector3(k,q,\r\nm)))}}if(void 0!==a.morphColors)for(c=0,f=a.morphColors.length;c<f;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];j=d.morphColors[c].colors;k=a.morphColors[c].colors;for(b=0,i=k.length;b<i;b+=3)q=new THREE.Color(16755200),q.setRGB(k[b],k[b+1],k[b+2]),j.push(q)}})(f);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};\r\nTHREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;\r\nTHREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4==d.readyState)if(200==d.status||0==d.status){var f=JSON.parse(d.responseText);c.createScene(f,b,a)}else console.error(\"THREE.SceneLoader: Couldn't load [\"+a+\"] [\"+d.status+\"]\")};d.open(\"GET\",a,!0);d.overrideMimeType&&d.overrideMimeType(\"text/plain; charset=x-user-defined\");d.setRequestHeader(\"Content-Type\",\"text/plain\");d.send(null)};\r\nTHREE.SceneLoader.prototype.createScene=function(a,b,c){function d(a,b){return\"relativeToHTML\"==b?a:j+\"/\"+a}function f(){var a;for(m in L.objects)if(!C.objects[m])if(s=L.objects[m],void 0!==s.geometry){if(H=C.geometries[s.geometry]){a=!1;I=C.materials[s.materials[0]];(a=I instanceof THREE.ShaderMaterial)&&H.computeTangents();u=s.position;v=s.rotation;A=s.quaternion;F=s.scale;A=0;0==s.materials.length&&(I=new THREE.MeshFaceMaterial);1<s.materials.length&&(I=new THREE.MeshFaceMaterial);a=new THREE.Mesh(H,\r\nI);a.name=m;a.position.set(u[0],u[1],u[2]);A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(v[0],v[1],v[2]);a.scale.set(F[0],F[1],F[2]);a.visible=s.visible;C.scene.add(a);C.objects[m]=a;if(s.castsShadow){var b=new THREE.ShadowVolume(H);C.scene.add(b);b.position=a.position;b.rotation=a.rotation;b.scale=a.scale}s.trigger&&\"none\"!=s.trigger.toLowerCase()&&(b={type:s.trigger,object:s},C.triggers[a.name]=b)}}else u=s.position,v=s.rotation,A=s.quaternion,F=s.scale,A=0,a=new THREE.Object3D,\r\na.name=m,a.position.set(u[0],u[1],u[2]),A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(v[0],v[1],v[2]),a.scale.set(F[0],F[1],F[2]),a.visible=void 0!==s.visible?s.visible:!1,C.scene.add(a),C.objects[m]=a,C.empties[m]=a,s.trigger&&\"none\"!=s.trigger.toLowerCase()&&(b={type:s.trigger,object:s},C.triggers[a.name]=b)}function g(a){return function(b){C.geometries[a]=b;f();O-=1;i.onLoadComplete();h()}}function e(a){return function(b){C.geometries[a]=b}}function h(){i.callbackProgress({totalModels:l,\r\ntotalTextures:$,loadedModels:l-O,loadedTextures:$-y},C);i.onLoadProgress();0==O&&0==y&&b(C)}var i=this,j=THREE.Loader.prototype.extractUrlBase(c),k,q,m,o,p,n,r,s,t,w,u,v,A,F,B,D,H,I,Q,P,L,K,O,y,l,$,C;L=a;c=new THREE.BinaryLoader;K=new THREE.JSONLoader;y=O=0;C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},triggers:{},empties:{}};if(L.transform)a=L.transform.position,t=L.transform.rotation,B=L.transform.scale,a&&C.scene.position.set(a[0],a[1],\r\na[2]),t&&C.scene.rotation.set(t[0],t[1],t[2]),B&&C.scene.scale.set(B[0],B[1],B[2]),(a||t||B)&&C.scene.updateMatrix();a=function(){y-=1;h();i.onLoadComplete()};for(p in L.cameras)B=L.cameras[p],\"perspective\"==B.type?Q=new THREE.PerspectiveCamera(B.fov,B.aspect,B.near,B.far):\"ortho\"==B.type&&(Q=new THREE.OrthographicCamera(B.left,B.right,B.top,B.bottom,B.near,B.far)),u=B.position,t=B.target,B=B.up,Q.position.set(u[0],u[1],u[2]),Q.target=new THREE.Vector3(t[0],t[1],t[2]),B&&Q.up.set(B[0],B[1],B[2]),\r\nC.cameras[p]=Q;for(o in L.lights)t=L.lights[o],p=void 0!==t.color?t.color:16777215,Q=void 0!==t.intensity?t.intensity:1,\"directional\"==t.type?(u=t.direction,w=new THREE.DirectionalLight(p,Q),w.position.set(u[0],u[1],u[2]),w.position.normalize()):\"point\"==t.type?(u=t.position,w=t.distance,w=new THREE.PointLight(p,Q,w),w.position.set(u[0],u[1],u[2])):\"ambient\"==t.type&&(w=new THREE.AmbientLight(p)),C.scene.add(w),C.lights[o]=w;for(n in L.fogs)o=L.fogs[n],\"linear\"==o.type?P=new THREE.Fog(0,o.near,o.far):\r\n\"exp2\"==o.type&&(P=new THREE.FogExp2(0,o.density)),B=o.color,P.color.setRGB(B[0],B[1],B[2]),C.fogs[n]=P;if(C.cameras&&L.defaults.camera)C.currentCamera=C.cameras[L.defaults.camera];if(C.fogs&&L.defaults.fog)C.scene.fog=C.fogs[L.defaults.fog];B=L.defaults.bgcolor;C.bgColor=new THREE.Color;C.bgColor.setRGB(B[0],B[1],B[2]);C.bgColorAlpha=L.defaults.bgalpha;for(k in L.geometries)if(n=L.geometries[k],\"bin_mesh\"==n.type||\"ascii_mesh\"==n.type)O+=1,i.onLoadStart();l=O;for(k in L.geometries)if(n=L.geometries[k],\r\n\"cube\"==n.type)H=new THREE.CubeGeometry(n.width,n.height,n.depth,n.segmentsWidth,n.segmentsHeight,n.segmentsDepth,null,n.flipped,n.sides),C.geometries[k]=H;else if(\"plane\"==n.type)H=new THREE.PlaneGeometry(n.width,n.height,n.segmentsWidth,n.segmentsHeight),C.geometries[k]=H;else if(\"sphere\"==n.type)H=new THREE.SphereGeometry(n.radius,n.segmentsWidth,n.segmentsHeight),C.geometries[k]=H;else if(\"cylinder\"==n.type)H=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),C.geometries[k]=\r\nH;else if(\"torus\"==n.type)H=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),C.geometries[k]=H;else if(\"icosahedron\"==n.type)H=new THREE.IcosahedronGeometry(n.radius,n.subdivisions),C.geometries[k]=H;else if(\"bin_mesh\"==n.type)c.load(d(n.url,L.urlBaseType),g(k));else if(\"ascii_mesh\"==n.type)K.load(d(n.url,L.urlBaseType),g(k));else if(\"embedded_mesh\"==n.type)n=L.embeds[n.id],n.metadata=L.metadata,n&&K.createModel(n,e(k),\"\");for(r in L.textures)if(k=L.textures[r],k.url instanceof Array){y+=\r\nk.url.length;for(n=0;n<k.url.length;n++)i.onLoadStart()}else y+=1,i.onLoadStart();$=y;for(r in L.textures){k=L.textures[r];if(void 0!=k.mapping&&void 0!=THREE[k.mapping])k.mapping=new THREE[k.mapping];if(k.url instanceof Array){n=[];for(P=0;P<k.url.length;P++)n[P]=d(k.url[P],L.urlBaseType);n=THREE.ImageUtils.loadTextureCube(n,k.mapping,a)}else{n=THREE.ImageUtils.loadTexture(d(k.url,L.urlBaseType),k.mapping,a);if(void 0!=THREE[k.minFilter])n.minFilter=THREE[k.minFilter];if(void 0!=THREE[k.magFilter])n.magFilter=\r\nTHREE[k.magFilter];if(k.repeat){n.repeat.set(k.repeat[0],k.repeat[1]);if(1!=k.repeat[0])n.wrapS=THREE.RepeatWrapping;if(1!=k.repeat[1])n.wrapT=THREE.RepeatWrapping}k.offset&&n.offset.set(k.offset[0],k.offset[1]);if(k.wrap){P={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(void 0!==P[k.wrap[0]])n.wrapS=P[k.wrap[0]];if(void 0!==P[k.wrap[1]])n.wrapT=P[k.wrap[1]]}}C.textures[r]=n}for(q in L.materials){r=L.materials[q];for(D in r.parameters)if(\"envMap\"==D||\"map\"==D||\"lightMap\"==D)r.parameters[D]=\r\nC.textures[r.parameters[D]];else if(\"shading\"==D)r.parameters[D]=\"flat\"==r.parameters[D]?THREE.FlatShading:THREE.SmoothShading;else if(\"blending\"==D)r.parameters[D]=THREE[r.parameters[D]]?THREE[r.parameters[D]]:THREE.NormalBlending;else if(\"combine\"==D)r.parameters[D]=\"MixOperation\"==r.parameters[D]?THREE.MixOperation:THREE.MultiplyOperation;else if(\"vertexColors\"==D)if(\"face\"==r.parameters[D])r.parameters[D]=THREE.FaceColors;else if(r.parameters[D])r.parameters[D]=THREE.VertexColors;if(void 0!==\r\nr.parameters.opacity&&1>r.parameters.opacity)r.parameters.transparent=!0;if(r.parameters.normalMap){a=THREE.ShaderUtils.lib.normal;k=THREE.UniformsUtils.clone(a.uniforms);n=r.parameters.color;P=r.parameters.specular;c=r.parameters.ambient;K=r.parameters.shininess;k.tNormal.texture=C.textures[r.parameters.normalMap];if(r.parameters.normalMapFactor)k.uNormalScale.value=r.parameters.normalMapFactor;if(r.parameters.map)k.tDiffuse.texture=r.parameters.map,k.enableDiffuse.value=!0;if(r.parameters.lightMap)k.tAO.texture=\r\nr.parameters.lightMap,k.enableAO.value=!0;if(r.parameters.specularMap)k.tSpecular.texture=C.textures[r.parameters.specularMap],k.enableSpecular.value=!0;k.uDiffuseColor.value.setHex(n);k.uSpecularColor.value.setHex(P);k.uAmbientColor.value.setHex(c);k.uShininess.value=K;if(r.parameters.opacity)k.uOpacity.value=r.parameters.opacity;I=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:k,lights:!0,fog:!0})}else I=new THREE[r.type](r.parameters);C.materials[q]=\r\nI}f();i.callbackSync(C);h()};THREE.UTF8Loader=function(){};\r\nTHREE.UTF8Loader.prototype.load=function(a,b,c){var d=new XMLHttpRequest,f=void 0!==c.scale?c.scale:1,g=void 0!==c.offsetX?c.offsetX:0,e=void 0!==c.offsetY?c.offsetY:0,h=void 0!==c.offsetZ?c.offsetZ:0;d.onreadystatechange=function(){4==d.readyState?200==d.status||0==d.status?THREE.UTF8Loader.prototype.createModel(d.responseText,b,f,g,e,h):console.error(\"THREE.UTF8Loader: Couldn't load [\"+a+\"] [\"+d.status+\"]\"):3!=d.readyState&&2==d.readyState&&d.getResponseHeader(\"Content-Length\")};d.open(\"GET\",a,\r\n!0);d.send(null)};THREE.UTF8Loader.prototype.decompressMesh=function(a){var b=a.charCodeAt(0);57344<=b&&(b-=2048);b++;for(var c=new Float32Array(8*b),d=1,f=0;8>f;f++){for(var g=0,e=0;e<b;++e){var h=a.charCodeAt(e+d),g=g+(h>>1^-(h&1));c[8*e+f]=g}d+=b}b=a.length-d;g=new Uint16Array(b);for(f=e=0;f<b;f++)h=a.charCodeAt(f+d),g[f]=e-h,0==h&&e++;return[c,g]};\r\nTHREE.UTF8Loader.prototype.createModel=function(a,b,c,d,f,g){var e=function(){var b=this;b.materials=[];THREE.Geometry.call(this);var e=THREE.UTF8Loader.prototype.decompressMesh(a),j=[],k=[];(function(a,e,i){for(var j,k,r,s=a.length;i<s;i+=e)j=a[i],k=a[i+1],r=a[i+2],j=j/16383*c,k=k/16383*c,r=r/16383*c,j+=d,k+=f,r+=g,b.vertices.push(new THREE.Vertex(new THREE.Vector3(j,k,r)))})(e[0],8,0);(function(a,b,c){for(var d,e,f=a.length;c<f;c+=b)d=a[c],e=a[c+1],d/=1023,e/=1023,k.push(d,1-e)})(e[0],8,3);(function(a,\r\nb,c){for(var d,e,f,g=a.length;c<g;c+=b)d=a[c],e=a[c+1],f=a[c+2],d=(d-512)/511,e=(e-512)/511,f=(f-512)/511,j.push(d,e,f)})(e[0],8,5);(function(a){var c,d,e,f,g,i,t,w,u,v=a.length;for(c=0;c<v;c+=3){d=a[c];e=a[c+1];f=a[c+2];g=b;w=d;u=e;i=f;var A=j[3*e],F=j[3*e+1],B=j[3*e+2],D=j[3*f],H=j[3*f+1],I=j[3*f+2];t=new THREE.Vector3(j[3*d],j[3*d+1],j[3*d+2]);A=new THREE.Vector3(A,F,B);D=new THREE.Vector3(D,H,I);g.faces.push(new THREE.Face3(w,u,i,[t,A,D],null,0));g=k[2*d];d=k[2*d+1];i=k[2*e];t=k[2*e+1];w=k[2*\r\nf];u=k[2*f+1];f=b.faceVertexUvs[0];e=i;i=t;t=[];t.push(new THREE.UV(g,d));t.push(new THREE.UV(e,i));t.push(new THREE.UV(w,u));f.push(t)}})(e[1]);this.computeCentroids();this.computeFaceNormals()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e)};\r\nTHREE.MarchingCubes=function(a,b){THREE.Object3D.call(this);this.material=b;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasNormal=\r\nthis.hasPos=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount)};this.lerp=function(a,b,f){return a+(b-a)*f};this.VIntX=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h+e*this.delta;b[g+1]=i;b[g+2]=j;f[g]=this.lerp(k[a],k[a+3],e);f[g+1]=this.lerp(k[a+1],k[a+4],e);f[g+2]=this.lerp(k[a+2],k[a+5],e)};this.VIntY=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h;b[g+1]=i+e*this.delta;b[g+2]=j;b=a+3*this.yd;\r\nf[g]=this.lerp(k[a],k[b],e);f[g+1]=this.lerp(k[a+1],k[b+1],e);f[g+2]=this.lerp(k[a+2],k[b+2],e)};this.VIntZ=function(a,b,f,g,e,h,i,j,k,q){e=(e-k)/(q-k);k=this.normal_cache;b[g]=h;b[g+1]=i;b[g+2]=j+e*this.delta;b=a+3*this.zd;f[g]=this.lerp(k[a],k[b],e);f[g+1]=this.lerp(k[a+1],k[b+1],e);f[g+2]=this.lerp(k[a+2],k[b+2],e)};this.compNorm=function(a){var b=3*a;0===this.normal_cache[b]&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],\r\nthis.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,f,g,e,h){var i=g+1,j=g+this.yd,k=g+this.zd,q=i+this.yd,m=i+this.zd,o=g+this.yd+this.zd,p=i+this.yd+this.zd,n=0,r=this.field[g],s=this.field[i],t=this.field[j],w=this.field[q],u=this.field[k],v=this.field[m],A=this.field[o],F=this.field[p];r<e&&(n|=1);s<e&&(n|=2);t<e&&(n|=8);w<e&&(n|=4);u<e&&(n|=16);v<e&&(n|=32);A<e&&(n|=128);F<e&&(n|=64);var B=THREE.edgeTable[n];if(0===B)return 0;var D=this.delta,H=a+\r\nD,I=b+D,D=f+D;B&1&&(this.compNorm(g),this.compNorm(i),this.VIntX(3*g,this.vlist,this.nlist,0,e,a,b,f,r,s));B&2&&(this.compNorm(i),this.compNorm(q),this.VIntY(3*i,this.vlist,this.nlist,3,e,H,b,f,s,w));B&4&&(this.compNorm(j),this.compNorm(q),this.VIntX(3*j,this.vlist,this.nlist,6,e,a,I,f,t,w));B&8&&(this.compNorm(g),this.compNorm(j),this.VIntY(3*g,this.vlist,this.nlist,9,e,a,b,f,r,t));B&16&&(this.compNorm(k),this.compNorm(m),this.VIntX(3*k,this.vlist,this.nlist,12,e,a,b,D,u,v));B&32&&(this.compNorm(m),\r\nthis.compNorm(p),this.VIntY(3*m,this.vlist,this.nlist,15,e,H,b,D,v,F));B&64&&(this.compNorm(o),this.compNorm(p),this.VIntX(3*o,this.vlist,this.nlist,18,e,a,I,D,A,F));B&128&&(this.compNorm(k),this.compNorm(o),this.VIntY(3*k,this.vlist,this.nlist,21,e,a,b,D,u,A));B&256&&(this.compNorm(g),this.compNorm(k),this.VIntZ(3*g,this.vlist,this.nlist,24,e,a,b,f,r,u));B&512&&(this.compNorm(i),this.compNorm(m),this.VIntZ(3*i,this.vlist,this.nlist,27,e,H,b,f,s,v));B&1024&&(this.compNorm(q),this.compNorm(p),this.VIntZ(3*\r\nq,this.vlist,this.nlist,30,e,H,I,f,w,F));B&2048&&(this.compNorm(j),this.compNorm(o),this.VIntZ(3*j,this.vlist,this.nlist,33,e,a,I,f,t,A));n<<=4;for(e=g=0;-1!=THREE.triTable[n+e];)a=n+e,b=a+1,f=a+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[f],h),e+=3,g++;return g};this.posnormtriv=function(a,b,f,g,e,h){var i=3*this.count;this.positionArray[i]=a[f];this.positionArray[i+1]=a[f+1];this.positionArray[i+2]=a[f+2];this.positionArray[i+3]=a[g];this.positionArray[i+\r\n4]=a[g+1];this.positionArray[i+5]=a[g+2];this.positionArray[i+6]=a[e];this.positionArray[i+7]=a[e+1];this.positionArray[i+8]=a[e+2];this.normalArray[i]=b[f];this.normalArray[i+1]=b[f+1];this.normalArray[i+2]=b[f+2];this.normalArray[i+3]=b[g];this.normalArray[i+4]=b[g+1];this.normalArray[i+5]=b[g+2];this.normalArray[i+6]=b[e];this.normalArray[i+7]=b[e+1];this.normalArray[i+8]=b[e+2];this.hasNormal=this.hasPos=!0;this.count+=3;this.count>=this.maxCount-3&&h(this)};this.begin=function(){this.count=0;\r\nthis.hasNormal=this.hasPos=!1};this.end=function(a){if(0!==this.count){for(var b=3*this.count;b<this.positionArray.length;b++)this.positionArray[b]=0;a(this)}};this.addBall=function(a,b,f,g,e){var h=this.size*Math.sqrt(g/e),i=f*this.size,j=b*this.size,k=a*this.size,q=Math.floor(i-h);1>q&&(q=1);i=Math.floor(i+h);i>this.size-1&&(i=this.size-1);var m=Math.floor(j-h);1>m&&(m=1);j=Math.floor(j+h);j>this.size-1&&(j=this.size-1);var o=Math.floor(k-h);1>o&&(o=1);h=Math.floor(k+h);h>this.size-1&&(h=this.size-\r\n1);for(var p,n,r,s,t,w,u,k=q;k<i;k++){r=this.size2*k;t=k/this.size-f;w=t*t;for(q=m;q<j;q++){n=r+this.size*q;p=q/this.size-b;u=p*p;for(p=o;p<h;p++)s=p/this.size-a,s=g/(1.0E-6+s*s+u+w)-e,0<s&&(this.field[n+p]+=s)}}};this.addPlaneX=function(a,b){var f,g,e,h,i,j=this.size,k=this.yd,q=this.zd,m=this.field,o=j*Math.sqrt(a/b);o>j&&(o=j);for(f=0;f<o;f++)if(g=f/j,g*=g,h=a/(1.0E-4+g)-b,0<h)for(g=0;g<j;g++){i=f+g*k;for(e=0;e<j;e++)m[q*e+i]+=h}};this.addPlaneY=function(a,b){var f,g,e,h,i,j,k=this.size,q=this.yd,\r\nm=this.zd,o=this.field,p=k*Math.sqrt(a/b);p>k&&(p=k);for(g=0;g<p;g++)if(f=g/k,f*=f,h=a/(1.0E-4+f)-b,0<h){i=g*q;for(f=0;f<k;f++){j=i+f;for(e=0;e<k;e++)o[m*e+j]+=h}}};this.addPlaneZ=function(a,b){var f,g,e,h,i,j,k=this.size,q=this.yd,m=this.zd,o=this.field,p=k*Math.sqrt(a/b);p>k&&(p=k);for(e=0;e<p;e++)if(f=e/k,f*=f,h=a/(1.0E-4+f)-b,0<h){i=m*e;for(g=0;g<k;g++){j=i+g*q;for(f=0;f<k;f++)o[j+f]+=h}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[3*a]=0,this.field[a]=0};this.render=\r\nfunction(a){this.begin();var b,f,g,e,h,i,j,k,q,m=this.size-2;for(e=1;e<m;e++){q=this.size2*e;j=(e-this.halfsize)/this.halfsize;for(g=1;g<m;g++){k=q+this.size*g;i=(g-this.halfsize)/this.halfsize;for(f=1;f<m;f++)h=(f-this.halfsize)/this.halfsize,b=k+f,this.polygonize(h,i,j,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,f=[];this.render(function(g){var e,h,i,j,k,q,m,o;for(e=0;e<g.count;e++)m=3*e,k=m+1,o=m+2,h=g.positionArray[m],i=g.positionArray[k],j=\r\ng.positionArray[o],q=new THREE.Vector3(h,i,j),h=g.normalArray[m],i=g.normalArray[k],j=g.normalArray[o],m=new THREE.Vector3(h,i,j),m.normalize(),k=new THREE.Vertex(q),b.vertices.push(k),f.push(m);q=g.count/3;for(e=0;e<q;e++)m=3*(a+e),k=m+1,o=m+2,h=f[m],i=f[k],j=f[o],m=new THREE.Face3(m,k,o,[h,i,j]),b.faces.push(m);a+=q;g.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;\r\nTHREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,\r\n1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,\r\n419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);\r\nTHREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,\r\n-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,\r\n-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,\r\n-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,\r\n8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,\r\n-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,\r\n5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,\r\n-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,\r\n10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,\r\n6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,\r\n8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,\r\n2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,\r\n-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,\r\n-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,\r\n-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\r\n1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,\r\n-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,\r\n2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,\r\n4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,\r\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,\r\n2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;\r\nTHREE.LensFlare.prototype.supr=THREE.Object3D.prototype;THREE.LensFlare.prototype.add=function(a,b,c,d,f,g){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===g&&(g=1);void 0===f&&(f=new THREE.Color(16777215));if(void 0===d)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:f,blending:d})};\r\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};\r\nTHREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,f,g,e,h,i,j,k,q,m,o;this.init=function(p){b=p.context;c=p;d=new Float32Array(16);f=new Uint16Array(6);p=0;d[p++]=-1;d[p++]=-1;d[p++]=0;d[p++]=0;d[p++]=1;d[p++]=-1;d[p++]=1;d[p++]=\r\n0;d[p++]=1;d[p++]=1;d[p++]=1;d[p++]=1;d[p++]=-1;d[p++]=1;d[p++]=0;d[p++]=1;p=0;f[p++]=0;f[p++]=1;f[p++]=2;f[p++]=0;f[p++]=2;f[p++]=3;g=b.createBuffer();e=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,\r\nb.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);\r\nb.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(j=!1,k=a(THREE.ShaderFlares.lensFlare)):(j=!0,k=a(THREE.ShaderFlares.lensFlareVertexTexture));q={};m={};q.vertex=b.getAttribLocation(k,\"position\");q.uv=b.getAttribLocation(k,\"uv\");m.renderType=b.getUniformLocation(k,\"renderType\");m.map=b.getUniformLocation(k,\"map\");m.occlusionMap=b.getUniformLocation(k,\"occlusionMap\");m.opacity=b.getUniformLocation(k,\"opacity\");m.color=b.getUniformLocation(k,\r\n\"color\");m.scale=b.getUniformLocation(k,\"scale\");m.rotation=b.getUniformLocation(k,\"rotation\");m.screenPosition=b.getUniformLocation(k,\"screenPosition\");o=!1};this.render=function(a,d,f,s){var a=a.__webglFlares,t=a.length;if(t){var w=new THREE.Vector3,u=s/f,v=0.5*f,A=0.5*s,F=16/s,B=new THREE.Vector2(F*u,F),D=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1),I=m,F=q;b.useProgram(k);o||(b.enableVertexAttribArray(q.vertex),b.enableVertexAttribArray(q.uv),o=!0);b.uniform1i(I.occlusionMap,0);b.uniform1i(I.map,\r\n1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(F.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(F.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.disable(b.CULL_FACE);b.depthMask(!1);var Q,P,L,K,O;for(Q=0;Q<t;Q++)if(F=16/s,B.set(F*u,F),K=a[Q],w.set(K.matrixWorld.n14,K.matrixWorld.n24,K.matrixWorld.n34),d.matrixWorldInverse.multiplyVector3(w),d.projectionMatrix.multiplyVector3(w),D.copy(w),H.x=D.x*v+v,H.y=D.y*A+A,j||0<H.x&&H.x<f&&0<H.y&&H.y<s){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,\r\nh);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x-8,H.y-8,16,16,0);b.uniform1i(I.renderType,0);b.uniform2f(I.scale,B.x,B.y);b.uniform3f(I.screenPosition,D.x,D.y,D.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x-8,H.y-8,16,16,0);b.uniform1i(I.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,\r\n6,b.UNSIGNED_SHORT,0);K.positionScreen.copy(D);K.customUpdateCallback?K.customUpdateCallback(K):K.updateLensFlares();b.uniform1i(I.renderType,2);b.enable(b.BLEND);for(P=0,L=K.lensFlares.length;P<L;P++)if(O=K.lensFlares[P],0.001<O.opacity&&0.001<O.scale)D.x=O.x,D.y=O.y,D.z=O.z,F=O.size*O.scale/s,B.x=F*u,B.y=F,b.uniform3f(I.screenPosition,D.x,D.y,D.z),b.uniform2f(I.scale,B.x,B.y),b.uniform1f(I.rotation,O.rotation),b.uniform1f(I.opacity,O.opacity),b.uniform3f(I.color,O.color.r,O.color.g,O.color.b),c.setBlending(O.blending),\r\nc.setTexture(O.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};\r\nTHREE.ShadowMapPlugin=function(){var a,b,c,d,f=new THREE.Frustum,g=new THREE.Matrix4,e=new THREE.Vector3,h=new THREE.Vector3;this.init=function(e){a=e.context;b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,\r\nc){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(i,j){var k,q,m,o,p,n,r,s,t,w=[];o=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.FRONT);b.setDepthTest(!0);for(k=0,q=i.__lights.length;k<q;k++)if(m=i.__lights[k],m.castShadow)if(m instanceof THREE.DirectionalLight&&m.shadowCascade)for(p=0;p<m.shadowCascadeCount;p++){var u;if(m.shadowCascadeArray[p])u=m.shadowCascadeArray[p];else{t=m;r=p;u=new THREE.DirectionalLight;u.isVirtual=\r\n!0;u.onlyShadow=!0;u.castShadow=!0;u.shadowCameraNear=t.shadowCameraNear;u.shadowCameraFar=t.shadowCameraFar;u.shadowCameraLeft=t.shadowCameraLeft;u.shadowCameraRight=t.shadowCameraRight;u.shadowCameraBottom=t.shadowCameraBottom;u.shadowCameraTop=t.shadowCameraTop;u.shadowCameraVisible=t.shadowCameraVisible;u.shadowDarkness=t.shadowDarkness;u.shadowBias=t.shadowCascadeBias[r];u.shadowMapWidth=t.shadowCascadeWidth[r];u.shadowMapHeight=t.shadowCascadeHeight[r];u.pointsWorld=[];u.pointsFrustum=[];s=\r\nu.pointsWorld;n=u.pointsFrustum;for(var v=0;8>v;v++)s[v]=new THREE.Vector3,n[v]=new THREE.Vector3;s=t.shadowCascadeNearZ[r];t=t.shadowCascadeFarZ[r];n[0].set(-1,-1,s);n[1].set(1,-1,s);n[2].set(-1,1,s);n[3].set(1,1,s);n[4].set(-1,-1,t);n[5].set(1,-1,t);n[6].set(-1,1,t);n[7].set(1,1,t);u.originalCamera=j;n=new THREE.Gyroscope;n.position=m.shadowCascadeOffset;n.add(u);n.add(u.target);j.add(n);m.shadowCascadeArray[p]=u;console.log(\"Created virtualLight\",u)}r=m;s=p;t=r.shadowCascadeArray[s];t.position.copy(r.position);\r\nt.target.position.copy(r.target.position);t.lookAt(t.target);t.shadowCameraVisible=r.shadowCameraVisible;t.shadowDarkness=r.shadowDarkness;t.shadowBias=r.shadowCascadeBias[s];n=r.shadowCascadeNearZ[s];r=r.shadowCascadeFarZ[s];t=t.pointsFrustum;t[0].z=n;t[1].z=n;t[2].z=n;t[3].z=n;t[4].z=r;t[5].z=r;t[6].z=r;t[7].z=r;w[o]=u;o++}else w[o]=m,o++;for(k=0,q=w.length;k<q;k++){m=w[k];if(!m.shadowMap)m.shadowMap=new THREE.WebGLRenderTarget(m.shadowMapWidth,m.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,\r\nformat:THREE.RGBAFormat}),m.shadowMapSize=new THREE.Vector2(m.shadowMapWidth,m.shadowMapHeight),m.shadowMatrix=new THREE.Matrix4;if(!m.shadowCamera){if(m instanceof THREE.SpotLight)m.shadowCamera=new THREE.PerspectiveCamera(m.shadowCameraFov,m.shadowMapWidth/m.shadowMapHeight,m.shadowCameraNear,m.shadowCameraFar);else if(m instanceof THREE.DirectionalLight)m.shadowCamera=new THREE.OrthographicCamera(m.shadowCameraLeft,m.shadowCameraRight,m.shadowCameraTop,m.shadowCameraBottom,m.shadowCameraNear,m.shadowCameraFar);\r\nelse{console.error(\"Unsupported light type for shadow\");continue}i.add(m.shadowCamera);b.autoUpdateScene&&i.updateMatrixWorld()}if(m.shadowCameraVisible&&!m.cameraHelper)m.cameraHelper=new THREE.CameraHelper(m.shadowCamera),m.shadowCamera.add(m.cameraHelper);if(m.isVirtual&&u.originalCamera==j){p=j;o=m.shadowCamera;n=m.pointsFrustum;t=m.pointsWorld;e.set(Infinity,Infinity,Infinity);h.set(-Infinity,-Infinity,-Infinity);for(r=0;8>r;r++){s=t[r];s.copy(n[r]);THREE.ShadowMapPlugin.__projector.unprojectVector(s,\r\np);o.matrixWorldInverse.multiplyVector3(s);if(s.x<e.x)e.x=s.x;if(s.x>h.x)h.x=s.x;if(s.y<e.y)e.y=s.y;if(s.y>h.y)h.y=s.y;if(s.z<e.z)e.z=s.z;if(s.z>h.z)h.z=s.z}o.left=e.x;o.right=h.x;o.top=h.y;o.bottom=e.y;o.updateProjectionMatrix()}o=m.shadowMap;n=m.shadowMatrix;p=m.shadowCamera;p.position.copy(m.matrixWorld.getPosition());p.lookAt(m.target.matrixWorld.getPosition());p.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);if(m.cameraHelper)m.cameraHelper.lines.visible=m.shadowCameraVisible;\r\nm.shadowCameraVisible&&m.cameraHelper.update(m.shadowCamera);n.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);n.multiplySelf(p.projectionMatrix);n.multiplySelf(p.matrixWorldInverse);if(!p._viewMatrixArray)p._viewMatrixArray=new Float32Array(16);p.matrixWorldInverse.flattenToArray(p._viewMatrixArray);if(!p._projectionMatrixArray)p._projectionMatrixArray=new Float32Array(16);p.projectionMatrix.flattenToArray(p._projectionMatrixArray);g.multiply(p.projectionMatrix,p.matrixWorldInverse);f.setFromMatrix(g);\r\nb.setRenderTarget(o);b.clear();t=i.__webglObjects;for(m=0,o=t.length;m<o;m++)if(r=t[m],n=r.object,r.render=!1,n.visible&&n.castShadow&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||f.contains(n)))n.matrixWorld.flattenToArray(n._objectMatrixArray),n._modelViewMatrix.multiplyToArray(p.matrixWorldInverse,n.matrixWorld,n._modelViewMatrixArray),r.render=!0;for(m=0,o=t.length;m<o;m++)if(r=t[m],r.render)n=r.object,r=r.buffer,b.setObjectFaces(n),s=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?\r\nd:c,r instanceof THREE.BufferGeometry?b.renderBufferDirect(p,i.__lights,null,s,r,n):b.renderBuffer(p,i.__lights,null,s,r,n);t=i.__webglObjectsImmediate;for(m=0,o=t.length;m<o;m++)r=t[m],n=r.object,n.visible&&n.castShadow&&(n.matrixAutoUpdate&&n.matrixWorld.flattenToArray(n._objectMatrixArray),n._modelViewMatrix.multiplyToArray(p.matrixWorldInverse,n.matrixWorld,n._modelViewMatrixArray),b.renderImmediateObject(p,i.__lights,null,c,n))}k=b.getClearColor();q=b.getClearAlpha();a.clearColor(k.r,k.g,k.b,\r\nq);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;\r\nTHREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,f,g,e,h,i,j,k;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);f=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=0;d[a++]=-1;d[a++]=1;d[a++]=0;a=d[a++]=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;g=b.createBuffer();e=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,\r\ne);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),o=b.createShader(b.FRAGMENT_SHADER),p=b.createShader(b.VERTEX_SHADER);b.shaderSource(o,a.fragmentShader);b.shaderSource(p,a.vertexShader);b.compileShader(o);b.compileShader(p);b.attachShader(m,o);b.attachShader(m,p);b.linkProgram(m);h=m;i={};j={};i.position=b.getAttribLocation(h,\"position\");i.uv=b.getAttribLocation(h,\"uv\");j.uvOffset=b.getUniformLocation(h,\"uvOffset\");j.uvScale=b.getUniformLocation(h,\r\n\"uvScale\");j.rotation=b.getUniformLocation(h,\"rotation\");j.scale=b.getUniformLocation(h,\"scale\");j.alignment=b.getUniformLocation(h,\"alignment\");j.color=b.getUniformLocation(h,\"color\");j.map=b.getUniformLocation(h,\"map\");j.opacity=b.getUniformLocation(h,\"opacity\");j.useScreenCoordinates=b.getUniformLocation(h,\"useScreenCoordinates\");j.affectedByDistance=b.getUniformLocation(h,\"affectedByDistance\");j.screenPosition=b.getUniformLocation(h,\"screenPosition\");j.modelViewMatrix=b.getUniformLocation(h,\"modelViewMatrix\");\r\nj.projectionMatrix=b.getUniformLocation(h,\"projectionMatrix\");k=!1};this.render=function(d,f,o,p){var d=d.__webglSprites,n=d.length;if(n){var r=i,s=j,t=p/o,o=0.5*o,w=0.5*p,u=!0;b.useProgram(h);k||(b.enableVertexAttribArray(r.position),b.enableVertexAttribArray(r.uv),k=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(r.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(r.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e);b.uniformMatrix4fv(s.projectionMatrix,\r\n!1,f._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(s.map,0);for(var v,A=[],r=0;r<n;r++)if(v=d[r],v.visible&&0!==v.opacity)v.useScreenCoordinates?v.z=-v.position.z:(v._modelViewMatrix.multiplyToArray(f.matrixWorldInverse,v.matrixWorld,v._modelViewMatrixArray),v.z=-v._modelViewMatrix.n34);d.sort(a);for(r=0;r<n;r++)v=d[r],v.visible&&0!==v.opacity&&v.map&&v.map.image&&v.map.image.width&&(v.useScreenCoordinates?(b.uniform1i(s.useScreenCoordinates,1),b.uniform3f(s.screenPosition,(v.position.x-\r\no)/o,(w-v.position.y)/w,Math.max(0,Math.min(1,v.position.z)))):(b.uniform1i(s.useScreenCoordinates,0),b.uniform1i(s.affectedByDistance,v.affectedByDistance?1:0),b.uniformMatrix4fv(s.modelViewMatrix,!1,v._modelViewMatrixArray)),f=v.map.image.width/(v.scaleByViewport?p:1),A[0]=f*t*v.scale.x,A[1]=f*v.scale.y,b.uniform2f(s.uvScale,v.uvScale.x,v.uvScale.y),b.uniform2f(s.uvOffset,v.uvOffset.x,v.uvOffset.y),b.uniform2f(s.alignment,v.alignment.x,v.alignment.y),b.uniform1f(s.opacity,v.opacity),b.uniform3f(s.color,\r\nv.color.r,v.color.g,v.color.b),b.uniform1f(s.rotation,v.rotation),b.uniform2fv(s.scale,A),v.mergeWith3D&&!u?(b.enable(b.DEPTH_TEST),u=!0):!v.mergeWith3D&&u&&(b.disable(b.DEPTH_TEST),u=!1),c.setBlending(v.blending),c.setTexture(v.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};\r\nif(THREE.WebGLRenderer)THREE.AnaglyphWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoUpdateScene=!1;var b=this,c=this.setSize,d=this.render,f=new THREE.PerspectiveCamera,g=new THREE.PerspectiveCamera,e=new THREE.Matrix4,h=new THREE.Matrix4,i,j,k,q;f.matrixAutoUpdate=g.matrixAutoUpdate=!1;var a={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},m=new THREE.WebGLRenderTarget(512,512,a),o=new THREE.WebGLRenderTarget(512,512,a),p=new THREE.PerspectiveCamera(53,\r\n1,1,1E4);p.position.z=2;var a=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:\"t\",value:0,texture:m},mapRight:{type:\"t\",value:1,texture:o}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\nvUv = vec2( uv.x, 1.0 - uv.y );\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform sampler2D mapLeft;\\nuniform sampler2D mapRight;\\nvarying vec2 vUv;\\nvoid main() {\\nvec4 colorL, colorR;\\nvec2 uv = vUv;\\ncolorL = texture2D( mapLeft, uv );\\ncolorR = texture2D( mapRight, uv );\\ngl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\\n}\"}),\r\nn=new THREE.Scene;n.add(new THREE.Mesh(new THREE.PlaneGeometry(2,2),a));n.add(p);this.setSize=function(a,d){c.call(b,a,d);m.width=a;m.height=d;o.width=a;o.height=d};this.render=function(a,c){a.updateMatrixWorld();if(i!==c.aspect||j!==c.near||k!==c.far||q!==c.fov){i=c.aspect;j=c.near;k=c.far;q=c.fov;var t=c.projectionMatrix.clone(),w=0.5*(125/30),u=w*j/125,v=j*Math.tan(q*Math.PI/360),A;e.n14=w;h.n14=-w;w=-v*i+u;A=v*i+u;t.n11=2*j/(A-w);t.n13=(A+w)/(A-w);f.projectionMatrix.copy(t);w=-v*i-u;A=v*i-u;t.n11=\r\n2*j/(A-w);t.n13=(A+w)/(A-w);g.projectionMatrix.copy(t)}f.matrixWorld.copy(c.matrixWorld).multiplySelf(h);f.position.copy(c.position);f.near=c.near;f.far=c.far;d.call(b,a,f,m,!0);g.matrixWorld.copy(c.matrixWorld).multiplySelf(e);g.position.copy(c.position);g.near=c.near;g.far=c.far;d.call(b,a,g,o,!0);n.updateMatrixWorld();d.call(b,n,p)}};\r\nif(THREE.WebGLRenderer)THREE.CrosseyedWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoClear=!1;var b=this,c=this.setSize,d=this.render,f,g,e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3(0,0,0);var h=new THREE.PerspectiveCamera;h.target=new THREE.Vector3(0,0,0);b.separation=10;if(a&&void 0!==a.separation)b.separation=a.separation;this.setSize=function(a,d){c.call(b,a,d);f=a/2;g=d};this.render=function(a,c){this.clear();e.fov=c.fov;e.aspect=0.5*c.aspect;e.near=c.near;e.far=\r\nc.far;e.updateProjectionMatrix();e.position.copy(c.position);e.target.copy(c.target);e.translateX(b.separation);e.lookAt(e.target);h.projectionMatrix=e.projectionMatrix;h.position.copy(c.position);h.target.copy(c.target);h.translateX(-b.separation);h.lookAt(h.target);this.setViewport(0,0,f,g);d.call(b,a,e);this.setViewport(f,0,f,g);d.call(b,a,h,!1)}};\r\nTHREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility = (       visibility.r / 9.0 ) *\\n( 1.0 - visibility.g / 9.0 ) *\\n(       visibility.b / 9.0 ) *\\n( 1.0 - visibility.a / 9.0 );\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\r\nlensFlare:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}};\r\nTHREE.ShaderSprite={sprite:{vertexShader:\"uniform int useScreenCoordinates;\\nuniform int affectedByDistance;\\nuniform vec3 screenPosition;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 alignment;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position + alignment;\\nvec2 rotatedPosition;\\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\\nvec4 finalPosition;\\nif( useScreenCoordinates != 0 ) {\\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\\n} else {\\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\\n}\\ngl_Position = finalPosition;\\n}\",\r\nfragmentShader:\"precision mediump float;\\nuniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\n}\"}};\r\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = THREE","var jade = require(\"C:\\\\Users\\\\Sokrates\\\\Eigene Repos\\\\webpack-development\\\\node_modules\\\\jade-loader\\\\node_modules\\\\jade\\\\lib\\\\runtime\");\n\nmodule.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nvar self = locals || {};\nvar interp;\nbuf.push('<h1>three.js canvas - camera - orthographic example</h1><div class=\"three-container\"></div><h2>test1/index.js</h2><pre class=\"pre-scrollable\"><code>');\nvar __val__ = require(\"!raw!./index.js\")\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</code></pre><h2>test1/content.jade</h2><pre><code>');\nvar __val__ = require(\"!raw!./content.jade\")\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</code></pre>');return buf.join(\"\");\n}","module.exports = \"h1 three.js canvas - camera - orthographic example\\r\\n.three-container\\r\\nh2 test1/index.js\\r\\npre.pre-scrollable: code= require(\\\"!raw!./index.js\\\")\\r\\nh2 test1/content.jade\\r\\npre: code= require(\\\"!raw!./content.jade\\\")\"","module.exports = \"exports.render = function() {\\r\\n\\treturn require(\\\"./content.jade\\\")();\\r\\n};\\r\\n\\r\\nexports.start = function() {\\r\\n\\tvar THREE = require(\\\"three\\\");\\r\\n\\trequire(\\\"jquery\\\");\\r\\n\\r\\n\\t// three.js canvas - camera - orthographic example\\r\\n\\r\\n\\tvar container, stats;\\r\\n\\tvar camera, scene, renderer;\\r\\n\\r\\n\\tinit();\\r\\n\\tanimate();\\r\\n\\r\\n\\tfunction init() {\\r\\n\\r\\n\\t\\tcamera = new THREE.OrthographicCamera( -400, 400, 400, -400, - 2000, 1000 );\\r\\n\\t\\tcamera.position.x = 200;\\r\\n\\t\\tcamera.position.y = 100;\\r\\n\\t\\tcamera.position.z = 200;\\r\\n\\r\\n\\t\\tscene = new THREE.Scene();\\r\\n\\r\\n\\t\\tscene.add( camera );\\r\\n\\r\\n\\t\\t// Grid\\r\\n\\r\\n\\t\\tvar geometry = new THREE.Geometry();\\r\\n\\t\\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( - 500, 0, 0 ) ) );\\r\\n\\t\\tgeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 500, 0, 0 ) ) );\\r\\n\\r\\n\\t\\tfor ( var i = 0; i <= 20; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\\r\\n\\t\\t\\tline.position.z = ( i * 50 ) - 500;\\r\\n\\t\\t\\tscene.add( line );\\r\\n\\r\\n\\t\\t\\tline = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\\r\\n\\t\\t\\tline.position.x = ( i * 50 ) - 500;\\r\\n\\t\\t\\tline.rotation.y = 90 * Math.PI / 180;\\r\\n\\t\\t\\tscene.add( line );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Cubes\\r\\n\\r\\n\\t\\tgeometry = new THREE.CubeGeometry( 50, 50, 50 );\\r\\n\\t\\tvar material = new THREE.MeshLambertMaterial( { color: 0xffffff, shading: THREE.FlatShading, overdraw: true } );\\r\\n\\r\\n\\t\\tfor ( i = 0; i < 100; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar cube = new THREE.Mesh( geometry, material );\\r\\n\\r\\n\\t\\t\\tcube.scale.y = Math.floor( Math.random() * 2 + 1 );\\r\\n\\r\\n\\t\\t\\tcube.position.x = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\\r\\n\\t\\t\\tcube.position.y = ( cube.scale.y * 50 ) / 2;\\r\\n\\t\\t\\tcube.position.z = Math.floor( ( Math.random() * 1000 - 500 ) / 50 ) * 50 + 25;\\r\\n\\r\\n\\t\\t\\tscene.add(cube);\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Lights\\r\\n\\r\\n\\t\\tvar ambientLight = new THREE.AmbientLight( Math.random() * 0x10 );\\r\\n\\t\\tscene.add( ambientLight );\\r\\n\\r\\n\\t\\tvar directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\\r\\n\\t\\tdirectionalLight.position.x = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.y = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.z = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.normalize();\\r\\n\\t\\tscene.add( directionalLight );\\r\\n\\r\\n\\t\\tdirectionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );\\r\\n\\t\\tdirectionalLight.position.x = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.y = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.z = Math.random() - 0.5;\\r\\n\\t\\tdirectionalLight.position.normalize();\\r\\n\\t\\tscene.add( directionalLight );\\r\\n\\r\\n\\t\\trenderer = new THREE.CanvasRenderer();\\r\\n\\t\\trenderer.setSize( 400, 400 );\\r\\n\\r\\n\\t\\t$(\\\".three-container\\\").append(renderer.domElement);\\r\\n\\t}\\r\\n\\r\\n\\tfunction animate() {\\r\\n\\t\\tif($(\\\".three-container\\\").length > 0) {\\r\\n\\t\\t\\trequestAnimationFrame( animate );\\r\\n\\t\\t\\trender();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction render() {\\r\\n\\t\\tvar timer = new Date().getTime() * 0.0001;\\r\\n\\r\\n\\t\\tcamera.position.x = Math.cos( timer ) * 200;\\r\\n\\t\\tcamera.position.z = Math.sin( timer ) * 200;\\r\\n\\t\\tcamera.lookAt( scene.position );\\r\\n\\r\\n\\t\\trenderer.render( scene, camera );\\r\\n\\t}\\r\\n};\""],"sourceRoot":"webpack-module://"}