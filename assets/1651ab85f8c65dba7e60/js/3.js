webpackJsonp([3],{22:function(e,t,r){var i=r(1);e.exports=function(e,t,n,o,a){t=t||i.attrs,n=n||i.escape,o=o||i.rethrow,a=a||i.merge;var s=[];s.push('<ul class="nav nav-tabs"><li class="active"><a href="#app" data-toggle="tab"><i class="icon-off"></i> app.js</a></li><li><a href="#body" data-toggle="tab"><i class="icon-leaf"></i> body.jade</a></li><li><a href="#sources" data-toggle="tab"><i class="icon-file"></i> sources.jade</a></li></ul><div class="tab-content"><div id="app" class="tab-pane active"><pre class="pre-scrollable"><code>');var l=r(33);s.push(n(null==l?"":l)),s.push('</code></pre></div><div id="body" class="tab-pane"><pre class="pre-scrollable"><code>');var l=r(28);s.push(n(null==l?"":l)),s.push('</code></pre></div><div id="sources" class="tab-pane"><pre class="pre-scrollable"><code>');var l=r(30);return s.push(n(null==l?"":l)),s.push("</code></pre></div></div>"),s.join("")}},28:function(e){e.exports='- require("mybootstrap");\r\n.navbar.navbar-fixed-top\r\n	.navbar-inner\r\n		.container\r\n			a.btn.btn-navbar(data-toggle="collapse", data-target=".nav-collapse")\r\n				span.icon-bar\r\n				span.icon-bar\r\n				span.icon-bar\r\n			a.brand(href="#") webpack\r\n			.nav-collapse\r\n				ul.nav\r\n					li: a(href="#").buttons.button-home Home\r\n					li: a(href="#").buttons.button-test1 Test1\r\n					li: a(href="#").buttons.button-test2 Test2\r\n					li: a(href="#").buttons.button-test3 Test3\r\n.container\r\n	.row\r\n		.span8\r\n			.page-header\r\n				h1\r\n					| webpack\r\n					small  example app\r\n			p Click the navigation items in the top bar to change right content.\r\n			p The javascript for the different contents is loaded on demand by the webpack <em>require.ensure</em> method.\r\n			p Watch the outgoing requests in your browsers dev tools.\r\n			h2 source\r\n			- var gh = "http://github.com/webpack/";\r\n			- var sourceExample = gh+"example-app/"\r\n			- var sourceWebpack = gh+"webpack/"\r\n			p: a(href=sourceExample)\r\n				b\r\n					| example-app on github\r\n			p: a(href=sourceWebpack)\r\n				b\r\n					| webpack on github\r\n			h2 Choosen sources\r\n			#choosen-sources!= require("./loading.jade")();\r\n		.span4\r\n			.page-header\r\n				h1 status\r\n					small  loaded chunks\r\n			ul.chunks\r\n				li!= require("./chunk.jade")({chunk: 0});\r\n			if module.hot\r\n				.page-header\r\n					h1 HMR\r\n						small  hot module replacement\r\n				p\r\n					b Status:\r\n					= " "\r\n					span.hot-status idle\r\n				p.hot-result\r\n				button.btn.hot-check Check for update\r\n				button.btn.hot-apply Apply update\r\n				label.checkbox\r\n					input.hot-strategy(type="checkbox", checked=true)\r\n					|  Replace current page\r\n			.page-header\r\n				h1 content\r\n					small  some test content\r\n			.content'},30:function(e){e.exports='ul.nav.nav-tabs\r\n	li.active\r\n		a(href="#app", data-toggle="tab")\r\n			i.icon-off\r\n			|  app.js\r\n	li\r\n		a(href="#body", data-toggle="tab")\r\n			i.icon-leaf\r\n			|  body.jade\r\n	li\r\n		a(href="#sources", data-toggle="tab")\r\n			i.icon-file\r\n			|  sources.jade\r\n.tab-content\r\n	#app.tab-pane.active\r\n		pre.pre-scrollable\r\n			code= require("!raw!./app.js")\r\n	#body.tab-pane\r\n		pre.pre-scrollable\r\n			code= require("!raw!./body.jade")\r\n	#sources.tab-pane\r\n		pre.pre-scrollable\r\n			code= require("!raw!./sources.jade")'},33:function(e){e.exports='var $ = require("jquery");\r\n\r\nrequire("./style.css");\r\nvar body = require("./body.jade")();\r\nrequire("bundle!./sources.jade")(function(sources) {\r\n	$(function() {\r\n		$("#choosen-sources").html(sources());\r\n	});\r\n});\r\n$(function() {\r\n	document.title = "webpack example-app";\r\n	$("body").html(body);\r\n	$(".button-home").click(loadPage.bind(null, "home"));\r\n	$(".button-test1").click(loadPage.bind(null, "test1"));\r\n	$(".button-test2").click(loadPage.bind(null, "test2"));\r\n	$(".button-test3").click(loadPage.bind(null, "test3"));\r\n	if(module.hot) {\r\n		module.hot.setApplyOnUpdate(false);\r\n		var hotResult = $(".hot-result");\r\n		$(".hot-check").click(function() {\r\n			try {\r\n				module.hot.check(function(err, updatedModules) {\r\n					if(err) return hotResult.text(err.toString());\r\n					if(updatedModules) hotResult.text("Updated modules: " + updatedModules.join(", "));\r\n				});\r\n			} catch(e) { hotResult.text(e.toString()); }\r\n		});\r\n		$(".hot-apply").click(function() {\r\n			try {\r\n				module.hot.apply(function(err, renewedModules) {\r\n					if(err) return hotResult.text(err.toString());\r\n					if(renewedModules) hotResult.text("Renewed modules: " + renewedModules.join(", "));\r\n				});\r\n			} catch(e) { hotResult.text(e.toString()); }\r\n		});\r\n		module.hot.status(function(newStatus, oldStatus) {\r\n			$(".hot-status").text(newStatus);\r\n		});\r\n	}\r\n});\r\n\r\nvar isLoading = false;\r\nfunction loading(name) {\r\n	if(isLoading) return true;\r\n	if($(".button-"+name).parent().hasClass("active")) return true;\r\n	isLoading = true;\r\n	$(".buttons").parent().removeClass("active");\r\n	$(".button-"+name).parent().addClass("active");\r\n	$(".content").html(require("./loading.jade"));\r\n}\r\n\r\nfunction finished() {\r\n	isLoading = false;\r\n}\r\n\r\nvar pages = require("./pages");\r\n\r\nvar currentPage, currentPageName;\r\nfunction loadPage(name) {\r\n	if(loading(name)) return;\r\n	pages.getPage(name, function(item) {\r\n		currentPageName = name;\r\n		currentPage = item;\r\n		finished();\r\n		if(typeof item === "function") {\r\n			$(".content").html(item());\r\n		} else {\r\n			$(".content").html(item.render());\r\n			item.start();\r\n		}\r\n	});\r\n	return false;\r\n}\r\n\r\nif(module.hot) {\r\n	module.hot.accept("./pages", function() {\r\n		pages = require("./pages");\r\n		if(!$(".hot-strategy").prop("checked")) return;\r\n		pages.getPage(currentPageName, function(item) {\r\n			if(currentPage !== item) {\r\n				loading("");\r\n				finished();\r\n				loadPage(currentPageName);\r\n			}\r\n		});\r\n	});\r\n}\r\n\r\n// HACK to get chunk loading info\r\nvar oldWebpackJsonp = window.webpackJsonp;\r\nvar list = [];\r\nwindow.webpackJsonp = function(chunk, modules) {\r\n	list.push(chunk);\r\n	$(function() {\r\n		append();\r\n		function append() {\r\n			if($(".chunks").length === 0) {\r\n				return setTimeout(append, 100);\r\n			}\r\n			if(list.length === 0) return;\r\n			var chunk = list.shift();\r\n			var li = $("<li>")\r\n				.html(require("./chunk.jade")\r\n					({chunk: chunk}));\r\n			$(".chunks").append(li);\r\n			append();\r\n		}\r\n	});\r\n	oldWebpackJsonp.apply(null, arguments);\r\n};'}});
/*
//@ sourceMappingURL=1651ab85f8c65dba7e60/js/3.js.map
*/